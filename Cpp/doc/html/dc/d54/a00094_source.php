<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Hot Dog QUIZ: tree.hpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Hot Dog QUIZ
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.php"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../namespaces.php"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.php"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.php"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.php"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.php"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('dc/d54/a00094_source.php','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">tree.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../dc/d54/a00094.php">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#ifndef HEADER_TREE</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#define HEADER_TREE</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../db/df8/a00076.php">maths.hpp</a>&quot;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#ae4fbe8a34f580e60f6ed9f42c245489c">   13</a></span>&#160;<span class="preprocessor">#define RIGHT_NODE 1;</span></div><div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#ab2ab3f795890edd232dacd1bf163ef02">   14</a></span>&#160;<span class="preprocessor">#define LEFT_NODE -1;</span></div><div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#adfa80cc857b10a19d8c8146856d390fe">   15</a></span>&#160;<span class="preprocessor">#define NO_NODE 0;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#a0a1e73288e0ceb794c65bd86a4b7f231">   17</a></span>&#160;<span class="keyword">typedef</span> <span class="keywordtype">long</span> <span class="keywordtype">double</span> <a class="code" href="../../dc/d54/a00094.php#a0a1e73288e0ceb794c65bd86a4b7f231">NodeWeight</a>;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="../../dc/d3c/a00028.php">   23</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../dc/d3c/a00028.php">Node</a> {</div><div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="../../dc/d3c/a00028.php#a440411e958356c1d3912dce01ae74edc">   24</a></span>&#160;    T <a class="code" href="../../dc/d3c/a00028.php#a440411e958356c1d3912dce01ae74edc">values</a>;</div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="../../dc/d3c/a00028.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">   25</a></span>&#160;    <a class="code" href="../../dc/d54/a00094.php#a0a1e73288e0ceb794c65bd86a4b7f231">NodeWeight</a> <a class="code" href="../../dc/d3c/a00028.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a>;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="../../dc/d3c/a00028.php#a6faa1b5c8a9e19348d0bfef6232c90cb">   27</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../dc/d3c/a00028.php#a6faa1b5c8a9e19348d0bfef6232c90cb">initialized</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">   29</a></span>&#160;    <a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* <a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a> = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">   30</a></span>&#160;    <a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* <a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a> = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;};</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#a150358d1355a1feec0dd9c239e528ba5">   41</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/d54/a00094.php#a150358d1355a1feec0dd9c239e528ba5">printNode</a>(<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* node, <span class="keywordtype">long</span> <span class="keywordtype">int</span> index = -1){</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">long</span> <span class="keywordtype">int</span> i{0}; i &lt; index; ++i){</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    }</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; node-&gt;<a class="code" href="../../dc/d3c/a00028.php#a440411e958356c1d3912dce01ae74edc">values</a> &lt;&lt; <span class="stringliteral">&quot;&#39; -&gt; &quot;</span> &lt;&lt; node-&gt;<a class="code" href="../../dc/d3c/a00028.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a> &lt;&lt; std::endl;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;}</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#a6ba86e01e66ef0911ee1fd3e3a1db1ca">   57</a></span>&#160;<span class="keywordtype">short</span> <a class="code" href="../../dc/d54/a00094.php#a6ba86e01e66ef0911ee1fd3e3a1db1ca">sorter</a>(std::pair&lt;T, NodeWeight&gt; datas, std::pair&lt;T, NodeWeight&gt; nodeDatas){</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keyword">auto</span> w1 = datas.second;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">auto</span> w2 = nodeDatas.second;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">if</span>(w1 &lt; w2){</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dc/d54/a00094.php#ab2ab3f795890edd232dacd1bf163ef02">LEFT_NODE</a>;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(w1 &gt; w2){</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dc/d54/a00094.php#ae4fbe8a34f580e60f6ed9f42c245489c">RIGHT_NODE</a>;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dc/d54/a00094.php#adfa80cc857b10a19d8c8146856d390fe">NO_NODE</a>;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    }</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T, <span class="keyword">class</span> U&gt;</div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#a0d56f2cd35d9fdf524dc21c2fd243233">   77</a></span>&#160;std::vector&lt;std::pair&lt;T, NodeWeight&gt;&gt; <a class="code" href="../../dc/d54/a00094.php#a0d56f2cd35d9fdf524dc21c2fd243233">convertInTreeValues</a>(std::vector&lt;std::pair&lt;T, U&gt;&gt; in){</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    std::vector&lt;std::pair&lt;T, NodeWeight&gt;&gt; out;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> vals : in){</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        T value = vals.first;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <a class="code" href="../../dc/d54/a00094.php#a0a1e73288e0ceb794c65bd86a4b7f231">NodeWeight</a> <a class="code" href="../../dc/d3c/a00028.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a> = <span class="keyword">static_cast&lt;</span><a class="code" href="../../dc/d54/a00094.php#a0a1e73288e0ceb794c65bd86a4b7f231">NodeWeight</a><span class="keyword">&gt;</span>(vals.second);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        out.push_back(std::make_pair(value, weight));</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    }</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">return</span> out;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#a8bcdc1113d4578db82209cd9c38d8cb1">   98</a></span>&#160;<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* <a class="code" href="../../dc/d54/a00094.php#a8bcdc1113d4578db82209cd9c38d8cb1">createChild</a>(T <a class="code" href="../../dc/d3c/a00028.php#a440411e958356c1d3912dce01ae74edc">values</a>, <a class="code" href="../../dc/d54/a00094.php#a0a1e73288e0ceb794c65bd86a4b7f231">NodeWeight</a> <a class="code" href="../../dc/d3c/a00028.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a>){</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* child = <span class="keyword">new</span> <a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    child-&gt;<a class="code" href="../../dc/d3c/a00028.php#a440411e958356c1d3912dce01ae74edc">values</a> = <a class="code" href="../../dc/d3c/a00028.php#a440411e958356c1d3912dce01ae74edc">values</a>;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    child-&gt;<a class="code" href="../../dc/d3c/a00028.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a> = <a class="code" href="../../dc/d3c/a00028.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a>;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    child-&gt;<a class="code" href="../../dc/d3c/a00028.php#a6faa1b5c8a9e19348d0bfef6232c90cb">initialized</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">return</span> child;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;}</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#a43dc65d8aebbcca6dd43ec0a2b0637b6">  117</a></span>&#160;<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* <a class="code" href="../../dc/d54/a00094.php#a43dc65d8aebbcca6dd43ec0a2b0637b6">insert</a>(std::pair&lt;T, NodeWeight&gt; datas, <a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* node, <span class="keywordtype">short</span>(*comparator)(std::pair&lt;T, NodeWeight&gt;, std::pair&lt;T, NodeWeight&gt;)){</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* root = node;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordtype">bool</span> created{<span class="keyword">false</span>};</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    T <a class="code" href="../../dc/d3c/a00028.php#a440411e958356c1d3912dce01ae74edc">values</a> = datas.first;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <a class="code" href="../../dc/d54/a00094.php#a0a1e73288e0ceb794c65bd86a4b7f231">NodeWeight</a> <a class="code" href="../../dc/d3c/a00028.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a> = datas.second;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordflow">if</span>(!root-&gt;<a class="code" href="../../dc/d3c/a00028.php#a6faa1b5c8a9e19348d0bfef6232c90cb">initialized</a>){</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        root-&gt;<a class="code" href="../../dc/d3c/a00028.php#a440411e958356c1d3912dce01ae74edc">values</a> = <a class="code" href="../../dc/d3c/a00028.php#a440411e958356c1d3912dce01ae74edc">values</a>;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        root-&gt;<a class="code" href="../../dc/d3c/a00028.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a> = <a class="code" href="../../dc/d3c/a00028.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a>;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        root-&gt;<a class="code" href="../../dc/d3c/a00028.php#a6faa1b5c8a9e19348d0bfef6232c90cb">initialized</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="keywordflow">return</span> root;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordflow">while</span>(!created){</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordflow">if</span>(comparator(datas, std::make_pair(values, weight)) &lt; 0){</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            <span class="keywordflow">if</span>(node-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a> == <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                node-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a> = <a class="code" href="../../dc/d54/a00094.php#a8bcdc1113d4578db82209cd9c38d8cb1">createChild</a>(values, weight);</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                created = <span class="keyword">true</span>;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                node = node-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a>;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            }</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(comparator(datas, std::make_pair(values, weight)) &gt; 0){</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            <span class="keywordflow">if</span>(node-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a> == <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                node-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a> = <a class="code" href="../../dc/d54/a00094.php#a8bcdc1113d4578db82209cd9c38d8cb1">createChild</a>(values, weight);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                created = <span class="keyword">true</span>;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                node = node-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a>;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            }</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            created = <span class="keyword">true</span>;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        }</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    }</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordflow">return</span> root;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;}</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#aca042957dcee09f6c183f30c6bcb109b">  163</a></span>&#160;<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* <a class="code" href="../../dc/d54/a00094.php#aca042957dcee09f6c183f30c6bcb109b">createBinaryTree</a>(std::vector&lt;std::pair&lt;T, NodeWeight&gt;&gt; datas, <span class="keywordtype">short</span>(*comparator)(std::pair&lt;T, NodeWeight&gt;, std::pair&lt;T, NodeWeight&gt;)){</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* root = <span class="keyword">new</span> <a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> data : datas){</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        root = <a class="code" href="../../dc/d54/a00094.php#a43dc65d8aebbcca6dd43ec0a2b0637b6">insert</a>(data, root, comparator);</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    }</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keywordflow">return</span> root;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;}</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#ac2acdabec1b9860acb985d49992db032">  180</a></span>&#160;<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* <a class="code" href="../../dc/d54/a00094.php#aca042957dcee09f6c183f30c6bcb109b">createBinaryTree</a>(std::vector&lt;std::pair&lt;T, NodeWeight&gt;&gt; datas){</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dc/d54/a00094.php#aca042957dcee09f6c183f30c6bcb109b">createBinaryTree</a>(datas, <a class="code" href="../../dc/d54/a00094.php#a6ba86e01e66ef0911ee1fd3e3a1db1ca">sorter</a>);</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;}</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00192"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#abf57df4057638a264b98edf669612682">  192</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/d54/a00094.php#abf57df4057638a264b98edf669612682">copyData</a>(<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* nodeSource, <a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* nodeCopy){</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    T <a class="code" href="../../dc/d3c/a00028.php#a440411e958356c1d3912dce01ae74edc">values</a> = nodeSource-&gt;<a class="code" href="../../dc/d3c/a00028.php#a440411e958356c1d3912dce01ae74edc">values</a>;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <a class="code" href="../../dc/d54/a00094.php#a0a1e73288e0ceb794c65bd86a4b7f231">NodeWeight</a> <a class="code" href="../../dc/d3c/a00028.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a> = nodeSource-&gt;<a class="code" href="../../dc/d3c/a00028.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a>;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    nodeSource-&gt;<a class="code" href="../../dc/d3c/a00028.php#a440411e958356c1d3912dce01ae74edc">values</a> = nodeCopy-&gt;<a class="code" href="../../dc/d3c/a00028.php#a440411e958356c1d3912dce01ae74edc">values</a>;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    nodeSource-&gt;<a class="code" href="../../dc/d3c/a00028.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a> = nodeCopy-&gt;<a class="code" href="../../dc/d3c/a00028.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a>;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    nodeCopy-&gt;<a class="code" href="../../dc/d3c/a00028.php#a440411e958356c1d3912dce01ae74edc">values</a> = <a class="code" href="../../dc/d3c/a00028.php#a440411e958356c1d3912dce01ae74edc">values</a>;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    nodeCopy-&gt;<a class="code" href="../../dc/d3c/a00028.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a> = <a class="code" href="../../dc/d3c/a00028.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">weight</a>;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;}</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00210"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#a1186e4caac5cd7b49c6ebb5dfac23e53">  210</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../dc/d54/a00094.php#a1186e4caac5cd7b49c6ebb5dfac23e53">treeHeight</a>(<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* root){</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="keywordflow">if</span>(root == <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    }</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keywordtype">int</span> heightL = <a class="code" href="../../dc/d54/a00094.php#a1186e4caac5cd7b49c6ebb5dfac23e53">treeHeight</a>(root-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a>);</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordtype">int</span> heightR = <a class="code" href="../../dc/d54/a00094.php#a1186e4caac5cd7b49c6ebb5dfac23e53">treeHeight</a>(root-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a>);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keywordflow">return</span> (heightL &gt; heightR)?heightL+1:heightR+1;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;}</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00230"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#a3fde380f27243eba602c10dd02d7e377">  230</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/d54/a00094.php#a3fde380f27243eba602c10dd02d7e377">GRD</a>(<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* node, <span class="keywordtype">void</span>(*func)(<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>*, <span class="keywordtype">long</span> <span class="keywordtype">int</span>), <span class="keywordtype">long</span> <span class="keywordtype">int</span> index = -1){</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="keywordflow">if</span>(node != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        <span class="keywordflow">if</span>(index &gt;= 0){</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            <a class="code" href="../../dc/d54/a00094.php#a3fde380f27243eba602c10dd02d7e377">GRD</a>(node-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a>, func, index+1);</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            <a class="code" href="../../dc/d54/a00094.php#a3fde380f27243eba602c10dd02d7e377">GRD</a>(node-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a>, func, index);</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        }</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        func(node, index);</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <span class="keywordflow">if</span>(index &gt;= 0){</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            <a class="code" href="../../dc/d54/a00094.php#a3fde380f27243eba602c10dd02d7e377">GRD</a>(node-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a>, func, index+1);</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            <a class="code" href="../../dc/d54/a00094.php#a3fde380f27243eba602c10dd02d7e377">GRD</a>(node-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a>, func, index);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        }</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    }</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;}</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00255"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#a822f289cec240962d857d201aaea89b5">  255</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/d54/a00094.php#a822f289cec240962d857d201aaea89b5">printTree</a>(<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* node){</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <a class="code" href="../../dc/d54/a00094.php#a3fde380f27243eba602c10dd02d7e377">GRD</a>(node, &amp;<a class="code" href="../../dc/d54/a00094.php#a150358d1355a1feec0dd9c239e528ba5">printNode</a>, 0);</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;}</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00266"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#a382275a07cf1f2a46cbaabc75fa93215">  266</a></span>&#160;<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* <a class="code" href="../../dc/d54/a00094.php#a382275a07cf1f2a46cbaabc75fa93215">rightBalance</a>(<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* root){</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    root = <a class="code" href="../../dc/d54/a00094.php#ac291426463c8625f13688e606a05e4b8">createRightVine</a>(root);</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dc/d54/a00094.php#a3e3bec3cf3101c5fd44f21ff9c4349f7">rightBalanceVine</a>(root, <a class="code" href="../../dc/d54/a00094.php#a62d38298b4f4a9c44baa90aa8e9f29b0">getRightNodeCount</a>(root));</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;}</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00279"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#a92a22cef67a94326ca5c854c6426dfa4">  279</a></span>&#160;<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* <a class="code" href="../../dc/d54/a00094.php#a92a22cef67a94326ca5c854c6426dfa4">leftBalance</a>(<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* root){</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    root = <a class="code" href="../../dc/d54/a00094.php#a574c0b660263cb94d9a1e8afd486d25a">createLeftVine</a>(root);</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dc/d54/a00094.php#a6f6cae1bd0191f7106f1ad3375c3855e">leftBalanceVine</a>(root, <a class="code" href="../../dc/d54/a00094.php#ac5c778ab71fa0fc25e9fc3d1d32e2c6a">getLeftNodeCount</a>(root));</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;}</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00293"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#ab89459cf62f1cb8716e7e369ec281555">  293</a></span>&#160;<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* <a class="code" href="../../dc/d54/a00094.php#ab89459cf62f1cb8716e7e369ec281555">leftRotate</a>(<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* tree, <span class="keywordtype">void</span>(*func)(<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>*, <a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>*)){</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <span class="keywordflow">if</span>(tree-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a> != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        <a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* <a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a> = tree-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a>;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        tree-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a> = right-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a>;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        right-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a> = right-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a>;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        right-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a> = tree-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a>;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        tree-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a> = <a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a>;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        func(tree, right);</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    }</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <span class="keywordflow">return</span> tree;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;}</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00318"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#ac0c95fabf27f049acdedcbc8dac1df25">  318</a></span>&#160;<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* <a class="code" href="../../dc/d54/a00094.php#ac0c95fabf27f049acdedcbc8dac1df25">rightRotate</a>(<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* tree, <span class="keywordtype">void</span>(*func)(<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>*, <a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>*)){</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <span class="keywordflow">if</span>(tree-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a> != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        <a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* <a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a> = tree-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a>;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        tree-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a> = left-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a>;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        left-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a> = left-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a>;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        left-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a> = tree-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a>;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        tree-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a> = <a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a>;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        func(tree, left);</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    }</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <span class="keywordflow">return</span> tree;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;}</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00342"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#ac291426463c8625f13688e606a05e4b8">  342</a></span>&#160;<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* <a class="code" href="../../dc/d54/a00094.php#ac291426463c8625f13688e606a05e4b8">createRightVine</a>(<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* tree){</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <span class="keywordflow">while</span>(tree-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a> != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        tree = <a class="code" href="../../dc/d54/a00094.php#ac0c95fabf27f049acdedcbc8dac1df25">rightRotate</a>(tree, &amp;<a class="code" href="../../dc/d54/a00094.php#abf57df4057638a264b98edf669612682">copyData</a>);</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    }</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <span class="keywordflow">if</span>(tree-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a> != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        tree-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a> = <a class="code" href="../../dc/d54/a00094.php#ac291426463c8625f13688e606a05e4b8">createRightVine</a>(tree-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a>);</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    }</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <span class="keywordflow">return</span> tree;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;}</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00361"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#a574c0b660263cb94d9a1e8afd486d25a">  361</a></span>&#160;<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* <a class="code" href="../../dc/d54/a00094.php#a574c0b660263cb94d9a1e8afd486d25a">createLeftVine</a>(<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* tree){</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <span class="keywordflow">while</span>(tree-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a> != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        tree = <a class="code" href="../../dc/d54/a00094.php#ab89459cf62f1cb8716e7e369ec281555">leftRotate</a>(tree, &amp;<a class="code" href="../../dc/d54/a00094.php#abf57df4057638a264b98edf669612682">copyData</a>);</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    }</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <span class="keywordflow">if</span>(tree-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a> != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        tree-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a> = <a class="code" href="../../dc/d54/a00094.php#a574c0b660263cb94d9a1e8afd486d25a">createLeftVine</a>(tree-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a>);</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    }</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    <span class="keywordflow">return</span> tree;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;}</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00380"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#a62d38298b4f4a9c44baa90aa8e9f29b0">  380</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../dc/d54/a00094.php#a62d38298b4f4a9c44baa90aa8e9f29b0">getRightNodeCount</a>(<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* tree){</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    <span class="keywordflow">if</span>(tree == <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    }</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <span class="keywordtype">int</span> i{1};</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <span class="keywordflow">while</span>(tree-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a> != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        tree = tree-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a>;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        i++;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    }</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <span class="keywordflow">return</span> i;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;}</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00402"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#ac5c778ab71fa0fc25e9fc3d1d32e2c6a">  402</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../dc/d54/a00094.php#ac5c778ab71fa0fc25e9fc3d1d32e2c6a">getLeftNodeCount</a>(<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* tree){</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    <span class="keywordflow">if</span>(tree == <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    }</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    <span class="keywordtype">int</span> i{1};</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    <span class="keywordflow">while</span>(tree-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a> != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        tree = tree-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a>;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        i++;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    }</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    <span class="keywordflow">return</span> i;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;}</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00425"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#a3e3bec3cf3101c5fd44f21ff9c4349f7">  425</a></span>&#160;<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* <a class="code" href="../../dc/d54/a00094.php#a3e3bec3cf3101c5fd44f21ff9c4349f7">rightBalanceVine</a>(<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* tree, <span class="keywordtype">int</span> nodeCount){</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    <span class="keywordtype">int</span> times = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(log2(nodeCount));</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    <a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* newTree = tree;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i{0}; i &lt; times; i++){</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        newTree = <a class="code" href="../../dc/d54/a00094.php#ab89459cf62f1cb8716e7e369ec281555">leftRotate</a>(newTree, &amp;<a class="code" href="../../dc/d54/a00094.php#abf57df4057638a264b98edf669612682">copyData</a>);</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        tree = newTree-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a>;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> j{0}; j &lt; (nodeCount/2 - 1); j++){</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;            tree = <a class="code" href="../../dc/d54/a00094.php#ab89459cf62f1cb8716e7e369ec281555">leftRotate</a>(tree, &amp;<a class="code" href="../../dc/d54/a00094.php#abf57df4057638a264b98edf669612682">copyData</a>);</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;            tree = tree-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a>;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        }</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        nodeCount = nodeCount &gt;&gt; 1;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    }</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    <span class="keywordflow">return</span> newTree;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;}</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00452"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#a6f6cae1bd0191f7106f1ad3375c3855e">  452</a></span>&#160;<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* <a class="code" href="../../dc/d54/a00094.php#a6f6cae1bd0191f7106f1ad3375c3855e">leftBalanceVine</a>(<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* tree, <span class="keywordtype">int</span> nodeCount){</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    <span class="keywordtype">int</span> times = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(log2(nodeCount));</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    <a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* newTree = tree;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i{0}; i &lt; times; i++){</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        newTree = <a class="code" href="../../dc/d54/a00094.php#ac0c95fabf27f049acdedcbc8dac1df25">rightRotate</a>(newTree, &amp;<a class="code" href="../../dc/d54/a00094.php#abf57df4057638a264b98edf669612682">copyData</a>);</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        tree = newTree-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a>;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> j{0}; j &lt; (nodeCount/2 - 1); j++){</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;            tree = <a class="code" href="../../dc/d54/a00094.php#ac0c95fabf27f049acdedcbc8dac1df25">rightRotate</a>(tree, &amp;<a class="code" href="../../dc/d54/a00094.php#abf57df4057638a264b98edf669612682">copyData</a>);</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;            tree = tree-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a>;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;        }</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;        nodeCount = nodeCount &gt;&gt; 1;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    }</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    <span class="keywordflow">return</span> newTree;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;}</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00480"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#a10b614bb30047d2274d091e553426e85">  480</a></span>&#160;<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* <a class="code" href="../../dc/d54/a00094.php#a10b614bb30047d2274d091e553426e85">finder</a>(T value, <a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* node, std::string&amp; path){</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    <span class="keywordflow">if</span>(node-&gt;<a class="code" href="../../dc/d3c/a00028.php#a440411e958356c1d3912dce01ae74edc">values</a> == value){</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        <span class="keywordflow">return</span> node;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    }</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    <span class="keywordflow">if</span>(node-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a> == <span class="keyword">nullptr</span> &amp;&amp; node-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a> == <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    }</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    <a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* root;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <span class="keywordflow">if</span>(node-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a> != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;        <span class="keywordflow">if</span>((root = <a class="code" href="../../dc/d54/a00094.php#a10b614bb30047d2274d091e553426e85">finder</a>(value, node-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a>, path)) != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;            path += <span class="stringliteral">&quot;0&quot;</span>;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;            <span class="keywordflow">return</span> root;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        }</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    }</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    <span class="keywordflow">if</span>(node-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a> != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        <span class="keywordflow">if</span>((root = <a class="code" href="../../dc/d54/a00094.php#a10b614bb30047d2274d091e553426e85">finder</a>(value, node-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a>, path)) != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;            path += <span class="stringliteral">&quot;1&quot;</span>;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;            <span class="keywordflow">return</span> root;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;        }</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    }</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;}</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00515"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#a653f604d83b424493ac7d0d3d586a3c2">  515</a></span>&#160;std::pair&lt;Node&lt;T&gt;*, std::string&gt; <a class="code" href="../../dc/d54/a00094.php#a653f604d83b424493ac7d0d3d586a3c2">find</a>(T value, <a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* root){</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;    <span class="keywordflow">if</span>(!root-&gt;<a class="code" href="../../dc/d3c/a00028.php#a6faa1b5c8a9e19348d0bfef6232c90cb">initialized</a>){</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        <span class="keywordflow">return</span> std::make_pair(root, <span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    }</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    std::string path{<span class="stringliteral">&quot;&quot;</span>};</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    <span class="keyword">auto</span> node = <a class="code" href="../../dc/d54/a00094.php#a10b614bb30047d2274d091e553426e85">finder</a>(value, root, path);</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    <span class="keywordflow">return</span> std::make_pair(node, path);</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;}</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00535"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#afcf4abb2890328ad05c09398704e641a">  535</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/d54/a00094.php#afcf4abb2890328ad05c09398704e641a">freeTree</a>(<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* root, <span class="keywordtype">void</span>(*func)(<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>*)){</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    <span class="keywordflow">if</span>(root != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;        <a class="code" href="../../dc/d54/a00094.php#afcf4abb2890328ad05c09398704e641a">freeTree</a>(root-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a>, func);</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;        <a class="code" href="../../dc/d54/a00094.php#afcf4abb2890328ad05c09398704e641a">freeTree</a>(root-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a>, func);</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;        func(root);</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;        <span class="keyword">delete</span> root;</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;    }</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;}</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00552"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.php#aa7f015a27dd3c807d38c0e9762706a31">  552</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/d54/a00094.php#afcf4abb2890328ad05c09398704e641a">freeTree</a>(<a class="code" href="../../dc/d3c/a00028.php">Node&lt;T&gt;</a>* root){</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    <span class="keywordflow">if</span>(root != <span class="keyword">nullptr</span>){</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;        <a class="code" href="../../dc/d54/a00094.php#afcf4abb2890328ad05c09398704e641a">freeTree</a>(root-&gt;<a class="code" href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">right</a>);</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;        <a class="code" href="../../dc/d54/a00094.php#afcf4abb2890328ad05c09398704e641a">freeTree</a>(root-&gt;<a class="code" href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">left</a>);</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;        <span class="keyword">delete</span> root;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    }</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;}</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;<span class="preprocessor">#endif //HEADER_TREE</span></div><div class="ttc" id="a00094_php_a0d56f2cd35d9fdf524dc21c2fd243233"><div class="ttname"><a href="../../dc/d54/a00094.php#a0d56f2cd35d9fdf524dc21c2fd243233">convertInTreeValues</a></div><div class="ttdeci">std::vector&lt; std::pair&lt; T, NodeWeight &gt; &gt; convertInTreeValues(std::vector&lt; std::pair&lt; T, U &gt;&gt; in)</div><div class="ttdoc">Return an array format for the tree. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00077">tree.hpp:77</a></div></div>
<div class="ttc" id="a00094_php_a92a22cef67a94326ca5c854c6426dfa4"><div class="ttname"><a href="../../dc/d54/a00094.php#a92a22cef67a94326ca5c854c6426dfa4">leftBalance</a></div><div class="ttdeci">Node&lt; T &gt; * leftBalance(Node&lt; T &gt; *root)</div><div class="ttdoc">Balance left the tree. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00279">tree.hpp:279</a></div></div>
<div class="ttc" id="a00094_php_ab89459cf62f1cb8716e7e369ec281555"><div class="ttname"><a href="../../dc/d54/a00094.php#ab89459cf62f1cb8716e7e369ec281555">leftRotate</a></div><div class="ttdeci">Node&lt; T &gt; * leftRotate(Node&lt; T &gt; *tree, void(*func)(Node&lt; T &gt; *, Node&lt; T &gt; *))</div><div class="ttdoc">Rotate the branch to the left. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00293">tree.hpp:293</a></div></div>
<div class="ttc" id="a00094_php_abf57df4057638a264b98edf669612682"><div class="ttname"><a href="../../dc/d54/a00094.php#abf57df4057638a264b98edf669612682">copyData</a></div><div class="ttdeci">void copyData(Node&lt; T &gt; *nodeSource, Node&lt; T &gt; *nodeCopy)</div><div class="ttdoc">Copy datas from a node to another. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00192">tree.hpp:192</a></div></div>
<div class="ttc" id="a00094_php_ac0c95fabf27f049acdedcbc8dac1df25"><div class="ttname"><a href="../../dc/d54/a00094.php#ac0c95fabf27f049acdedcbc8dac1df25">rightRotate</a></div><div class="ttdeci">Node&lt; T &gt; * rightRotate(Node&lt; T &gt; *tree, void(*func)(Node&lt; T &gt; *, Node&lt; T &gt; *))</div><div class="ttdoc">Rotate the branch to the right. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00318">tree.hpp:318</a></div></div>
<div class="ttc" id="a00028_php_a2841886a16c27e72b21885025c00b44b"><div class="ttname"><a href="../../dc/d3c/a00028.php#a2841886a16c27e72b21885025c00b44b">Node::left</a></div><div class="ttdeci">Node&lt; T &gt; * left</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00029">tree.hpp:29</a></div></div>
<div class="ttc" id="a00028_php"><div class="ttname"><a href="../../dc/d3c/a00028.php">Node</a></div><div class="ttdoc">A struct to define a node for the tree. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00023">tree.hpp:23</a></div></div>
<div class="ttc" id="a00076_php"><div class="ttname"><a href="../../db/df8/a00076.php">maths.hpp</a></div></div>
<div class="ttc" id="a00028_php_a440411e958356c1d3912dce01ae74edc"><div class="ttname"><a href="../../dc/d3c/a00028.php#a440411e958356c1d3912dce01ae74edc">Node::values</a></div><div class="ttdeci">T values</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00024">tree.hpp:24</a></div></div>
<div class="ttc" id="a00094_php_adfa80cc857b10a19d8c8146856d390fe"><div class="ttname"><a href="../../dc/d54/a00094.php#adfa80cc857b10a19d8c8146856d390fe">NO_NODE</a></div><div class="ttdeci">#define NO_NODE</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00015">tree.hpp:15</a></div></div>
<div class="ttc" id="a00094_php_ac5c778ab71fa0fc25e9fc3d1d32e2c6a"><div class="ttname"><a href="../../dc/d54/a00094.php#ac5c778ab71fa0fc25e9fc3d1d32e2c6a">getLeftNodeCount</a></div><div class="ttdeci">int getLeftNodeCount(Node&lt; T &gt; *tree)</div><div class="ttdoc">Get the depth on left. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00402">tree.hpp:402</a></div></div>
<div class="ttc" id="a00094_php_a62d38298b4f4a9c44baa90aa8e9f29b0"><div class="ttname"><a href="../../dc/d54/a00094.php#a62d38298b4f4a9c44baa90aa8e9f29b0">getRightNodeCount</a></div><div class="ttdeci">int getRightNodeCount(Node&lt; T &gt; *tree)</div><div class="ttdoc">Get the depth on right. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00380">tree.hpp:380</a></div></div>
<div class="ttc" id="a00028_php_a6faa1b5c8a9e19348d0bfef6232c90cb"><div class="ttname"><a href="../../dc/d3c/a00028.php#a6faa1b5c8a9e19348d0bfef6232c90cb">Node::initialized</a></div><div class="ttdeci">bool initialized</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00027">tree.hpp:27</a></div></div>
<div class="ttc" id="a00094_php_a43dc65d8aebbcca6dd43ec0a2b0637b6"><div class="ttname"><a href="../../dc/d54/a00094.php#a43dc65d8aebbcca6dd43ec0a2b0637b6">insert</a></div><div class="ttdeci">Node&lt; T &gt; * insert(std::pair&lt; T, NodeWeight &gt; datas, Node&lt; T &gt; *node, short(*comparator)(std::pair&lt; T, NodeWeight &gt;, std::pair&lt; T, NodeWeight &gt;))</div><div class="ttdoc">Insert datas in the tree. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00117">tree.hpp:117</a></div></div>
<div class="ttc" id="a00094_php_a574c0b660263cb94d9a1e8afd486d25a"><div class="ttname"><a href="../../dc/d54/a00094.php#a574c0b660263cb94d9a1e8afd486d25a">createLeftVine</a></div><div class="ttdeci">Node&lt; T &gt; * createLeftVine(Node&lt; T &gt; *tree)</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00361">tree.hpp:361</a></div></div>
<div class="ttc" id="a00028_php_aa2cb07a6e63a4dc1f1a05d3e634a8fdd"><div class="ttname"><a href="../../dc/d3c/a00028.php#aa2cb07a6e63a4dc1f1a05d3e634a8fdd">Node::weight</a></div><div class="ttdeci">NodeWeight weight</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00025">tree.hpp:25</a></div></div>
<div class="ttc" id="a00094_php_afcf4abb2890328ad05c09398704e641a"><div class="ttname"><a href="../../dc/d54/a00094.php#afcf4abb2890328ad05c09398704e641a">freeTree</a></div><div class="ttdeci">void freeTree(Node&lt; T &gt; *root, void(*func)(Node&lt; T &gt; *))</div><div class="ttdoc">Free the differents nodes of the tree with a function for the node. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00535">tree.hpp:535</a></div></div>
<div class="ttc" id="a00094_php_a6f6cae1bd0191f7106f1ad3375c3855e"><div class="ttname"><a href="../../dc/d54/a00094.php#a6f6cae1bd0191f7106f1ad3375c3855e">leftBalanceVine</a></div><div class="ttdeci">Node&lt; T &gt; * leftBalanceVine(Node&lt; T &gt; *tree, int nodeCount)</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00452">tree.hpp:452</a></div></div>
<div class="ttc" id="a00094_php_a1186e4caac5cd7b49c6ebb5dfac23e53"><div class="ttname"><a href="../../dc/d54/a00094.php#a1186e4caac5cd7b49c6ebb5dfac23e53">treeHeight</a></div><div class="ttdeci">int treeHeight(Node&lt; T &gt; *root)</div><div class="ttdoc">Return the height of the tree. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00210">tree.hpp:210</a></div></div>
<div class="ttc" id="a00094_php_ab2ab3f795890edd232dacd1bf163ef02"><div class="ttname"><a href="../../dc/d54/a00094.php#ab2ab3f795890edd232dacd1bf163ef02">LEFT_NODE</a></div><div class="ttdeci">#define LEFT_NODE</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00014">tree.hpp:14</a></div></div>
<div class="ttc" id="a00094_php_a150358d1355a1feec0dd9c239e528ba5"><div class="ttname"><a href="../../dc/d54/a00094.php#a150358d1355a1feec0dd9c239e528ba5">printNode</a></div><div class="ttdeci">void printNode(Node&lt; T &gt; *node, long int index=-1)</div><div class="ttdoc">A function to print the node value in cout stream. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00041">tree.hpp:41</a></div></div>
<div class="ttc" id="a00094_php_ae4fbe8a34f580e60f6ed9f42c245489c"><div class="ttname"><a href="../../dc/d54/a00094.php#ae4fbe8a34f580e60f6ed9f42c245489c">RIGHT_NODE</a></div><div class="ttdeci">#define RIGHT_NODE</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00013">tree.hpp:13</a></div></div>
<div class="ttc" id="a00094_php_a382275a07cf1f2a46cbaabc75fa93215"><div class="ttname"><a href="../../dc/d54/a00094.php#a382275a07cf1f2a46cbaabc75fa93215">rightBalance</a></div><div class="ttdeci">Node&lt; T &gt; * rightBalance(Node&lt; T &gt; *root)</div><div class="ttdoc">Balance right the tree. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00266">tree.hpp:266</a></div></div>
<div class="ttc" id="a00094_php_aca042957dcee09f6c183f30c6bcb109b"><div class="ttname"><a href="../../dc/d54/a00094.php#aca042957dcee09f6c183f30c6bcb109b">createBinaryTree</a></div><div class="ttdeci">Node&lt; T &gt; * createBinaryTree(std::vector&lt; std::pair&lt; T, NodeWeight &gt;&gt; datas, short(*comparator)(std::pair&lt; T, NodeWeight &gt;, std::pair&lt; T, NodeWeight &gt;))</div><div class="ttdoc">Create a binary tree with a custom sort function. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00163">tree.hpp:163</a></div></div>
<div class="ttc" id="a00094_php_a3e3bec3cf3101c5fd44f21ff9c4349f7"><div class="ttname"><a href="../../dc/d54/a00094.php#a3e3bec3cf3101c5fd44f21ff9c4349f7">rightBalanceVine</a></div><div class="ttdeci">Node&lt; T &gt; * rightBalanceVine(Node&lt; T &gt; *tree, int nodeCount)</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00425">tree.hpp:425</a></div></div>
<div class="ttc" id="a00094_php_a3fde380f27243eba602c10dd02d7e377"><div class="ttname"><a href="../../dc/d54/a00094.php#a3fde380f27243eba602c10dd02d7e377">GRD</a></div><div class="ttdeci">void GRD(Node&lt; T &gt; *node, void(*func)(Node&lt; T &gt; *, long int), long int index=-1)</div><div class="ttdoc">Read the tree from left then root to right. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00230">tree.hpp:230</a></div></div>
<div class="ttc" id="a00094_php_a653f604d83b424493ac7d0d3d586a3c2"><div class="ttname"><a href="../../dc/d54/a00094.php#a653f604d83b424493ac7d0d3d586a3c2">find</a></div><div class="ttdeci">std::pair&lt; Node&lt; T &gt; *, std::string &gt; find(T value, Node&lt; T &gt; *root)</div><div class="ttdoc">Find a value in the tree and return the node and the path to the node. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00515">tree.hpp:515</a></div></div>
<div class="ttc" id="a00094_php_a822f289cec240962d857d201aaea89b5"><div class="ttname"><a href="../../dc/d54/a00094.php#a822f289cec240962d857d201aaea89b5">printTree</a></div><div class="ttdeci">void printTree(Node&lt; T &gt; *node)</div><div class="ttdoc">Print the tree. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00255">tree.hpp:255</a></div></div>
<div class="ttc" id="a00094_php_a0a1e73288e0ceb794c65bd86a4b7f231"><div class="ttname"><a href="../../dc/d54/a00094.php#a0a1e73288e0ceb794c65bd86a4b7f231">NodeWeight</a></div><div class="ttdeci">long double NodeWeight</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00017">tree.hpp:17</a></div></div>
<div class="ttc" id="a00028_php_ad7092450d89448320103cde1f72da320"><div class="ttname"><a href="../../dc/d3c/a00028.php#ad7092450d89448320103cde1f72da320">Node::right</a></div><div class="ttdeci">Node&lt; T &gt; * right</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00030">tree.hpp:30</a></div></div>
<div class="ttc" id="a00094_php_a6ba86e01e66ef0911ee1fd3e3a1db1ca"><div class="ttname"><a href="../../dc/d54/a00094.php#a6ba86e01e66ef0911ee1fd3e3a1db1ca">sorter</a></div><div class="ttdeci">short sorter(std::pair&lt; T, NodeWeight &gt; datas, std::pair&lt; T, NodeWeight &gt; nodeDatas)</div><div class="ttdoc">Function to sort a tree depending on weights. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00057">tree.hpp:57</a></div></div>
<div class="ttc" id="a00094_php_a8bcdc1113d4578db82209cd9c38d8cb1"><div class="ttname"><a href="../../dc/d54/a00094.php#a8bcdc1113d4578db82209cd9c38d8cb1">createChild</a></div><div class="ttdeci">Node&lt; T &gt; * createChild(T values, NodeWeight weight)</div><div class="ttdoc">Create a child for the tree. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00098">tree.hpp:98</a></div></div>
<div class="ttc" id="a00094_php_ac291426463c8625f13688e606a05e4b8"><div class="ttname"><a href="../../dc/d54/a00094.php#ac291426463c8625f13688e606a05e4b8">createRightVine</a></div><div class="ttdeci">Node&lt; T &gt; * createRightVine(Node&lt; T &gt; *tree)</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00342">tree.hpp:342</a></div></div>
<div class="ttc" id="a00094_php_a10b614bb30047d2274d091e553426e85"><div class="ttname"><a href="../../dc/d54/a00094.php#a10b614bb30047d2274d091e553426e85">finder</a></div><div class="ttdeci">Node&lt; T &gt; * finder(T value, Node&lt; T &gt; *node, std::string &amp;path)</div><div class="ttdoc">Find a value in the tree and return the right node. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d54/a00094_source.php#l00480">tree.hpp:480</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_badfd550b617ce52cc73ed1c8c9513f6.php">Algo</a></li><li class="navelem"><a class="el" href="../../dir_1788504ec76a4dda5464562bc560d0b5.php">C++Tests</a></li><li class="navelem"><a class="el" href="../../dir_2e741febc7df97747a68d36c1b3be5f0.php">C++</a></li><li class="navelem"><a class="el" href="../../dc/d54/a00094.php">tree.hpp</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
