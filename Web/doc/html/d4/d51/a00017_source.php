<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Hot Dog QUIZ: bootstrap.bundle.js Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Hot Dog QUIZ
   &#160;<span id="projectnumber">1.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.php"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../namespaces.php"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.php"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="../../files.php"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.php"><span>File&#160;List</span></a></li>
      <li><a href="../../globals.php"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d4/d51/a00017_source.php','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">bootstrap.bundle.js</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d4/d51/a00017.php">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a57efe929cc6b44042891d05e15cec785">    6</a></span>&#160;(<span class="keyword">function</span> (<a class="code" href="../../d4/d51/a00017.php#a57efe929cc6b44042891d05e15cec785">global</a>, <a class="code" href="../../d4/d51/a00017.php#abf075bdbe59fd2c3336ed052c9c72b31">factory</a>) {</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;    typeof <a class="code" href="../../d4/d51/a00017.php#af5eafccb5437ef09b552101a016d8c32">exports</a> === <span class="stringliteral">&#39;object&#39;</span> &amp;&amp; typeof module !== <span class="stringliteral">&#39;undefined&#39;</span> ? <a class="code" href="../../d4/d51/a00017.php#abf075bdbe59fd2c3336ed052c9c72b31">factory</a>(exports, require(<span class="stringliteral">&#39;jquery&#39;</span>)) :</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;    typeof define === <span class="stringliteral">&#39;function&#39;</span> &amp;&amp; define.amd ? define([<span class="stringliteral">&#39;exports&#39;</span>, <span class="stringliteral">&#39;jquery&#39;</span>], <a class="code" href="../../d4/d51/a00017.php#abf075bdbe59fd2c3336ed052c9c72b31">factory</a>) :</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;    (<a class="code" href="../../d4/d51/a00017.php#abf075bdbe59fd2c3336ed052c9c72b31">factory</a>((<a class="code" href="../../d4/d51/a00017.php#a57efe929cc6b44042891d05e15cec785">global</a>.bootstrap = {}),<a class="code" href="../../d4/d51/a00017.php#a57efe929cc6b44042891d05e15cec785">global</a>.jQuery));</div><div class="line"><a name="l00010"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a05c09a5e9d53fa7adf0a7936038c2fa3">   10</a></span>&#160;}(<span class="keyword">this</span>, (<span class="keyword">function</span> (<a class="code" href="../../d4/d51/a00017.php#af5eafccb5437ef09b552101a016d8c32">exports</a>,$) { <span class="stringliteral">&#39;use strict&#39;</span>;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;$ = $ &amp;&amp; $.hasOwnProperty(<span class="stringliteral">&#39;default&#39;</span>) ? $[<span class="stringliteral">&#39;default&#39;</span>] : $;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#ad5264b1ac651bfff3aa367a0eb3dd3c5">   14</a></span>&#160;<span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#ad5264b1ac651bfff3aa367a0eb3dd3c5">_defineProperties</a>(target, props) {</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  <span class="keywordflow">for</span> (var <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a> = 0; <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a> &lt; props.length; <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>++) {</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    var descriptor = props[<a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>];</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    descriptor.enumerable = descriptor.enumerable || <span class="keyword">false</span>;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    descriptor.configurable = <span class="keyword">true</span>;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <span class="keywordflow">if</span> (<span class="stringliteral">&quot;value&quot;</span> in descriptor) descriptor.writable = <span class="keyword">true</span>;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    Object.defineProperty(target, descriptor.key, descriptor);</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  }</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;}</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a39e10dc3069b4a23aa52bea0bec60e36">   24</a></span>&#160;<span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#a39e10dc3069b4a23aa52bea0bec60e36">_createClass</a>(<a class="code" href="../../db/db2/a00020.php#a0545907c609a48549a0cf5d4c692f851">Constructor</a>, protoProps, staticProps) {</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <span class="keywordflow">if</span> (protoProps) <a class="code" href="../../d4/d51/a00017.php#ad5264b1ac651bfff3aa367a0eb3dd3c5">_defineProperties</a>(<a class="code" href="../../db/db2/a00020.php#a0545907c609a48549a0cf5d4c692f851">Constructor</a>.prototype, protoProps);</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="keywordflow">if</span> (staticProps) <a class="code" href="../../d4/d51/a00017.php#ad5264b1ac651bfff3aa367a0eb3dd3c5">_defineProperties</a>(<a class="code" href="../../db/db2/a00020.php#a0545907c609a48549a0cf5d4c692f851">Constructor</a>, staticProps);</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/db2/a00020.php#a0545907c609a48549a0cf5d4c692f851">Constructor</a>;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;}</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a9ab4e1b2ef047b1bbe1f49ee0819fb79">   30</a></span>&#160;<span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#ac2eea16a19b83a9509e2f9188c0fdc0f">_extends</a>() {</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <a class="code" href="../../d4/d51/a00017.php#ac2eea16a19b83a9509e2f9188c0fdc0f">_extends</a> = Object.assign || <span class="keyword">function</span> (target) {</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keywordflow">for</span> (var <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a> = 1; <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a> &lt; arguments.length; <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>++) {</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;      var source = arguments[<a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>];</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;      <span class="keywordflow">for</span> (var key in source) {</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <span class="keywordflow">if</span> (Object.prototype.hasOwnProperty.call(source, key)) {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;          target[key] = source[key];</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        }</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      }</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    }</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">return</span> target;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  };</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#ac2eea16a19b83a9509e2f9188c0fdc0f">_extends</a>.apply(<span class="keyword">this</span>, arguments);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a27737cea0ea011c8416e8a57922ded98">   48</a></span>&#160;<span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#a27737cea0ea011c8416e8a57922ded98">_inheritsLoose</a>(subClass, superClass) {</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  subClass.prototype = Object.create(superClass.prototype);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  subClass.prototype.constructor = subClass;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  subClass.__proto__ = superClass;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;}</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a70b71395559d3d60a9b61ccf566f30ea">   61</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#a70b71395559d3d60a9b61ccf566f30ea">Util</a> = <span class="keyword">function</span> ($$$1) {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  var transition = <span class="keyword">false</span>;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  var MAX_UID = 1000000; <span class="comment">// Shoutout AngusCroll (https://goo.gl/pxwQGp)</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="keyword">function</span> toType(obj) {</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">return</span> {}.toString.call(obj).match(/\<a class="code" href="../../d3/dea/a00046.php#ad9a7d92cb87932d25187fdec3ba1b621">s</a>([<a class="code" href="../../db/db2/a00020.php#ae8f6b400ed3390908c5cdeebed3a82b9">a</a>-zA-<a class="code" href="../../d1/d2b/a00018.php#a0e13cb15ff3d6fbe4b9cd26ef446070e">Z</a>]+)/)[1].toLowerCase();</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  }</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <span class="keyword">function</span> getSpecialTransitionEndEvent() {</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordflow">return</span> {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      bindType: transition.end,</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      delegateType: transition.end,</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      handle: <span class="keyword">function</span> handle(event) {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordflow">if</span> ($$$1(event.target).is(<span class="keyword">this</span>)) {</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;          <span class="keywordflow">return</span> <span class="keyword">event</span>.handleObj.handler.apply(<span class="keyword">this</span>, arguments); <span class="comment">// eslint-disable-line prefer-rest-params</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        }</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d3/dea/a00046.php#ae21cc36bf0d65014c717a481a3f8a468">undefined</a>; <span class="comment">// eslint-disable-line no-undefined</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      }</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    };</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  }</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="keyword">function</span> transitionEndTest() {</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">if</span> (typeof window !== <span class="stringliteral">&#39;undefined&#39;</span> &amp;&amp; window.QUnit) {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    }</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">return</span> {</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      end: <span class="stringliteral">&#39;transitionend&#39;</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    };</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  }</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keyword">function</span> transitionEndEmulator(duration) {</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    var _this = <span class="keyword">this</span>;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    var called = <span class="keyword">false</span>;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    $$$1(<span class="keyword">this</span>).one(Util.TRANSITION_END, function () {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      called = <span class="keyword">true</span>;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    });</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    setTimeout(<span class="keyword">function</span> () {</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      <span class="keywordflow">if</span> (!called) {</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        Util.triggerTransitionEnd(_this);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      }</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    }, duration);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">this</span>;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  }</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keyword">function</span> setTransitionEndSupport() {</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    transition = transitionEndTest();</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    $$$1.fn.emulateTransitionEnd = transitionEndEmulator;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keywordflow">if</span> (Util.supportsTransitionEnd()) {</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;      $$$1.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    }</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  }</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <span class="keyword">function</span> escapeId(selector) {</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="comment">// We escape IDs in case of special selectors (selector = &#39;#myId:something&#39;)</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="comment">// $.escapeSelector does not exist in jQuery &lt; 3</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    selector = typeof $$$1.escapeSelector === <span class="stringliteral">&#39;function&#39;</span> ? $$$1.escapeSelector(selector).substr(1) : selector.replace(/(:|\.|\[|\]|,|=|@)/<a class="code" href="../../de/d11/a00021.php#a103df269476e78897c9c4c6cb8f4eb06">g</a>, <span class="stringliteral">&#39;\\$1&#39;</span>);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordflow">return</span> selector;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  }</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  var Util = {</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    TRANSITION_END: <span class="stringliteral">&#39;bsTransitionEnd&#39;</span>,</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    getUID: <span class="keyword">function</span> getUID(prefix) {</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      <span class="keywordflow">do</span> {</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="comment">// eslint-disable-next-line no-bitwise</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        prefix += ~~(Math.random() * MAX_UID); <span class="comment">// &quot;~~&quot; acts like a faster Math.floor() here</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;      } <span class="keywordflow">while</span> (document.getElementById(prefix));</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;      <span class="keywordflow">return</span> prefix;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    },</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    getSelectorFromElement: <span class="keyword">function</span> getSelectorFromElement(element) {</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;      var selector = element.getAttribute(<span class="stringliteral">&#39;data-target&#39;</span>);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;      <span class="keywordflow">if</span> (!selector || selector === <span class="charliteral">&#39;#&#39;</span>) {</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        selector = element.getAttribute(<span class="stringliteral">&#39;href&#39;</span>) || <span class="stringliteral">&#39;&#39;</span>;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;      } <span class="comment">// If it&#39;s an ID</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      <span class="keywordflow">if</span> (selector.charAt(0) === <span class="charliteral">&#39;#&#39;</span>) {</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        selector = escapeId(selector);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      }</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;      <span class="keywordflow">try</span> {</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        var $selector = $$$1(document).find(selector);</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="keywordflow">return</span> $selector.length &gt; 0 ? selector : null;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;      } <span class="keywordflow">catch</span> (err) {</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="keywordflow">return</span> null;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      }</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    },</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    reflow: <span class="keyword">function</span> reflow(element) {</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;      <span class="keywordflow">return</span> element.offsetHeight;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    },</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    triggerTransitionEnd: <span class="keyword">function</span> triggerTransitionEnd(element) {</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      $$$1(element).trigger(transition.end);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    },</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    supportsTransitionEnd: <span class="keyword">function</span> supportsTransitionEnd() {</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;      <span class="keywordflow">return</span> Boolean(transition);</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    },</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    isElement: <span class="keyword">function</span> isElement(obj) {</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;      <span class="keywordflow">return</span> (obj[0] || obj).nodeType;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    },</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    typeCheckConfig: <span class="keyword">function</span> typeCheckConfig(componentName, config, configTypes) {</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      <span class="keywordflow">for</span> (var property in configTypes) {</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="keywordflow">if</span> (Object.prototype.hasOwnProperty.call(configTypes, property)) {</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;          var expectedTypes = configTypes[property];</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;          var value = config[property];</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;          var valueType = value &amp;&amp; Util.isElement(value) ? <span class="stringliteral">&#39;element&#39;</span> : toType(value);</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;          <span class="keywordflow">if</span> (!<span class="keyword">new</span> RegExp(expectedTypes).test(valueType)) {</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> Error(componentName.toUpperCase() + <span class="stringliteral">&quot;: &quot;</span> + (<span class="stringliteral">&quot;Option \&quot;&quot;</span> + <span class="keyword">property</span> + <span class="stringliteral">&quot;\&quot; provided type \&quot;&quot;</span> + valueType + <span class="stringliteral">&quot;\&quot; &quot;</span>) + (<span class="stringliteral">&quot;but expected type \&quot;&quot;</span> + expectedTypes + <span class="stringliteral">&quot;\&quot;.&quot;</span>));</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;          }</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        }</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;      }</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    }</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  };</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  setTransitionEndSupport();</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#a70b71395559d3d60a9b61ccf566f30ea">Util</a>;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;}($);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a7d2656468b57cd8302b39f91252cb544">  201</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#a7d2656468b57cd8302b39f91252cb544">Alert</a> = <span class="keyword">function</span> ($$$1) {</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  var NAME = <span class="stringliteral">&#39;alert&#39;</span>;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;  var <a class="code" href="../../db/db2/a00020.php#a3635f2df5844f69204b70bf7b3983587">VERSION</a> = <span class="stringliteral">&#39;4.0.0&#39;</span>;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  var DATA_KEY = <span class="stringliteral">&#39;bs.alert&#39;</span>;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  var EVENT_KEY = <span class="stringliteral">&quot;.&quot;</span> + DATA_KEY;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  var DATA_API_KEY = <span class="stringliteral">&#39;.data-api&#39;</span>;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;  var JQUERY_NO_CONFLICT = $$$1.fn[NAME];</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  var <a class="code" href="../../db/db2/a00020.php#ae4adb159aeacba734c34bd530baf92f6">TRANSITION_DURATION</a> = 150;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  var Selector = {</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    DISMISS: <span class="stringliteral">&#39;[data-dismiss=&quot;alert&quot;]&#39;</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  };</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  var Event = {</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    CLOSE: <span class="stringliteral">&quot;close&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    CLOSED: <span class="stringliteral">&quot;closed&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    CLICK_DATA_API: <span class="stringliteral">&quot;click&quot;</span> + EVENT_KEY + DATA_API_KEY</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  };</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  var ClassName = {</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    ALERT: <span class="stringliteral">&#39;alert&#39;</span>,</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    FADE: <span class="stringliteral">&#39;fade&#39;</span>,</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    SHOW: <span class="stringliteral">&#39;show&#39;</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;  };</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;  var Alert =</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  <span class="comment">/*#__PURE__*/</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;  <span class="keyword">function</span> () {</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#a7d2656468b57cd8302b39f91252cb544">Alert</a>(element) {</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;      this._element = element;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    } <span class="comment">// Getters</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    var _proto = Alert.prototype;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="comment">// Public</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    _proto.close = <span class="keyword">function</span> <a class="code" href="../../db/db2/a00020.php#a72fbb3628c3cc943ced8aad64247888c">close</a>(element) {</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;      element = element || this._element;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;      var rootElement = this._getRootElement(element);</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;      var customEvent = this._triggerCloseEvent(rootElement);</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;      <span class="keywordflow">if</span> (customEvent.isDefaultPrevented()) {</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;      }</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;      this._removeElement(rootElement);</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    };</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    _proto.dispose = <span class="keyword">function</span> dispose() {</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;      $$$1.removeData(this._element, DATA_KEY);</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;      this._element = null;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    }; <span class="comment">// Private</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    _proto._getRootElement = <span class="keyword">function</span> _getRootElement(element) {</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;      var selector = Util.getSelectorFromElement(element);</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;      var parent = <span class="keyword">false</span>;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;      <span class="keywordflow">if</span> (selector) {</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        parent = $$$1(selector)[0];</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;      }</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;      <span class="keywordflow">if</span> (!parent) {</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        parent = $$$1(element).closest(<span class="stringliteral">&quot;.&quot;</span> + ClassName.ALERT)[0];</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;      }</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;      <span class="keywordflow">return</span> parent;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    };</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    _proto._triggerCloseEvent = <span class="keyword">function</span> _triggerCloseEvent(element) {</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;      var closeEvent = $$$1.Event(Event.CLOSE);</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;      $$$1(element).trigger(closeEvent);</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;      <span class="keywordflow">return</span> closeEvent;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    };</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    _proto._removeElement = <span class="keyword">function</span> _removeElement(element) {</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;      var _this = <span class="keyword">this</span>;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;      $$$1(element).removeClass(ClassName.SHOW);</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;      <span class="keywordflow">if</span> (!Util.supportsTransitionEnd() || !$$$1(element).hasClass(ClassName.FADE)) {</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        this._destroyElement(element);</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;      }</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;      $$$1(element).one(Util.TRANSITION_END, function (event) {</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        <span class="keywordflow">return</span> _this._destroyElement(element, event);</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;      }).<a class="code" href="../../db/db2/a00020.php#a006fe6a2a254572b367123c6db401ff3">emulateTransitionEnd</a>(TRANSITION_DURATION);</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    };</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    _proto._destroyElement = <span class="keyword">function</span> _destroyElement(element) {</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;      $$$1(element).detach().trigger(Event.CLOSED).remove();</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    }; <span class="comment">// Static</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    Alert._jQueryInterface = <span class="keyword">function</span> _jQueryInterface(config) {</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;      <span class="keywordflow">return</span> this.<a class="code" href="../../d3/dea/a00046.php#a877963eb3bdbe10cffb2337a091a7ff1">each</a>(<span class="keyword">function</span> () {</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        var $element = $$$1(<span class="keyword">this</span>);</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        var <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a> = $element.data(DATA_KEY);</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        <span class="keywordflow">if</span> (!data) {</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;          data = <span class="keyword">new</span> <a class="code" href="../../d4/d51/a00017.php#a7d2656468b57cd8302b39f91252cb544">Alert</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;          $element.data(DATA_KEY, data);</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        }</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        <span class="keywordflow">if</span> (config === <span class="stringliteral">&#39;close&#39;</span>) {</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;          data[config](<span class="keyword">this</span>);</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        }</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;      });</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    };</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    Alert._handleDismiss = <span class="keyword">function</span> _handleDismiss(alertInstance) {</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">function</span> (event) {</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        <span class="keywordflow">if</span> (event) {</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;          <span class="keyword">event</span>.preventDefault();</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        }</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        alertInstance.close(<span class="keyword">this</span>);</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;      };</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    };</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <a class="code" href="../../d4/d51/a00017.php#a39e10dc3069b4a23aa52bea0bec60e36">_createClass</a>(Alert, null, [{</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;      key: <span class="stringliteral">&quot;VERSION&quot;</span>,</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../db/db2/a00020.php#a3635f2df5844f69204b70bf7b3983587">VERSION</a>;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;      }</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    }]);</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#a7d2656468b57cd8302b39f91252cb544">Alert</a>;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;  }();</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;  $$$1(document).on(Event.CLICK_DATA_API, Selector.DISMISS, Alert._handleDismiss(<span class="keyword">new</span> Alert()));</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;  $$$1.fn[NAME] = Alert._jQueryInterface;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;  $$$1.fn[NAME].Constructor = <a class="code" href="../../d4/d51/a00017.php#a7d2656468b57cd8302b39f91252cb544">Alert</a>;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;  $$$1.fn[NAME].noConflict = <span class="keyword">function</span> () {</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    $$$1.fn[NAME] = JQUERY_NO_CONFLICT;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <span class="keywordflow">return</span> Alert._jQueryInterface;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;  };</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#a7d2656468b57cd8302b39f91252cb544">Alert</a>;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;}($);</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00373"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a433ddab0735db5a5563d580ba50f0972">  373</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#a433ddab0735db5a5563d580ba50f0972">Button</a> = <span class="keyword">function</span> ($$$1) {</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;  var NAME = <span class="stringliteral">&#39;button&#39;</span>;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;  var <a class="code" href="../../db/db2/a00020.php#a3635f2df5844f69204b70bf7b3983587">VERSION</a> = <span class="stringliteral">&#39;4.0.0&#39;</span>;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;  var DATA_KEY = <span class="stringliteral">&#39;bs.button&#39;</span>;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;  var EVENT_KEY = <span class="stringliteral">&quot;.&quot;</span> + DATA_KEY;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;  var DATA_API_KEY = <span class="stringliteral">&#39;.data-api&#39;</span>;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;  var JQUERY_NO_CONFLICT = $$$1.fn[NAME];</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;  var ClassName = {</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    ACTIVE: <span class="stringliteral">&#39;active&#39;</span>,</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    BUTTON: <span class="stringliteral">&#39;btn&#39;</span>,</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    FOCUS: <span class="stringliteral">&#39;focus&#39;</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;  };</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;  var Selector = {</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    DATA_TOGGLE_CARROT: <span class="stringliteral">&#39;[data-toggle^=&quot;button&quot;]&#39;</span>,</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    DATA_TOGGLE: <span class="stringliteral">&#39;[data-toggle=&quot;buttons&quot;]&#39;</span>,</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    INPUT: <span class="stringliteral">&#39;input&#39;</span>,</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    ACTIVE: <span class="stringliteral">&#39;.active&#39;</span>,</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    BUTTON: <span class="stringliteral">&#39;.btn&#39;</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;  };</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;  var Event = {</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    CLICK_DATA_API: <span class="stringliteral">&quot;click&quot;</span> + EVENT_KEY + DATA_API_KEY,</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    FOCUS_BLUR_DATA_API: <span class="stringliteral">&quot;focus&quot;</span> + EVENT_KEY + DATA_API_KEY + <span class="stringliteral">&quot; &quot;</span> + (<span class="stringliteral">&quot;blur&quot;</span> + EVENT_KEY + DATA_API_KEY)</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;  };</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;  var Button =</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;  <span class="comment">/*#__PURE__*/</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;  <span class="keyword">function</span> () {</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    <span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#a433ddab0735db5a5563d580ba50f0972">Button</a>(element) {</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;      this._element = element;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    } <span class="comment">// Getters</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    var _proto = Button.prototype;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    <span class="comment">// Public</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    _proto.toggle = <span class="keyword">function</span> <a class="code" href="../../db/db2/a00020.php#aa8e797a9bda5e7e313be3518054164a3">toggle</a>() {</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;      var triggerChangeEvent = <span class="keyword">true</span>;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;      var addAriaPressed = <span class="keyword">true</span>;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;      var rootElement = $$$1(this._element).closest(Selector.DATA_TOGGLE)[0];</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;      <span class="keywordflow">if</span> (rootElement) {</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        var <a class="code" href="../../df/d5f/a00064.php#a07a2aabd64594dc36dd810cad2669deb">input</a> = $$$1(this._element).find(Selector.INPUT)[0];</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        <span class="keywordflow">if</span> (input) {</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;          <span class="keywordflow">if</span> (input.type === <span class="stringliteral">&#39;radio&#39;</span>) {</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;            <span class="keywordflow">if</span> (input.checked &amp;&amp; $$$1(<span class="keyword">this</span>._element).hasClass(ClassName.ACTIVE)) {</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;              triggerChangeEvent = <span class="keyword">false</span>;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;            } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;              var activeElement = $$$1(rootElement).find(Selector.ACTIVE)[0];</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;              <span class="keywordflow">if</span> (activeElement) {</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                $$$1(activeElement).removeClass(ClassName.ACTIVE);</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;              }</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;            }</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;          }</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;          <span class="keywordflow">if</span> (triggerChangeEvent) {</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;            <span class="keywordflow">if</span> (input.hasAttribute(<span class="stringliteral">&#39;disabled&#39;</span>) || rootElement.hasAttribute(<span class="stringliteral">&#39;disabled&#39;</span>) || input.classList.contains(<span class="stringliteral">&#39;disabled&#39;</span>) || rootElement.classList.contains(<span class="stringliteral">&#39;disabled&#39;</span>)) {</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;              <span class="keywordflow">return</span>;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;            }</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;            input.checked = !$$$1(this._element).hasClass(ClassName.ACTIVE);</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;            $$$1(<a class="code" href="../../df/d5f/a00064.php#a07a2aabd64594dc36dd810cad2669deb">input</a>).trigger(<span class="stringliteral">&#39;change&#39;</span>);</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;          }</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;          input.focus();</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;          addAriaPressed = <span class="keyword">false</span>;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;        }</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;      }</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;      <span class="keywordflow">if</span> (addAriaPressed) {</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;        this._element.setAttribute(<span class="stringliteral">&#39;aria-pressed&#39;</span>, !$$$1(this._element).hasClass(ClassName.ACTIVE));</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;      }</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;      <span class="keywordflow">if</span> (triggerChangeEvent) {</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;        $$$1(this._element).toggleClass(ClassName.ACTIVE);</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;      }</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    };</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    _proto.dispose = <span class="keyword">function</span> dispose() {</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;      $$$1.removeData(this._element, DATA_KEY);</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;      this._element = null;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    }; <span class="comment">// Static</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    Button._jQueryInterface = <span class="keyword">function</span> _jQueryInterface(config) {</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;      <span class="keywordflow">return</span> this.<a class="code" href="../../d3/dea/a00046.php#a877963eb3bdbe10cffb2337a091a7ff1">each</a>(<span class="keyword">function</span> () {</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        var <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a> = $$$1(<span class="keyword">this</span>).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(DATA_KEY);</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        <span class="keywordflow">if</span> (!data) {</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;          data = <span class="keyword">new</span> <a class="code" href="../../d4/d51/a00017.php#a433ddab0735db5a5563d580ba50f0972">Button</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;          $$$1(<span class="keyword">this</span>).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(DATA_KEY, data);</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        }</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        <span class="keywordflow">if</span> (config === <span class="stringliteral">&#39;toggle&#39;</span>) {</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;          data[config]();</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;        }</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;      });</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    };</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    <a class="code" href="../../d4/d51/a00017.php#a39e10dc3069b4a23aa52bea0bec60e36">_createClass</a>(Button, null, [{</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;      key: <span class="stringliteral">&quot;VERSION&quot;</span>,</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../db/db2/a00020.php#a3635f2df5844f69204b70bf7b3983587">VERSION</a>;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;      }</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    }]);</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#a433ddab0735db5a5563d580ba50f0972">Button</a>;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;  }();</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;  $$$1(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE_CARROT, function (event) {</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    <span class="keyword">event</span>.preventDefault();</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    var <a class="code" href="../../db/db2/a00020.php#a55e170814e74f6c3db8ae9ea3ba9054f">button</a> = <span class="keyword">event</span>.target;</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    <span class="keywordflow">if</span> (!$$$1(button).hasClass(ClassName.BUTTON)) {</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;      button = $$$1(<a class="code" href="../../db/db2/a00020.php#a55e170814e74f6c3db8ae9ea3ba9054f">button</a>).closest(Selector.BUTTON);</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    }</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    Button._jQueryInterface.call($$$1(button), <span class="stringliteral">&#39;toggle&#39;</span>);</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;  }).on(Event.FOCUS_BLUR_DATA_API, Selector.DATA_TOGGLE_CARROT, function (event) {</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    var <a class="code" href="../../db/db2/a00020.php#a55e170814e74f6c3db8ae9ea3ba9054f">button</a> = $$$1(<span class="keyword">event</span>.target).closest(Selector.BUTTON)[0];</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    $$$1(<a class="code" href="../../db/db2/a00020.php#a55e170814e74f6c3db8ae9ea3ba9054f">button</a>).toggleClass(ClassName.FOCUS, /^focus(in)?$/.test(event.type));</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;  });</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;  $$$1.fn[NAME] = Button._jQueryInterface;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;  $$$1.fn[NAME].Constructor = <a class="code" href="../../d4/d51/a00017.php#a433ddab0735db5a5563d580ba50f0972">Button</a>;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;  $$$1.fn[NAME].noConflict = <span class="keyword">function</span> () {</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    $$$1.fn[NAME] = JQUERY_NO_CONFLICT;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    <span class="keywordflow">return</span> Button._jQueryInterface;</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;  };</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#a433ddab0735db5a5563d580ba50f0972">Button</a>;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;}($);</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;</div><div class="line"><a name="l00536"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a973fed123161d28ea502af96c99576a6">  536</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#a973fed123161d28ea502af96c99576a6">Carousel</a> = <span class="keyword">function</span> ($$$1) {</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;  var NAME = <span class="stringliteral">&#39;carousel&#39;</span>;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;  var <a class="code" href="../../db/db2/a00020.php#a3635f2df5844f69204b70bf7b3983587">VERSION</a> = <span class="stringliteral">&#39;4.0.0&#39;</span>;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;  var DATA_KEY = <span class="stringliteral">&#39;bs.carousel&#39;</span>;</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;  var EVENT_KEY = <span class="stringliteral">&quot;.&quot;</span> + DATA_KEY;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;  var DATA_API_KEY = <span class="stringliteral">&#39;.data-api&#39;</span>;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;  var JQUERY_NO_CONFLICT = $$$1.fn[NAME];</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;  var <a class="code" href="../../db/db2/a00020.php#ae4adb159aeacba734c34bd530baf92f6">TRANSITION_DURATION</a> = 600;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;  var ARROW_LEFT_KEYCODE = 37; <span class="comment">// KeyboardEvent.which value for left arrow key</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;  var ARROW_RIGHT_KEYCODE = 39; <span class="comment">// KeyboardEvent.which value for right arrow key</span></div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;  var TOUCHEVENT_COMPAT_WAIT = 500; <span class="comment">// Time for mouse compat events to fire after touch</span></div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;  var Default = {</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;    interval: 5000,</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    keyboard: <span class="keyword">true</span>,</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    slide: <span class="keyword">false</span>,</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    pause: <span class="stringliteral">&#39;hover&#39;</span>,</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;    wrap: <span class="keyword">true</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;  };</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;  var DefaultType = {</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    interval: <span class="stringliteral">&#39;(number|boolean)&#39;</span>,</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    keyboard: <span class="stringliteral">&#39;boolean&#39;</span>,</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    slide: <span class="stringliteral">&#39;(boolean|string)&#39;</span>,</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    pause: <span class="stringliteral">&#39;(string|boolean)&#39;</span>,</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    wrap: <span class="stringliteral">&#39;boolean&#39;</span></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;  };</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;  var Direction = {</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    NEXT: <span class="stringliteral">&#39;next&#39;</span>,</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    PREV: <span class="stringliteral">&#39;prev&#39;</span>,</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    LEFT: <span class="stringliteral">&#39;left&#39;</span>,</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;    RIGHT: <span class="stringliteral">&#39;right&#39;</span></div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;  };</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;  var Event = {</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;    SLIDE: <span class="stringliteral">&quot;slide&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;    SLID: <span class="stringliteral">&quot;slid&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    KEYDOWN: <span class="stringliteral">&quot;keydown&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    MOUSEENTER: <span class="stringliteral">&quot;mouseenter&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    MOUSELEAVE: <span class="stringliteral">&quot;mouseleave&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    TOUCHEND: <span class="stringliteral">&quot;touchend&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;    LOAD_DATA_API: <span class="stringliteral">&quot;load&quot;</span> + EVENT_KEY + DATA_API_KEY,</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;    CLICK_DATA_API: <span class="stringliteral">&quot;click&quot;</span> + EVENT_KEY + DATA_API_KEY</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;  };</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;  var ClassName = {</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    CAROUSEL: <span class="stringliteral">&#39;carousel&#39;</span>,</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    ACTIVE: <span class="stringliteral">&#39;active&#39;</span>,</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    SLIDE: <span class="stringliteral">&#39;slide&#39;</span>,</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;    RIGHT: <span class="stringliteral">&#39;carousel-item-right&#39;</span>,</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;    LEFT: <span class="stringliteral">&#39;carousel-item-left&#39;</span>,</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    NEXT: <span class="stringliteral">&#39;carousel-item-next&#39;</span>,</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;    PREV: <span class="stringliteral">&#39;carousel-item-prev&#39;</span>,</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;    ITEM: <span class="stringliteral">&#39;carousel-item&#39;</span></div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;  };</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;  var Selector = {</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;    ACTIVE: <span class="stringliteral">&#39;.active&#39;</span>,</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;    ACTIVE_ITEM: <span class="stringliteral">&#39;.active.carousel-item&#39;</span>,</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;    ITEM: <span class="stringliteral">&#39;.carousel-item&#39;</span>,</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;    NEXT_PREV: <span class="stringliteral">&#39;.carousel-item-next, .carousel-item-prev&#39;</span>,</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    INDICATORS: <span class="stringliteral">&#39;.carousel-indicators&#39;</span>,</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    DATA_SLIDE: <span class="stringliteral">&#39;[data-slide], [data-slide-to]&#39;</span>,</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    DATA_RIDE: <span class="stringliteral">&#39;[data-ride=&quot;carousel&quot;]&#39;</span></div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;  };</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;  var Carousel =</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;  <span class="comment">/*#__PURE__*/</span></div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;  <span class="keyword">function</span> () {</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;    <span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#a973fed123161d28ea502af96c99576a6">Carousel</a>(element, config) {</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;      this._items = null;</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;      this._interval = null;</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;      this._activeElement = null;</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;      this._isPaused = <span class="keyword">false</span>;</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;      this._isSliding = <span class="keyword">false</span>;</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;      this.touchTimeout = null;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;      this._config = this._getConfig(config);</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;      this._element = $$$1(element)[0];</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;      this._indicatorsElement = $$$1(this._element).find(Selector.INDICATORS)[0];</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;      this._addEventListeners();</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    } <span class="comment">// Getters</span></div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;    var _proto = Carousel.prototype;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;    <span class="comment">// Public</span></div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;    _proto.next = <span class="keyword">function</span> next() {</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;      <span class="keywordflow">if</span> (!this._isSliding) {</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        this._slide(Direction.NEXT);</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;      }</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;    };</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;    _proto.nextWhenVisible = <span class="keyword">function</span> nextWhenVisible() {</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;      <span class="comment">// Don&#39;t call next when the page isn&#39;t visible</span></div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;      <span class="comment">// or the carousel or its parent isn&#39;t visible</span></div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;      <span class="keywordflow">if</span> (!document.hidden &amp;&amp; $$$1(<span class="keyword">this</span>._element).is(<span class="stringliteral">&#39;:visible&#39;</span>) &amp;&amp; $$$1(this._element).css(<span class="stringliteral">&#39;visibility&#39;</span>) !== <span class="stringliteral">&#39;hidden&#39;</span>) {</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;        this.next();</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;      }</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;    };</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;    _proto.prev = <span class="keyword">function</span> prev() {</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;      <span class="keywordflow">if</span> (!this._isSliding) {</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;        this._slide(Direction.PREV);</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;      }</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;    };</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;    _proto.pause = <span class="keyword">function</span> pause(event) {</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;      <span class="keywordflow">if</span> (!event) {</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;        this._isPaused = <span class="keyword">true</span>;</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;      }</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;      <span class="keywordflow">if</span> ($$$1(this._element).find(Selector.NEXT_PREV)[0] &amp;&amp; Util.supportsTransitionEnd()) {</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;        Util.triggerTransitionEnd(this._element);</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;        this.cycle(<span class="keyword">true</span>);</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;      }</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;      clearInterval(this._interval);</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;      this._interval = null;</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;    };</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;    _proto.cycle = <span class="keyword">function</span> cycle(event) {</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;      <span class="keywordflow">if</span> (!event) {</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;        this._isPaused = <span class="keyword">false</span>;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;      }</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;      <span class="keywordflow">if</span> (this._interval) {</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;        clearInterval(this._interval);</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;        this._interval = null;</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;      }</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;      <span class="keywordflow">if</span> (this._config.interval &amp;&amp; !<span class="keyword">this</span>._isPaused) {</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;        this._interval = setInterval((document.visibilityState ? <span class="keyword">this</span>.nextWhenVisible : <span class="keyword">this</span>.next).bind(<span class="keyword">this</span>), this._config.interval);</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;      }</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;    };</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;    _proto.to = <span class="keyword">function</span> to(index) {</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;      var _this = <span class="keyword">this</span>;</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;      this._activeElement = $$$1(this._element).find(Selector.ACTIVE_ITEM)[0];</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;      var activeIndex = this._getItemIndex(this._activeElement);</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;      <span class="keywordflow">if</span> (index &gt; this._items.length - 1 || index &lt; 0) {</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;      }</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;      <span class="keywordflow">if</span> (this._isSliding) {</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;        $$$1(this._element).one(Event.SLID, function () {</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;          <span class="keywordflow">return</span> _this.to(index);</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;        });</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;      }</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;      <span class="keywordflow">if</span> (activeIndex === index) {</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;        this.pause();</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;        this.cycle();</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;      }</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;      var direction = index &gt; activeIndex ? Direction.NEXT : Direction.PREV;</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;      this._slide(direction, this._items[index]);</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;    };</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;    _proto.dispose = <span class="keyword">function</span> dispose() {</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;      $$$1(this._element).off(EVENT_KEY);</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;      $$$1.removeData(this._element, DATA_KEY);</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;      this._items = null;</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;      this._config = null;</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;      this._element = null;</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;      this._interval = null;</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;      this._isPaused = null;</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;      this._isSliding = null;</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;      this._activeElement = null;</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;      this._indicatorsElement = null;</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;    }; <span class="comment">// Private</span></div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;    _proto._getConfig = <span class="keyword">function</span> _getConfig(config) {</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;      config = <a class="code" href="../../d4/d51/a00017.php#ac2eea16a19b83a9509e2f9188c0fdc0f">_extends</a>({}, Default, config);</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;      Util.typeCheckConfig(NAME, config, DefaultType);</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;      <span class="keywordflow">return</span> config;</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;    };</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;    _proto._addEventListeners = <span class="keyword">function</span> _addEventListeners() {</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;      var _this2 = <span class="keyword">this</span>;</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;      <span class="keywordflow">if</span> (this._config.keyboard) {</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;        $$$1(this._element).on(Event.KEYDOWN, function (event) {</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;          <span class="keywordflow">return</span> _this2._keydown(event);</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;        });</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;      }</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;      <span class="keywordflow">if</span> (this._config.pause === <span class="stringliteral">&#39;hover&#39;</span>) {</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;        $$$1(this._element).on(Event.MOUSEENTER, function (event) {</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;          <span class="keywordflow">return</span> _this2.pause(event);</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;        }).on(Event.MOUSELEAVE, function (event) {</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;          <span class="keywordflow">return</span> _this2.cycle(event);</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;        });</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;        <span class="keywordflow">if</span> (<span class="stringliteral">&#39;ontouchstart&#39;</span> in document.documentElement) {</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;          <span class="comment">// If it&#39;s a touch-enabled device, mouseenter/leave are fired as</span></div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;          <span class="comment">// part of the mouse compatibility events on first tap - the carousel</span></div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;          <span class="comment">// would stop cycling until user tapped out of it;</span></div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;          <span class="comment">// here, we listen for touchend, explicitly pause the carousel</span></div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;          <span class="comment">// (as if it&#39;s the second time we tap on it, mouseenter compat event</span></div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;          <span class="comment">// is NOT fired) and after a timeout (to allow for mouse compatibility</span></div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;          <span class="comment">// events to fire) we explicitly restart cycling</span></div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;          $$$1(this._element).on(Event.TOUCHEND, function () {</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;            _this2.pause();</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;            <span class="keywordflow">if</span> (_this2.touchTimeout) {</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;              clearTimeout(_this2.touchTimeout);</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;            }</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;            _this2.touchTimeout = setTimeout(<span class="keyword">function</span> (event) {</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;              <span class="keywordflow">return</span> _this2.cycle(event);</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;            }, TOUCHEVENT_COMPAT_WAIT + _this2._config.interval);</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;          });</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;        }</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;      }</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;    };</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;    _proto._keydown = <span class="keyword">function</span> _keydown(event) {</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;      <span class="keywordflow">if</span> (/<a class="code" href="../../df/d5f/a00064.php#a07a2aabd64594dc36dd810cad2669deb">input</a>|textarea/<a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>.test(event.target.tagName)) {</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;      }</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;      <span class="keywordflow">switch</span> (event.which) {</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;        <span class="keywordflow">case</span> ARROW_LEFT_KEYCODE:</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;          <span class="keyword">event</span>.preventDefault();</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;          this.prev();</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;          <span class="keywordflow">break</span>;</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;        <span class="keywordflow">case</span> ARROW_RIGHT_KEYCODE:</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;          <span class="keyword">event</span>.preventDefault();</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;          this.next();</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;          <span class="keywordflow">break</span>;</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;      }</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;    };</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;    _proto._getItemIndex = <span class="keyword">function</span> _getItemIndex(element) {</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;      this._items = $$$1.makeArray($$$1(element).parent().find(Selector.ITEM));</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;      <span class="keywordflow">return</span> this._items.indexOf(element);</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;    };</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;    _proto._getItemByDirection = <span class="keyword">function</span> _getItemByDirection(direction, activeElement) {</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;      var isNextDirection = direction === Direction.NEXT;</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;      var isPrevDirection = direction === Direction.PREV;</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;      var activeIndex = this._getItemIndex(activeElement);</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;      var lastItemIndex = this._items.length - 1;</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;      var isGoingToWrap = isPrevDirection &amp;&amp; activeIndex === 0 || isNextDirection &amp;&amp; activeIndex === lastItemIndex;</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;      <span class="keywordflow">if</span> (isGoingToWrap &amp;&amp; !this._config.wrap) {</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;        <span class="keywordflow">return</span> activeElement;</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;      }</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;      var delta = direction === Direction.PREV ? -1 : 1;</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;      var itemIndex = (activeIndex + delta) % this._items.length;</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;      <span class="keywordflow">return</span> itemIndex === -1 ? <span class="keyword">this</span>._items[<span class="keyword">this</span>._items.length - 1] : <span class="keyword">this</span>._items[itemIndex];</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;    };</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;    _proto._triggerSlideEvent = <span class="keyword">function</span> _triggerSlideEvent(relatedTarget, eventDirectionName) {</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;      var targetIndex = this._getItemIndex(relatedTarget);</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;      var fromIndex = this._getItemIndex($$$1(this._element).find(Selector.ACTIVE_ITEM)[0]);</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;      var slideEvent = $$$1.Event(Event.SLIDE, {</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;        relatedTarget: relatedTarget,</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;        direction: eventDirectionName,</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;        from: fromIndex,</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;        to: targetIndex</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;      });</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;      $$$1(this._element).trigger(slideEvent);</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;      <span class="keywordflow">return</span> slideEvent;</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;    };</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;    _proto._setActiveIndicatorElement = <span class="keyword">function</span> _setActiveIndicatorElement(element) {</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;      <span class="keywordflow">if</span> (this._indicatorsElement) {</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;        $$$1(this._indicatorsElement).find(Selector.ACTIVE).removeClass(ClassName.ACTIVE);</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;</div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;        var nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;        <span class="keywordflow">if</span> (nextIndicator) {</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;          $$$1(nextIndicator).addClass(ClassName.ACTIVE);</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;        }</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;      }</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;    };</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;    _proto._slide = <span class="keyword">function</span> _slide(direction, element) {</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;      var _this3 = <span class="keyword">this</span>;</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;      var activeElement = $$$1(this._element).find(Selector.ACTIVE_ITEM)[0];</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;      var activeElementIndex = this._getItemIndex(activeElement);</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;      var nextElement = element || activeElement &amp;&amp; this._getItemByDirection(direction, activeElement);</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;      var nextElementIndex = this._getItemIndex(nextElement);</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;      var isCycling = Boolean(this._interval);</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;      var directionalClassName;</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;      var orderClassName;</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;      var eventDirectionName;</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;      <span class="keywordflow">if</span> (direction === Direction.NEXT) {</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;        directionalClassName = ClassName.LEFT;</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;        orderClassName = ClassName.NEXT;</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;        eventDirectionName = Direction.LEFT;</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;        directionalClassName = ClassName.RIGHT;</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;        orderClassName = ClassName.PREV;</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;        eventDirectionName = Direction.RIGHT;</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;      }</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;      <span class="keywordflow">if</span> (nextElement &amp;&amp; $$$1(nextElement).hasClass(ClassName.ACTIVE)) {</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;        this._isSliding = <span class="keyword">false</span>;</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;      }</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;      var slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName);</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;</div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;      <span class="keywordflow">if</span> (slideEvent.isDefaultPrevented()) {</div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;      }</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;      <span class="keywordflow">if</span> (!activeElement || !nextElement) {</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;        <span class="comment">// Some weirdness is happening, so we bail</span></div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;      }</div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;      this._isSliding = <span class="keyword">true</span>;</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;      <span class="keywordflow">if</span> (isCycling) {</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;        this.pause();</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;      }</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;      this._setActiveIndicatorElement(nextElement);</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;</div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;      var slidEvent = $$$1.Event(Event.SLID, {</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;        relatedTarget: nextElement,</div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;        direction: eventDirectionName,</div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;        from: activeElementIndex,</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;        to: nextElementIndex</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;      });</div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;      <span class="keywordflow">if</span> (Util.supportsTransitionEnd() &amp;&amp; $$$1(this._element).hasClass(ClassName.SLIDE)) {</div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;        $$$1(nextElement).addClass(orderClassName);</div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;        Util.reflow(nextElement);</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;        $$$1(activeElement).addClass(directionalClassName);</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;        $$$1(nextElement).addClass(directionalClassName);</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;        $$$1(activeElement).one(Util.TRANSITION_END, function () {</div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;          $$$1(nextElement).removeClass(directionalClassName + <span class="stringliteral">&quot; &quot;</span> + orderClassName).addClass(ClassName.ACTIVE);</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;          $$$1(activeElement).removeClass(ClassName.ACTIVE + <span class="stringliteral">&quot; &quot;</span> + orderClassName + <span class="stringliteral">&quot; &quot;</span> + directionalClassName);</div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;          _this3._isSliding = <span class="keyword">false</span>;</div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;          setTimeout(<span class="keyword">function</span> () {</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;            <span class="keywordflow">return</span> $$$1(_this3._element).trigger(slidEvent);</div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;          }, 0);</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;        }).<a class="code" href="../../db/db2/a00020.php#a006fe6a2a254572b367123c6db401ff3">emulateTransitionEnd</a>(TRANSITION_DURATION);</div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;        $$$1(activeElement).removeClass(ClassName.ACTIVE);</div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;        $$$1(nextElement).addClass(ClassName.ACTIVE);</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;        this._isSliding = <span class="keyword">false</span>;</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;        $$$1(this._element).trigger(slidEvent);</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;      }</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;</div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;      <span class="keywordflow">if</span> (isCycling) {</div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;        this.cycle();</div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;      }</div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;    }; <span class="comment">// Static</span></div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;</div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;    Carousel._jQueryInterface = <span class="keyword">function</span> _jQueryInterface(config) {</div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;      <span class="keywordflow">return</span> this.<a class="code" href="../../d3/dea/a00046.php#a877963eb3bdbe10cffb2337a091a7ff1">each</a>(<span class="keyword">function</span> () {</div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;        var <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a> = $$$1(<span class="keyword">this</span>).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(DATA_KEY);</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;</div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;        var _config = <a class="code" href="../../d4/d51/a00017.php#ac2eea16a19b83a9509e2f9188c0fdc0f">_extends</a>({}, Default, $$$1(<span class="keyword">this</span>).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>());</div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;</div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;        <span class="keywordflow">if</span> (typeof config === <span class="stringliteral">&#39;object&#39;</span>) {</div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;          _config = <a class="code" href="../../d4/d51/a00017.php#ac2eea16a19b83a9509e2f9188c0fdc0f">_extends</a>({}, _config, config);</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;        }</div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;</div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;        var action = typeof config === <span class="stringliteral">&#39;string&#39;</span> ? config : _config.slide;</div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;</div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;        <span class="keywordflow">if</span> (!data) {</div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;          data = <span class="keyword">new</span> <a class="code" href="../../d4/d51/a00017.php#a973fed123161d28ea502af96c99576a6">Carousel</a>(<span class="keyword">this</span>, _config);</div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;          $$$1(<span class="keyword">this</span>).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(DATA_KEY, data);</div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;        }</div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;</div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;        <span class="keywordflow">if</span> (typeof config === <span class="stringliteral">&#39;number&#39;</span>) {</div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;          data.to(config);</div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (typeof action === <span class="stringliteral">&#39;string&#39;</span>) {</div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;          <span class="keywordflow">if</span> (typeof data[action] === <span class="stringliteral">&#39;undefined&#39;</span>) {</div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> TypeError(<span class="stringliteral">&quot;No method named \&quot;&quot;</span> + action + <span class="stringliteral">&quot;\&quot;&quot;</span>);</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;          }</div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;          data[action]();</div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (_config.interval) {</div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;          data.pause();</div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;          data.cycle();</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;        }</div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;      });</div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;    };</div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;</div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;    Carousel._dataApiClickHandler = <span class="keyword">function</span> _dataApiClickHandler(event) {</div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;      var selector = Util.getSelectorFromElement(<span class="keyword">this</span>);</div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;</div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;      <span class="keywordflow">if</span> (!selector) {</div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;      }</div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;</div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;      var target = $$$1(selector)[0];</div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;</div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;      <span class="keywordflow">if</span> (!target || !$$$1(target).hasClass(ClassName.CAROUSEL)) {</div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;      }</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;</div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;      var config = <a class="code" href="../../d4/d51/a00017.php#ac2eea16a19b83a9509e2f9188c0fdc0f">_extends</a>({}, $$$1(target).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(), $$$1(<span class="keyword">this</span>).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>());</div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;      var slideIndex = this.getAttribute(<span class="stringliteral">&#39;data-slide-to&#39;</span>);</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;</div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;      <span class="keywordflow">if</span> (slideIndex) {</div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;        config.interval = <span class="keyword">false</span>;</div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;      }</div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;</div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;      Carousel._jQueryInterface.call($$$1(target), config);</div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;</div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;      <span class="keywordflow">if</span> (slideIndex) {</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;        $$$1(target).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(DATA_KEY).to(slideIndex);</div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;      }</div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;</div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;      <span class="keyword">event</span>.preventDefault();</div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;    };</div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;</div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;    <a class="code" href="../../d4/d51/a00017.php#a39e10dc3069b4a23aa52bea0bec60e36">_createClass</a>(Carousel, null, [{</div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;      key: <span class="stringliteral">&quot;VERSION&quot;</span>,</div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../db/db2/a00020.php#a3635f2df5844f69204b70bf7b3983587">VERSION</a>;</div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;      }</div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;    }, {</div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;      key: <span class="stringliteral">&quot;Default&quot;</span>,</div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;        <span class="keywordflow">return</span> Default;</div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;      }</div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;    }]);</div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#a973fed123161d28ea502af96c99576a6">Carousel</a>;</div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;  }();</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;  $$$1(document).on(Event.CLICK_DATA_API, Selector.DATA_SLIDE, Carousel._dataApiClickHandler);</div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;  $$$1(window).on(Event.LOAD_DATA_API, function () {</div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;    $$$1(Selector.DATA_RIDE).<a class="code" href="../../d3/dea/a00046.php#a877963eb3bdbe10cffb2337a091a7ff1">each</a>(<span class="keyword">function</span> () {</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;      var $carousel = $$$1(<span class="keyword">this</span>);</div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;</div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;      Carousel._jQueryInterface.call($carousel, $carousel.data());</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;    });</div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;  });</div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;  $$$1.fn[NAME] = Carousel._jQueryInterface;</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;  $$$1.fn[NAME].Constructor = <a class="code" href="../../d4/d51/a00017.php#a973fed123161d28ea502af96c99576a6">Carousel</a>;</div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;</div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;  $$$1.fn[NAME].noConflict = <span class="keyword">function</span> () {</div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;    $$$1.fn[NAME] = JQUERY_NO_CONFLICT;</div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;    <span class="keywordflow">return</span> Carousel._jQueryInterface;</div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;  };</div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;</div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#a973fed123161d28ea502af96c99576a6">Carousel</a>;</div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;}($);</div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;</div><div class="line"><a name="l01035"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a4df4f2a75d24a2e6a7e8a33a097c355a"> 1035</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#a4df4f2a75d24a2e6a7e8a33a097c355a">Collapse</a> = <span class="keyword">function</span> ($$$1) {</div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;  var NAME = <span class="stringliteral">&#39;collapse&#39;</span>;</div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;  var <a class="code" href="../../db/db2/a00020.php#a3635f2df5844f69204b70bf7b3983587">VERSION</a> = <span class="stringliteral">&#39;4.0.0&#39;</span>;</div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;  var DATA_KEY = <span class="stringliteral">&#39;bs.collapse&#39;</span>;</div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;  var EVENT_KEY = <span class="stringliteral">&quot;.&quot;</span> + DATA_KEY;</div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;  var DATA_API_KEY = <span class="stringliteral">&#39;.data-api&#39;</span>;</div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;  var JQUERY_NO_CONFLICT = $$$1.fn[NAME];</div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;  var <a class="code" href="../../db/db2/a00020.php#ae4adb159aeacba734c34bd530baf92f6">TRANSITION_DURATION</a> = 600;</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;  var Default = {</div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;    <a class="code" href="../../db/db2/a00020.php#aa8e797a9bda5e7e313be3518054164a3">toggle</a>: <span class="keyword">true</span>,</div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;    parent: <span class="stringliteral">&#39;&#39;</span></div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;  };</div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;  var DefaultType = {</div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;    <a class="code" href="../../db/db2/a00020.php#aa8e797a9bda5e7e313be3518054164a3">toggle</a>: <span class="stringliteral">&#39;boolean&#39;</span>,</div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;    parent: <span class="stringliteral">&#39;(string|element)&#39;</span></div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;  };</div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;  var Event = {</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;    SHOW: <span class="stringliteral">&quot;show&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;    SHOWN: <span class="stringliteral">&quot;shown&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;    HIDE: <span class="stringliteral">&quot;hide&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;    HIDDEN: <span class="stringliteral">&quot;hidden&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;    CLICK_DATA_API: <span class="stringliteral">&quot;click&quot;</span> + EVENT_KEY + DATA_API_KEY</div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;  };</div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;  var ClassName = {</div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;    SHOW: <span class="stringliteral">&#39;show&#39;</span>,</div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;    COLLAPSE: <span class="stringliteral">&#39;collapse&#39;</span>,</div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;    COLLAPSING: <span class="stringliteral">&#39;collapsing&#39;</span>,</div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;    COLLAPSED: <span class="stringliteral">&#39;collapsed&#39;</span></div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;  };</div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;  var Dimension = {</div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;    WIDTH: <span class="stringliteral">&#39;width&#39;</span>,</div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;    HEIGHT: <span class="stringliteral">&#39;height&#39;</span></div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;  };</div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;  var Selector = {</div><div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;    ACTIVES: <span class="stringliteral">&#39;.show, .collapsing&#39;</span>,</div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;    DATA_TOGGLE: <span class="stringliteral">&#39;[data-toggle=&quot;collapse&quot;]&#39;</span></div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;  };</div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;</div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;  var Collapse =</div><div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;  <span class="comment">/*#__PURE__*/</span></div><div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;  <span class="keyword">function</span> () {</div><div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;    <span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#a4df4f2a75d24a2e6a7e8a33a097c355a">Collapse</a>(element, config) {</div><div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;      this._isTransitioning = <span class="keyword">false</span>;</div><div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;      this._element = element;</div><div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;      this._config = this._getConfig(config);</div><div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;      this._triggerArray = $$$1.makeArray($$$1(<span class="stringliteral">&quot;[data-toggle=\&quot;collapse\&quot;][href=\&quot;#&quot;</span> + element.id + <span class="stringliteral">&quot;\&quot;],&quot;</span> + (<span class="stringliteral">&quot;[data-toggle=\&quot;collapse\&quot;][data-target=\&quot;#&quot;</span> + element.id + <span class="stringliteral">&quot;\&quot;]&quot;</span>)));</div><div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;      var tabToggles = $$$1(Selector.DATA_TOGGLE);</div><div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;</div><div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;      <span class="keywordflow">for</span> (var <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a> = 0; <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a> &lt; tabToggles.length; <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>++) {</div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;        var elem = tabToggles[<a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>];</div><div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;        var selector = Util.getSelectorFromElement(elem);</div><div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;</div><div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;        <span class="keywordflow">if</span> (selector !== null &amp;&amp; $$$1(selector).filter(element).length &gt; 0) {</div><div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;          this._selector = selector;</div><div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;</div><div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;          this._triggerArray.push(elem);</div><div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;        }</div><div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;      }</div><div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;</div><div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;      this._parent = this._config.parent ? this._getParent() : null;</div><div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;</div><div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;      <span class="keywordflow">if</span> (!this._config.parent) {</div><div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;        this._addAriaAndCollapsedClass(this._element, this._triggerArray);</div><div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;      }</div><div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;</div><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;      <span class="keywordflow">if</span> (this._config.toggle) {</div><div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;        this.<a class="code" href="../../db/db2/a00020.php#aa8e797a9bda5e7e313be3518054164a3">toggle</a>();</div><div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;      }</div><div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;    } <span class="comment">// Getters</span></div><div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;</div><div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;</div><div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;    var _proto = Collapse.prototype;</div><div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;</div><div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;    <span class="comment">// Public</span></div><div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;    _proto.toggle = <span class="keyword">function</span> <a class="code" href="../../db/db2/a00020.php#aa8e797a9bda5e7e313be3518054164a3">toggle</a>() {</div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;      <span class="keywordflow">if</span> ($$$1(this._element).hasClass(ClassName.SHOW)) {</div><div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;        this.hide();</div><div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;        this.show();</div><div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;      }</div><div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;    };</div><div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;</div><div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;    _proto.show = <span class="keyword">function</span> show() {</div><div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;      var _this = <span class="keyword">this</span>;</div><div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;</div><div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;      <span class="keywordflow">if</span> (this._isTransitioning || $$$1(this._element).hasClass(ClassName.SHOW)) {</div><div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;      }</div><div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;</div><div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;      var actives;</div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;      var activesData;</div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;</div><div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;      <span class="keywordflow">if</span> (this._parent) {</div><div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;        actives = $$$1.makeArray($$$1(this._parent).find(Selector.ACTIVES).filter(<span class="stringliteral">&quot;[data-parent=\&quot;&quot;</span> + <span class="keyword">this</span>._config.parent + <span class="stringliteral">&quot;\&quot;]&quot;</span>));</div><div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;</div><div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;        <span class="keywordflow">if</span> (actives.length === 0) {</div><div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;          actives = null;</div><div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;        }</div><div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;      }</div><div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;</div><div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;      <span class="keywordflow">if</span> (actives) {</div><div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;        activesData = $$$1(actives).not(this._selector).data(DATA_KEY);</div><div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;</div><div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;        <span class="keywordflow">if</span> (activesData &amp;&amp; activesData._isTransitioning) {</div><div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;          <span class="keywordflow">return</span>;</div><div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;        }</div><div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;      }</div><div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;</div><div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;      var startEvent = $$$1.Event(Event.SHOW);</div><div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;      $$$1(this._element).trigger(startEvent);</div><div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;</div><div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;      <span class="keywordflow">if</span> (startEvent.isDefaultPrevented()) {</div><div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;      }</div><div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;</div><div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;      <span class="keywordflow">if</span> (actives) {</div><div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;        Collapse._jQueryInterface.call($$$1(actives).not(this._selector), <span class="stringliteral">&#39;hide&#39;</span>);</div><div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;</div><div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;        <span class="keywordflow">if</span> (!activesData) {</div><div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;          $$$1(actives).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(DATA_KEY, null);</div><div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;        }</div><div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;      }</div><div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;</div><div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;      var dimension = this._getDimension();</div><div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;</div><div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;      $$$1(this._element).removeClass(ClassName.COLLAPSE).addClass(ClassName.COLLAPSING);</div><div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;      this._element.style[dimension] = 0;</div><div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;</div><div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;      <span class="keywordflow">if</span> (this._triggerArray.length &gt; 0) {</div><div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;        $$$1(this._triggerArray).removeClass(ClassName.COLLAPSED).attr(<span class="stringliteral">&#39;aria-expanded&#39;</span>, <span class="keyword">true</span>);</div><div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;      }</div><div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;</div><div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;      this.setTransitioning(<span class="keyword">true</span>);</div><div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;</div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;      var complete = <span class="keyword">function</span> complete() {</div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;        $$$1(_this._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).addClass(ClassName.SHOW);</div><div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;        _this._element.style[dimension] = <span class="stringliteral">&#39;&#39;</span>;</div><div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;</div><div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;        _this.setTransitioning(<span class="keyword">false</span>);</div><div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;</div><div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;        $$$1(_this._element).trigger(Event.SHOWN);</div><div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;      };</div><div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;</div><div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;      <span class="keywordflow">if</span> (!Util.supportsTransitionEnd()) {</div><div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;        complete();</div><div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;      }</div><div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;</div><div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;      var capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);</div><div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;      var scrollSize = <span class="stringliteral">&quot;scroll&quot;</span> + capitalizedDimension;</div><div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;      $$$1(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);</div><div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;      this._element.style[dimension] = this._element[scrollSize] + <span class="stringliteral">&quot;px&quot;</span>;</div><div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;    };</div><div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;</div><div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;    _proto.hide = <span class="keyword">function</span> hide() {</div><div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;      var _this2 = <span class="keyword">this</span>;</div><div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;</div><div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;      <span class="keywordflow">if</span> (this._isTransitioning || !$$$1(this._element).hasClass(ClassName.SHOW)) {</div><div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;      }</div><div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;</div><div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;      var startEvent = $$$1.Event(Event.HIDE);</div><div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;      $$$1(this._element).trigger(startEvent);</div><div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;</div><div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;      <span class="keywordflow">if</span> (startEvent.isDefaultPrevented()) {</div><div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;      }</div><div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;</div><div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;      var dimension = this._getDimension();</div><div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;</div><div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;      this._element.style[dimension] = this._element.getBoundingClientRect()[dimension] + <span class="stringliteral">&quot;px&quot;</span>;</div><div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;      Util.reflow(this._element);</div><div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;      $$$1(this._element).addClass(ClassName.COLLAPSING).removeClass(ClassName.COLLAPSE).removeClass(ClassName.SHOW);</div><div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;</div><div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;      <span class="keywordflow">if</span> (this._triggerArray.length &gt; 0) {</div><div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;        <span class="keywordflow">for</span> (var <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a> = 0; <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a> &lt; this._triggerArray.length; <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>++) {</div><div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;          var trigger = this._triggerArray[<a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>];</div><div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;          var selector = Util.getSelectorFromElement(trigger);</div><div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;</div><div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;          <span class="keywordflow">if</span> (selector !== null) {</div><div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;            var $elem = $$$1(selector);</div><div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;</div><div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;            <span class="keywordflow">if</span> (!$elem.hasClass(ClassName.SHOW)) {</div><div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;              $$$1(trigger).addClass(ClassName.COLLAPSED).attr(<span class="stringliteral">&#39;aria-expanded&#39;</span>, <span class="keyword">false</span>);</div><div class="line"><a name="l01230"></a><span class="lineno"> 1230</span>&#160;            }</div><div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;          }</div><div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;        }</div><div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;      }</div><div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;</div><div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;      this.setTransitioning(<span class="keyword">true</span>);</div><div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;</div><div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;      var complete = <span class="keyword">function</span> complete() {</div><div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;        _this2.setTransitioning(<span class="keyword">false</span>);</div><div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;</div><div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;        $$$1(_this2._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).trigger(Event.HIDDEN);</div><div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;      };</div><div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;</div><div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;      this._element.style[dimension] = <span class="stringliteral">&#39;&#39;</span>;</div><div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;</div><div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;      <span class="keywordflow">if</span> (!Util.supportsTransitionEnd()) {</div><div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;        complete();</div><div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;      }</div><div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;</div><div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;      $$$1(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);</div><div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;    };</div><div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160;</div><div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;    _proto.setTransitioning = <span class="keyword">function</span> setTransitioning(isTransitioning) {</div><div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;      this._isTransitioning = isTransitioning;</div><div class="line"><a name="l01255"></a><span class="lineno"> 1255</span>&#160;    };</div><div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;</div><div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160;    _proto.dispose = <span class="keyword">function</span> dispose() {</div><div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;      $$$1.removeData(this._element, DATA_KEY);</div><div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;      this._config = null;</div><div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;      this._parent = null;</div><div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;      this._element = null;</div><div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;      this._triggerArray = null;</div><div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;      this._isTransitioning = null;</div><div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;    }; <span class="comment">// Private</span></div><div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;</div><div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;</div><div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160;    _proto._getConfig = <span class="keyword">function</span> _getConfig(config) {</div><div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;      config = <a class="code" href="../../d4/d51/a00017.php#ac2eea16a19b83a9509e2f9188c0fdc0f">_extends</a>({}, Default, config);</div><div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;      config.toggle = Boolean(config.toggle); <span class="comment">// Coerce string values</span></div><div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;</div><div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;      Util.typeCheckConfig(NAME, config, DefaultType);</div><div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;      <span class="keywordflow">return</span> config;</div><div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;    };</div><div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;</div><div class="line"><a name="l01275"></a><span class="lineno"> 1275</span>&#160;    _proto._getDimension = <span class="keyword">function</span> _getDimension() {</div><div class="line"><a name="l01276"></a><span class="lineno"> 1276</span>&#160;      var hasWidth = $$$1(this._element).hasClass(Dimension.WIDTH);</div><div class="line"><a name="l01277"></a><span class="lineno"> 1277</span>&#160;      <span class="keywordflow">return</span> hasWidth ? Dimension.WIDTH : Dimension.HEIGHT;</div><div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;    };</div><div class="line"><a name="l01279"></a><span class="lineno"> 1279</span>&#160;</div><div class="line"><a name="l01280"></a><span class="lineno"> 1280</span>&#160;    _proto._getParent = <span class="keyword">function</span> _getParent() {</div><div class="line"><a name="l01281"></a><span class="lineno"> 1281</span>&#160;      var _this3 = <span class="keyword">this</span>;</div><div class="line"><a name="l01282"></a><span class="lineno"> 1282</span>&#160;</div><div class="line"><a name="l01283"></a><span class="lineno"> 1283</span>&#160;      var parent = null;</div><div class="line"><a name="l01284"></a><span class="lineno"> 1284</span>&#160;</div><div class="line"><a name="l01285"></a><span class="lineno"> 1285</span>&#160;      <span class="keywordflow">if</span> (Util.isElement(<span class="keyword">this</span>._config.parent)) {</div><div class="line"><a name="l01286"></a><span class="lineno"> 1286</span>&#160;        parent = this._config.parent; <span class="comment">// It&#39;s a jQuery object</span></div><div class="line"><a name="l01287"></a><span class="lineno"> 1287</span>&#160;</div><div class="line"><a name="l01288"></a><span class="lineno"> 1288</span>&#160;        <span class="keywordflow">if</span> (typeof this._config.parent.jquery !== <span class="stringliteral">&#39;undefined&#39;</span>) {</div><div class="line"><a name="l01289"></a><span class="lineno"> 1289</span>&#160;          parent = this._config.parent[0];</div><div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;        }</div><div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160;        parent = $$$1(this._config.parent)[0];</div><div class="line"><a name="l01293"></a><span class="lineno"> 1293</span>&#160;      }</div><div class="line"><a name="l01294"></a><span class="lineno"> 1294</span>&#160;</div><div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;      var selector = <span class="stringliteral">&quot;[data-toggle=\&quot;collapse\&quot;][data-parent=\&quot;&quot;</span> + this._config.parent + <span class="stringliteral">&quot;\&quot;]&quot;</span>;</div><div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;      $$$1(parent).find(selector).each(<span class="keyword">function</span> (<a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>, element) {</div><div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;        _this3._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);</div><div class="line"><a name="l01298"></a><span class="lineno"> 1298</span>&#160;      });</div><div class="line"><a name="l01299"></a><span class="lineno"> 1299</span>&#160;      <span class="keywordflow">return</span> parent;</div><div class="line"><a name="l01300"></a><span class="lineno"> 1300</span>&#160;    };</div><div class="line"><a name="l01301"></a><span class="lineno"> 1301</span>&#160;</div><div class="line"><a name="l01302"></a><span class="lineno"> 1302</span>&#160;    _proto._addAriaAndCollapsedClass = <span class="keyword">function</span> _addAriaAndCollapsedClass(element, triggerArray) {</div><div class="line"><a name="l01303"></a><span class="lineno"> 1303</span>&#160;      <span class="keywordflow">if</span> (element) {</div><div class="line"><a name="l01304"></a><span class="lineno"> 1304</span>&#160;        var isOpen = $$$1(element).hasClass(ClassName.SHOW);</div><div class="line"><a name="l01305"></a><span class="lineno"> 1305</span>&#160;</div><div class="line"><a name="l01306"></a><span class="lineno"> 1306</span>&#160;        <span class="keywordflow">if</span> (triggerArray.length &gt; 0) {</div><div class="line"><a name="l01307"></a><span class="lineno"> 1307</span>&#160;          $$$1(triggerArray).toggleClass(ClassName.COLLAPSED, !isOpen).attr(<span class="stringliteral">&#39;aria-expanded&#39;</span>, isOpen);</div><div class="line"><a name="l01308"></a><span class="lineno"> 1308</span>&#160;        }</div><div class="line"><a name="l01309"></a><span class="lineno"> 1309</span>&#160;      }</div><div class="line"><a name="l01310"></a><span class="lineno"> 1310</span>&#160;    }; <span class="comment">// Static</span></div><div class="line"><a name="l01311"></a><span class="lineno"> 1311</span>&#160;</div><div class="line"><a name="l01312"></a><span class="lineno"> 1312</span>&#160;</div><div class="line"><a name="l01313"></a><span class="lineno"> 1313</span>&#160;    Collapse._getTargetFromElement = <span class="keyword">function</span> _getTargetFromElement(element) {</div><div class="line"><a name="l01314"></a><span class="lineno"> 1314</span>&#160;      var selector = Util.getSelectorFromElement(element);</div><div class="line"><a name="l01315"></a><span class="lineno"> 1315</span>&#160;      <span class="keywordflow">return</span> selector ? $$$1(selector)[0] : null;</div><div class="line"><a name="l01316"></a><span class="lineno"> 1316</span>&#160;    };</div><div class="line"><a name="l01317"></a><span class="lineno"> 1317</span>&#160;</div><div class="line"><a name="l01318"></a><span class="lineno"> 1318</span>&#160;    Collapse._jQueryInterface = <span class="keyword">function</span> _jQueryInterface(config) {</div><div class="line"><a name="l01319"></a><span class="lineno"> 1319</span>&#160;      <span class="keywordflow">return</span> this.<a class="code" href="../../d3/dea/a00046.php#a877963eb3bdbe10cffb2337a091a7ff1">each</a>(<span class="keyword">function</span> () {</div><div class="line"><a name="l01320"></a><span class="lineno"> 1320</span>&#160;        var $this = $$$1(<span class="keyword">this</span>);</div><div class="line"><a name="l01321"></a><span class="lineno"> 1321</span>&#160;        var <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a> = $this.<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(DATA_KEY);</div><div class="line"><a name="l01322"></a><span class="lineno"> 1322</span>&#160;</div><div class="line"><a name="l01323"></a><span class="lineno"> 1323</span>&#160;        var _config = <a class="code" href="../../d4/d51/a00017.php#ac2eea16a19b83a9509e2f9188c0fdc0f">_extends</a>({}, Default, $this.<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(), typeof config === <span class="stringliteral">&#39;object&#39;</span> &amp;&amp; config);</div><div class="line"><a name="l01324"></a><span class="lineno"> 1324</span>&#160;</div><div class="line"><a name="l01325"></a><span class="lineno"> 1325</span>&#160;        <span class="keywordflow">if</span> (!data &amp;&amp; _config.toggle &amp;&amp; /show|hide/.test(config)) {</div><div class="line"><a name="l01326"></a><span class="lineno"> 1326</span>&#160;          _config.toggle = <span class="keyword">false</span>;</div><div class="line"><a name="l01327"></a><span class="lineno"> 1327</span>&#160;        }</div><div class="line"><a name="l01328"></a><span class="lineno"> 1328</span>&#160;</div><div class="line"><a name="l01329"></a><span class="lineno"> 1329</span>&#160;        <span class="keywordflow">if</span> (!data) {</div><div class="line"><a name="l01330"></a><span class="lineno"> 1330</span>&#160;          data = <span class="keyword">new</span> <a class="code" href="../../d4/d51/a00017.php#a4df4f2a75d24a2e6a7e8a33a097c355a">Collapse</a>(<span class="keyword">this</span>, _config);</div><div class="line"><a name="l01331"></a><span class="lineno"> 1331</span>&#160;          $this.<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(DATA_KEY, data);</div><div class="line"><a name="l01332"></a><span class="lineno"> 1332</span>&#160;        }</div><div class="line"><a name="l01333"></a><span class="lineno"> 1333</span>&#160;</div><div class="line"><a name="l01334"></a><span class="lineno"> 1334</span>&#160;        <span class="keywordflow">if</span> (typeof config === <span class="stringliteral">&#39;string&#39;</span>) {</div><div class="line"><a name="l01335"></a><span class="lineno"> 1335</span>&#160;          <span class="keywordflow">if</span> (typeof data[config] === <span class="stringliteral">&#39;undefined&#39;</span>) {</div><div class="line"><a name="l01336"></a><span class="lineno"> 1336</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> TypeError(<span class="stringliteral">&quot;No method named \&quot;&quot;</span> + config + <span class="stringliteral">&quot;\&quot;&quot;</span>);</div><div class="line"><a name="l01337"></a><span class="lineno"> 1337</span>&#160;          }</div><div class="line"><a name="l01338"></a><span class="lineno"> 1338</span>&#160;</div><div class="line"><a name="l01339"></a><span class="lineno"> 1339</span>&#160;          data[config]();</div><div class="line"><a name="l01340"></a><span class="lineno"> 1340</span>&#160;        }</div><div class="line"><a name="l01341"></a><span class="lineno"> 1341</span>&#160;      });</div><div class="line"><a name="l01342"></a><span class="lineno"> 1342</span>&#160;    };</div><div class="line"><a name="l01343"></a><span class="lineno"> 1343</span>&#160;</div><div class="line"><a name="l01344"></a><span class="lineno"> 1344</span>&#160;    <a class="code" href="../../d4/d51/a00017.php#a39e10dc3069b4a23aa52bea0bec60e36">_createClass</a>(Collapse, null, [{</div><div class="line"><a name="l01345"></a><span class="lineno"> 1345</span>&#160;      key: <span class="stringliteral">&quot;VERSION&quot;</span>,</div><div class="line"><a name="l01346"></a><span class="lineno"> 1346</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l01347"></a><span class="lineno"> 1347</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../db/db2/a00020.php#a3635f2df5844f69204b70bf7b3983587">VERSION</a>;</div><div class="line"><a name="l01348"></a><span class="lineno"> 1348</span>&#160;      }</div><div class="line"><a name="l01349"></a><span class="lineno"> 1349</span>&#160;    }, {</div><div class="line"><a name="l01350"></a><span class="lineno"> 1350</span>&#160;      key: <span class="stringliteral">&quot;Default&quot;</span>,</div><div class="line"><a name="l01351"></a><span class="lineno"> 1351</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l01352"></a><span class="lineno"> 1352</span>&#160;        <span class="keywordflow">return</span> Default;</div><div class="line"><a name="l01353"></a><span class="lineno"> 1353</span>&#160;      }</div><div class="line"><a name="l01354"></a><span class="lineno"> 1354</span>&#160;    }]);</div><div class="line"><a name="l01355"></a><span class="lineno"> 1355</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#a4df4f2a75d24a2e6a7e8a33a097c355a">Collapse</a>;</div><div class="line"><a name="l01356"></a><span class="lineno"> 1356</span>&#160;  }();</div><div class="line"><a name="l01364"></a><span class="lineno"> 1364</span>&#160;  $$$1(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {</div><div class="line"><a name="l01365"></a><span class="lineno"> 1365</span>&#160;    <span class="comment">// preventDefault only for &lt;a&gt; elements (which change the URL) not inside the collapsible element</span></div><div class="line"><a name="l01366"></a><span class="lineno"> 1366</span>&#160;    <span class="keywordflow">if</span> (event.currentTarget.tagName === <span class="charliteral">&#39;A&#39;</span>) {</div><div class="line"><a name="l01367"></a><span class="lineno"> 1367</span>&#160;      <span class="keyword">event</span>.preventDefault();</div><div class="line"><a name="l01368"></a><span class="lineno"> 1368</span>&#160;    }</div><div class="line"><a name="l01369"></a><span class="lineno"> 1369</span>&#160;</div><div class="line"><a name="l01370"></a><span class="lineno"> 1370</span>&#160;    var $trigger = $$$1(<span class="keyword">this</span>);</div><div class="line"><a name="l01371"></a><span class="lineno"> 1371</span>&#160;    var selector = Util.getSelectorFromElement(<span class="keyword">this</span>);</div><div class="line"><a name="l01372"></a><span class="lineno"> 1372</span>&#160;    $$$1(selector).<a class="code" href="../../d3/dea/a00046.php#a877963eb3bdbe10cffb2337a091a7ff1">each</a>(<span class="keyword">function</span> () {</div><div class="line"><a name="l01373"></a><span class="lineno"> 1373</span>&#160;      var $target = $$$1(<span class="keyword">this</span>);</div><div class="line"><a name="l01374"></a><span class="lineno"> 1374</span>&#160;      var <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a> = $target.data(DATA_KEY);</div><div class="line"><a name="l01375"></a><span class="lineno"> 1375</span>&#160;      var config = data ? <span class="stringliteral">&#39;toggle&#39;</span> : $trigger.data();</div><div class="line"><a name="l01376"></a><span class="lineno"> 1376</span>&#160;</div><div class="line"><a name="l01377"></a><span class="lineno"> 1377</span>&#160;      Collapse._jQueryInterface.call($target, config);</div><div class="line"><a name="l01378"></a><span class="lineno"> 1378</span>&#160;    });</div><div class="line"><a name="l01379"></a><span class="lineno"> 1379</span>&#160;  });</div><div class="line"><a name="l01386"></a><span class="lineno"> 1386</span>&#160;  $$$1.fn[NAME] = Collapse._jQueryInterface;</div><div class="line"><a name="l01387"></a><span class="lineno"> 1387</span>&#160;  $$$1.fn[NAME].Constructor = <a class="code" href="../../d4/d51/a00017.php#a4df4f2a75d24a2e6a7e8a33a097c355a">Collapse</a>;</div><div class="line"><a name="l01388"></a><span class="lineno"> 1388</span>&#160;</div><div class="line"><a name="l01389"></a><span class="lineno"> 1389</span>&#160;  $$$1.fn[NAME].noConflict = <span class="keyword">function</span> () {</div><div class="line"><a name="l01390"></a><span class="lineno"> 1390</span>&#160;    $$$1.fn[NAME] = JQUERY_NO_CONFLICT;</div><div class="line"><a name="l01391"></a><span class="lineno"> 1391</span>&#160;    <span class="keywordflow">return</span> Collapse._jQueryInterface;</div><div class="line"><a name="l01392"></a><span class="lineno"> 1392</span>&#160;  };</div><div class="line"><a name="l01393"></a><span class="lineno"> 1393</span>&#160;</div><div class="line"><a name="l01394"></a><span class="lineno"> 1394</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#a4df4f2a75d24a2e6a7e8a33a097c355a">Collapse</a>;</div><div class="line"><a name="l01395"></a><span class="lineno"> 1395</span>&#160;}($);</div><div class="line"><a name="l01396"></a><span class="lineno"> 1396</span>&#160;</div><div class="line"><a name="l01421"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#addc9193a1db02e0d80e6dfe0eb7321c6"> 1421</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#addc9193a1db02e0d80e6dfe0eb7321c6">isBrowser</a> = typeof window !== <span class="stringliteral">&#39;undefined&#39;</span> &amp;&amp; typeof document !== <span class="stringliteral">&#39;undefined&#39;</span>;</div><div class="line"><a name="l01422"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#aeb61d371b221f357127ed7331e93f95b"> 1422</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#aeb61d371b221f357127ed7331e93f95b">longerTimeoutBrowsers</a> = [<span class="stringliteral">&#39;Edge&#39;</span>, <span class="stringliteral">&#39;Trident&#39;</span>, <span class="stringliteral">&#39;Firefox&#39;</span>];</div><div class="line"><a name="l01423"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#afc40ee311a39fef1f778824d2059d426"> 1423</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#afc40ee311a39fef1f778824d2059d426">timeoutDuration</a> = 0;</div><div class="line"><a name="l01424"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a2ce86410bf57cf30a6e57ffccc82e0fb"> 1424</a></span>&#160;<span class="keywordflow">for</span> (var <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a> = 0; <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a> &lt; longerTimeoutBrowsers.length; <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a> += 1) {</div><div class="line"><a name="l01425"></a><span class="lineno"> 1425</span>&#160;  <span class="keywordflow">if</span> (isBrowser &amp;&amp; navigator.userAgent.indexOf(longerTimeoutBrowsers[<a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>]) &gt;= 0) {</div><div class="line"><a name="l01426"></a><span class="lineno"> 1426</span>&#160;    timeoutDuration = 1;</div><div class="line"><a name="l01427"></a><span class="lineno"> 1427</span>&#160;    <span class="keywordflow">break</span>;</div><div class="line"><a name="l01428"></a><span class="lineno"> 1428</span>&#160;  }</div><div class="line"><a name="l01429"></a><span class="lineno"> 1429</span>&#160;}</div><div class="line"><a name="l01430"></a><span class="lineno"> 1430</span>&#160;</div><div class="line"><a name="l01431"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a2e40d59c35a8f8b89e1caa872d0a0f56"> 1431</a></span>&#160;<span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#a2e40d59c35a8f8b89e1caa872d0a0f56">microtaskDebounce</a>(<a class="code" href="../../d3/dea/a00046.php#a8a938b10dab9fa9d43908785f7e2c002">fn</a>) {</div><div class="line"><a name="l01432"></a><span class="lineno"> 1432</span>&#160;  var called = <span class="keyword">false</span>;</div><div class="line"><a name="l01433"></a><span class="lineno"> 1433</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">function</span> () {</div><div class="line"><a name="l01434"></a><span class="lineno"> 1434</span>&#160;    <span class="keywordflow">if</span> (called) {</div><div class="line"><a name="l01435"></a><span class="lineno"> 1435</span>&#160;      <span class="keywordflow">return</span>;</div><div class="line"><a name="l01436"></a><span class="lineno"> 1436</span>&#160;    }</div><div class="line"><a name="l01437"></a><span class="lineno"> 1437</span>&#160;    called = <span class="keyword">true</span>;</div><div class="line"><a name="l01438"></a><span class="lineno"> 1438</span>&#160;    window.Promise.resolve().then(<span class="keyword">function</span> () {</div><div class="line"><a name="l01439"></a><span class="lineno"> 1439</span>&#160;      called = <span class="keyword">false</span>;</div><div class="line"><a name="l01440"></a><span class="lineno"> 1440</span>&#160;      <a class="code" href="../../d3/dea/a00046.php#a8a938b10dab9fa9d43908785f7e2c002">fn</a>();</div><div class="line"><a name="l01441"></a><span class="lineno"> 1441</span>&#160;    });</div><div class="line"><a name="l01442"></a><span class="lineno"> 1442</span>&#160;  };</div><div class="line"><a name="l01443"></a><span class="lineno"> 1443</span>&#160;}</div><div class="line"><a name="l01444"></a><span class="lineno"> 1444</span>&#160;</div><div class="line"><a name="l01445"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a0183381b0aa13f5c36d406bb7071d2cc"> 1445</a></span>&#160;<span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#a0183381b0aa13f5c36d406bb7071d2cc">taskDebounce</a>(<a class="code" href="../../d3/dea/a00046.php#a8a938b10dab9fa9d43908785f7e2c002">fn</a>) {</div><div class="line"><a name="l01446"></a><span class="lineno"> 1446</span>&#160;  var scheduled = <span class="keyword">false</span>;</div><div class="line"><a name="l01447"></a><span class="lineno"> 1447</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">function</span> () {</div><div class="line"><a name="l01448"></a><span class="lineno"> 1448</span>&#160;    <span class="keywordflow">if</span> (!scheduled) {</div><div class="line"><a name="l01449"></a><span class="lineno"> 1449</span>&#160;      scheduled = <span class="keyword">true</span>;</div><div class="line"><a name="l01450"></a><span class="lineno"> 1450</span>&#160;      setTimeout(<span class="keyword">function</span> () {</div><div class="line"><a name="l01451"></a><span class="lineno"> 1451</span>&#160;        scheduled = <span class="keyword">false</span>;</div><div class="line"><a name="l01452"></a><span class="lineno"> 1452</span>&#160;        <a class="code" href="../../d3/dea/a00046.php#a8a938b10dab9fa9d43908785f7e2c002">fn</a>();</div><div class="line"><a name="l01453"></a><span class="lineno"> 1453</span>&#160;      }, <a class="code" href="../../d4/d51/a00017.php#afc40ee311a39fef1f778824d2059d426">timeoutDuration</a>);</div><div class="line"><a name="l01454"></a><span class="lineno"> 1454</span>&#160;    }</div><div class="line"><a name="l01455"></a><span class="lineno"> 1455</span>&#160;  };</div><div class="line"><a name="l01456"></a><span class="lineno"> 1456</span>&#160;}</div><div class="line"><a name="l01457"></a><span class="lineno"> 1457</span>&#160;</div><div class="line"><a name="l01458"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#abf8f67cf88551441a1896c50ffd6c8e4"> 1458</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#abf8f67cf88551441a1896c50ffd6c8e4">supportsMicroTasks</a> = isBrowser &amp;&amp; window.Promise;</div><div class="line"><a name="l01459"></a><span class="lineno"> 1459</span>&#160;</div><div class="line"><a name="l01469"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a1086dd4e23ce39ca6cf57fb61ac759c7"> 1469</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#a1086dd4e23ce39ca6cf57fb61ac759c7">debounce</a> = supportsMicroTasks ? <a class="code" href="../../d4/d51/a00017.php#a2e40d59c35a8f8b89e1caa872d0a0f56">microtaskDebounce</a> : <a class="code" href="../../d4/d51/a00017.php#a0183381b0aa13f5c36d406bb7071d2cc">taskDebounce</a>;</div><div class="line"><a name="l01470"></a><span class="lineno"> 1470</span>&#160;</div><div class="line"><a name="l01478"></a><span class="lineno"> 1478</span>&#160;<span class="keyword">function</span> isFunction(functionToCheck) {</div><div class="line"><a name="l01479"></a><span class="lineno"> 1479</span>&#160;  var getType = {};</div><div class="line"><a name="l01480"></a><span class="lineno"> 1480</span>&#160;  <span class="keywordflow">return</span> functionToCheck &amp;&amp; getType.toString.call(functionToCheck) === <span class="stringliteral">&#39;[object Function]&#39;</span>;</div><div class="line"><a name="l01481"></a><span class="lineno"> 1481</span>&#160;}</div><div class="line"><a name="l01482"></a><span class="lineno"> 1482</span>&#160;</div><div class="line"><a name="l01490"></a><span class="lineno"> 1490</span>&#160;<span class="keyword">function</span> getStyleComputedProperty(element, property) {</div><div class="line"><a name="l01491"></a><span class="lineno"> 1491</span>&#160;  <span class="keywordflow">if</span> (element.nodeType !== 1) {</div><div class="line"><a name="l01492"></a><span class="lineno"> 1492</span>&#160;    <span class="keywordflow">return</span> [];</div><div class="line"><a name="l01493"></a><span class="lineno"> 1493</span>&#160;  }</div><div class="line"><a name="l01494"></a><span class="lineno"> 1494</span>&#160;  <span class="comment">// NOTE: 1 DOM access here</span></div><div class="line"><a name="l01495"></a><span class="lineno"> 1495</span>&#160;  var css = getComputedStyle(element, null);</div><div class="line"><a name="l01496"></a><span class="lineno"> 1496</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">property</span> ? css[property] : css;</div><div class="line"><a name="l01497"></a><span class="lineno"> 1497</span>&#160;}</div><div class="line"><a name="l01498"></a><span class="lineno"> 1498</span>&#160;</div><div class="line"><a name="l01506"></a><span class="lineno"> 1506</span>&#160;<span class="keyword">function</span> getParentNode(element) {</div><div class="line"><a name="l01507"></a><span class="lineno"> 1507</span>&#160;  <span class="keywordflow">if</span> (element.nodeName === <span class="stringliteral">&#39;HTML&#39;</span>) {</div><div class="line"><a name="l01508"></a><span class="lineno"> 1508</span>&#160;    <span class="keywordflow">return</span> element;</div><div class="line"><a name="l01509"></a><span class="lineno"> 1509</span>&#160;  }</div><div class="line"><a name="l01510"></a><span class="lineno"> 1510</span>&#160;  <span class="keywordflow">return</span> element.parentNode || element.host;</div><div class="line"><a name="l01511"></a><span class="lineno"> 1511</span>&#160;}</div><div class="line"><a name="l01512"></a><span class="lineno"> 1512</span>&#160;</div><div class="line"><a name="l01520"></a><span class="lineno"> 1520</span>&#160;<span class="keyword">function</span> getScrollParent(element) {</div><div class="line"><a name="l01521"></a><span class="lineno"> 1521</span>&#160;  <span class="comment">// Return body, `getScroll` will take care to get the correct `scrollTop` from it</span></div><div class="line"><a name="l01522"></a><span class="lineno"> 1522</span>&#160;  <span class="keywordflow">if</span> (!element) {</div><div class="line"><a name="l01523"></a><span class="lineno"> 1523</span>&#160;    <span class="keywordflow">return</span> document.body;</div><div class="line"><a name="l01524"></a><span class="lineno"> 1524</span>&#160;  }</div><div class="line"><a name="l01525"></a><span class="lineno"> 1525</span>&#160;</div><div class="line"><a name="l01526"></a><span class="lineno"> 1526</span>&#160;  <span class="keywordflow">switch</span> (element.nodeName) {</div><div class="line"><a name="l01527"></a><span class="lineno"> 1527</span>&#160;    <span class="keywordflow">case</span> <span class="stringliteral">&#39;HTML&#39;</span>:</div><div class="line"><a name="l01528"></a><span class="lineno"> 1528</span>&#160;    <span class="keywordflow">case</span> <span class="stringliteral">&#39;BODY&#39;</span>:</div><div class="line"><a name="l01529"></a><span class="lineno"> 1529</span>&#160;      <span class="keywordflow">return</span> element.ownerDocument.body;</div><div class="line"><a name="l01530"></a><span class="lineno"> 1530</span>&#160;    <span class="keywordflow">case</span> <span class="stringliteral">&#39;#document&#39;</span>:</div><div class="line"><a name="l01531"></a><span class="lineno"> 1531</span>&#160;      <span class="keywordflow">return</span> element.body;</div><div class="line"><a name="l01532"></a><span class="lineno"> 1532</span>&#160;  }</div><div class="line"><a name="l01533"></a><span class="lineno"> 1533</span>&#160;</div><div class="line"><a name="l01534"></a><span class="lineno"> 1534</span>&#160;  <span class="comment">// Firefox want us to check `-x` and `-y` variations as well</span></div><div class="line"><a name="l01535"></a><span class="lineno"> 1535</span>&#160;</div><div class="line"><a name="l01536"></a><span class="lineno"> 1536</span>&#160;  var _getStyleComputedProp = getStyleComputedProperty(element),</div><div class="line"><a name="l01537"></a><span class="lineno"> 1537</span>&#160;      overflow = _getStyleComputedProp.overflow,</div><div class="line"><a name="l01538"></a><span class="lineno"> 1538</span>&#160;      overflowX = _getStyleComputedProp.overflowX,</div><div class="line"><a name="l01539"></a><span class="lineno"> 1539</span>&#160;      overflowY = _getStyleComputedProp.overflowY;</div><div class="line"><a name="l01540"></a><span class="lineno"> 1540</span>&#160;</div><div class="line"><a name="l01541"></a><span class="lineno"> 1541</span>&#160;  <span class="keywordflow">if</span> (/(<span class="keyword">auto</span>|scroll)/.test(overflow + overflowY + overflowX)) {</div><div class="line"><a name="l01542"></a><span class="lineno"> 1542</span>&#160;    <span class="keywordflow">return</span> element;</div><div class="line"><a name="l01543"></a><span class="lineno"> 1543</span>&#160;  }</div><div class="line"><a name="l01544"></a><span class="lineno"> 1544</span>&#160;</div><div class="line"><a name="l01545"></a><span class="lineno"> 1545</span>&#160;  <span class="keywordflow">return</span> getScrollParent(getParentNode(element));</div><div class="line"><a name="l01546"></a><span class="lineno"> 1546</span>&#160;}</div><div class="line"><a name="l01547"></a><span class="lineno"> 1547</span>&#160;</div><div class="line"><a name="l01555"></a><span class="lineno"> 1555</span>&#160;<span class="keyword">function</span> getOffsetParent(element) {</div><div class="line"><a name="l01556"></a><span class="lineno"> 1556</span>&#160;  <span class="comment">// NOTE: 1 DOM access here</span></div><div class="line"><a name="l01557"></a><span class="lineno"> 1557</span>&#160;  var offsetParent = element &amp;&amp; element.offsetParent;</div><div class="line"><a name="l01558"></a><span class="lineno"> 1558</span>&#160;  var nodeName = offsetParent &amp;&amp; offsetParent.nodeName;</div><div class="line"><a name="l01559"></a><span class="lineno"> 1559</span>&#160;</div><div class="line"><a name="l01560"></a><span class="lineno"> 1560</span>&#160;  <span class="keywordflow">if</span> (!nodeName || nodeName === <span class="stringliteral">&#39;BODY&#39;</span> || nodeName === <span class="stringliteral">&#39;HTML&#39;</span>) {</div><div class="line"><a name="l01561"></a><span class="lineno"> 1561</span>&#160;    <span class="keywordflow">if</span> (element) {</div><div class="line"><a name="l01562"></a><span class="lineno"> 1562</span>&#160;      <span class="keywordflow">return</span> element.ownerDocument.documentElement;</div><div class="line"><a name="l01563"></a><span class="lineno"> 1563</span>&#160;    }</div><div class="line"><a name="l01564"></a><span class="lineno"> 1564</span>&#160;</div><div class="line"><a name="l01565"></a><span class="lineno"> 1565</span>&#160;    <span class="keywordflow">return</span> document.documentElement;</div><div class="line"><a name="l01566"></a><span class="lineno"> 1566</span>&#160;  }</div><div class="line"><a name="l01567"></a><span class="lineno"> 1567</span>&#160;</div><div class="line"><a name="l01568"></a><span class="lineno"> 1568</span>&#160;  <span class="comment">// .offsetParent will return the closest TD or TABLE in case</span></div><div class="line"><a name="l01569"></a><span class="lineno"> 1569</span>&#160;  <span class="comment">// no offsetParent is present, I hate this job...</span></div><div class="line"><a name="l01570"></a><span class="lineno"> 1570</span>&#160;  <span class="keywordflow">if</span> ([<span class="stringliteral">&#39;TD&#39;</span>, <span class="stringliteral">&#39;TABLE&#39;</span>].indexOf(offsetParent.nodeName) !== -1 &amp;&amp; getStyleComputedProperty(offsetParent, <span class="stringliteral">&#39;position&#39;</span>) === <span class="stringliteral">&#39;static&#39;</span>) {</div><div class="line"><a name="l01571"></a><span class="lineno"> 1571</span>&#160;    <span class="keywordflow">return</span> getOffsetParent(offsetParent);</div><div class="line"><a name="l01572"></a><span class="lineno"> 1572</span>&#160;  }</div><div class="line"><a name="l01573"></a><span class="lineno"> 1573</span>&#160;</div><div class="line"><a name="l01574"></a><span class="lineno"> 1574</span>&#160;  <span class="keywordflow">return</span> offsetParent;</div><div class="line"><a name="l01575"></a><span class="lineno"> 1575</span>&#160;}</div><div class="line"><a name="l01576"></a><span class="lineno"> 1576</span>&#160;</div><div class="line"><a name="l01577"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a1fe412e3e396aa0250776634a65b544c"> 1577</a></span>&#160;<span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#a1fe412e3e396aa0250776634a65b544c">isOffsetContainer</a>(element) {</div><div class="line"><a name="l01578"></a><span class="lineno"> 1578</span>&#160;  var nodeName = element.nodeName;</div><div class="line"><a name="l01579"></a><span class="lineno"> 1579</span>&#160;</div><div class="line"><a name="l01580"></a><span class="lineno"> 1580</span>&#160;  <span class="keywordflow">if</span> (nodeName === <span class="stringliteral">&#39;BODY&#39;</span>) {</div><div class="line"><a name="l01581"></a><span class="lineno"> 1581</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l01582"></a><span class="lineno"> 1582</span>&#160;  }</div><div class="line"><a name="l01583"></a><span class="lineno"> 1583</span>&#160;  <span class="keywordflow">return</span> nodeName === <span class="stringliteral">&#39;HTML&#39;</span> || getOffsetParent(element.firstElementChild) === element;</div><div class="line"><a name="l01584"></a><span class="lineno"> 1584</span>&#160;}</div><div class="line"><a name="l01585"></a><span class="lineno"> 1585</span>&#160;</div><div class="line"><a name="l01593"></a><span class="lineno"> 1593</span>&#160;<span class="keyword">function</span> getRoot(node) {</div><div class="line"><a name="l01594"></a><span class="lineno"> 1594</span>&#160;  <span class="keywordflow">if</span> (node.parentNode !== null) {</div><div class="line"><a name="l01595"></a><span class="lineno"> 1595</span>&#160;    <span class="keywordflow">return</span> getRoot(node.parentNode);</div><div class="line"><a name="l01596"></a><span class="lineno"> 1596</span>&#160;  }</div><div class="line"><a name="l01597"></a><span class="lineno"> 1597</span>&#160;</div><div class="line"><a name="l01598"></a><span class="lineno"> 1598</span>&#160;  <span class="keywordflow">return</span> node;</div><div class="line"><a name="l01599"></a><span class="lineno"> 1599</span>&#160;}</div><div class="line"><a name="l01600"></a><span class="lineno"> 1600</span>&#160;</div><div class="line"><a name="l01609"></a><span class="lineno"> 1609</span>&#160;<span class="keyword">function</span> findCommonOffsetParent(element1, element2) {</div><div class="line"><a name="l01610"></a><span class="lineno"> 1610</span>&#160;  <span class="comment">// This check is needed to avoid errors in case one of the elements isn&#39;t defined for any reason</span></div><div class="line"><a name="l01611"></a><span class="lineno"> 1611</span>&#160;  <span class="keywordflow">if</span> (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {</div><div class="line"><a name="l01612"></a><span class="lineno"> 1612</span>&#160;    <span class="keywordflow">return</span> document.documentElement;</div><div class="line"><a name="l01613"></a><span class="lineno"> 1613</span>&#160;  }</div><div class="line"><a name="l01614"></a><span class="lineno"> 1614</span>&#160;</div><div class="line"><a name="l01615"></a><span class="lineno"> 1615</span>&#160;  <span class="comment">// Here we make sure to give as &quot;start&quot; the element that comes first in the DOM</span></div><div class="line"><a name="l01616"></a><span class="lineno"> 1616</span>&#160;  var order = element1.compareDocumentPosition(element2) &amp; Node.DOCUMENT_POSITION_FOLLOWING;</div><div class="line"><a name="l01617"></a><span class="lineno"> 1617</span>&#160;  var start = order ? element1 : element2;</div><div class="line"><a name="l01618"></a><span class="lineno"> 1618</span>&#160;  var end = order ? element2 : element1;</div><div class="line"><a name="l01619"></a><span class="lineno"> 1619</span>&#160;</div><div class="line"><a name="l01620"></a><span class="lineno"> 1620</span>&#160;  <span class="comment">// Get common ancestor container</span></div><div class="line"><a name="l01621"></a><span class="lineno"> 1621</span>&#160;  var range = document.createRange();</div><div class="line"><a name="l01622"></a><span class="lineno"> 1622</span>&#160;  range.setStart(start, 0);</div><div class="line"><a name="l01623"></a><span class="lineno"> 1623</span>&#160;  range.setEnd(end, 0);</div><div class="line"><a name="l01624"></a><span class="lineno"> 1624</span>&#160;  var commonAncestorContainer = range.commonAncestorContainer;</div><div class="line"><a name="l01625"></a><span class="lineno"> 1625</span>&#160;</div><div class="line"><a name="l01626"></a><span class="lineno"> 1626</span>&#160;  <span class="comment">// Both nodes are inside #document</span></div><div class="line"><a name="l01627"></a><span class="lineno"> 1627</span>&#160;</div><div class="line"><a name="l01628"></a><span class="lineno"> 1628</span>&#160;  <span class="keywordflow">if</span> (element1 !== commonAncestorContainer &amp;&amp; element2 !== commonAncestorContainer || start.contains(end)) {</div><div class="line"><a name="l01629"></a><span class="lineno"> 1629</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d4/d51/a00017.php#a1fe412e3e396aa0250776634a65b544c">isOffsetContainer</a>(commonAncestorContainer)) {</div><div class="line"><a name="l01630"></a><span class="lineno"> 1630</span>&#160;      <span class="keywordflow">return</span> commonAncestorContainer;</div><div class="line"><a name="l01631"></a><span class="lineno"> 1631</span>&#160;    }</div><div class="line"><a name="l01632"></a><span class="lineno"> 1632</span>&#160;</div><div class="line"><a name="l01633"></a><span class="lineno"> 1633</span>&#160;    <span class="keywordflow">return</span> getOffsetParent(commonAncestorContainer);</div><div class="line"><a name="l01634"></a><span class="lineno"> 1634</span>&#160;  }</div><div class="line"><a name="l01635"></a><span class="lineno"> 1635</span>&#160;</div><div class="line"><a name="l01636"></a><span class="lineno"> 1636</span>&#160;  <span class="comment">// one of the nodes is inside shadowDOM, find which one</span></div><div class="line"><a name="l01637"></a><span class="lineno"> 1637</span>&#160;  var element1root = getRoot(element1);</div><div class="line"><a name="l01638"></a><span class="lineno"> 1638</span>&#160;  <span class="keywordflow">if</span> (element1root.host) {</div><div class="line"><a name="l01639"></a><span class="lineno"> 1639</span>&#160;    <span class="keywordflow">return</span> findCommonOffsetParent(element1root.host, element2);</div><div class="line"><a name="l01640"></a><span class="lineno"> 1640</span>&#160;  } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01641"></a><span class="lineno"> 1641</span>&#160;    <span class="keywordflow">return</span> findCommonOffsetParent(element1, getRoot(element2).host);</div><div class="line"><a name="l01642"></a><span class="lineno"> 1642</span>&#160;  }</div><div class="line"><a name="l01643"></a><span class="lineno"> 1643</span>&#160;}</div><div class="line"><a name="l01644"></a><span class="lineno"> 1644</span>&#160;</div><div class="line"><a name="l01653"></a><span class="lineno"> 1653</span>&#160;<span class="keyword">function</span> getScroll(element) {</div><div class="line"><a name="l01654"></a><span class="lineno"> 1654</span>&#160;  var side = arguments.length &gt; 1 &amp;&amp; arguments[1] !== <a class="code" href="../../d3/dea/a00046.php#ae21cc36bf0d65014c717a481a3f8a468">undefined</a> ? arguments[1] : <span class="stringliteral">&#39;top&#39;</span>;</div><div class="line"><a name="l01655"></a><span class="lineno"> 1655</span>&#160;</div><div class="line"><a name="l01656"></a><span class="lineno"> 1656</span>&#160;  var upperSide = side === <span class="stringliteral">&#39;top&#39;</span> ? <span class="stringliteral">&#39;scrollTop&#39;</span> : <span class="stringliteral">&#39;scrollLeft&#39;</span>;</div><div class="line"><a name="l01657"></a><span class="lineno"> 1657</span>&#160;  var nodeName = element.nodeName;</div><div class="line"><a name="l01658"></a><span class="lineno"> 1658</span>&#160;</div><div class="line"><a name="l01659"></a><span class="lineno"> 1659</span>&#160;  <span class="keywordflow">if</span> (nodeName === <span class="stringliteral">&#39;BODY&#39;</span> || nodeName === <span class="stringliteral">&#39;HTML&#39;</span>) {</div><div class="line"><a name="l01660"></a><span class="lineno"> 1660</span>&#160;    var html = element.ownerDocument.documentElement;</div><div class="line"><a name="l01661"></a><span class="lineno"> 1661</span>&#160;    var scrollingElement = element.ownerDocument.scrollingElement || html;</div><div class="line"><a name="l01662"></a><span class="lineno"> 1662</span>&#160;    <span class="keywordflow">return</span> scrollingElement[upperSide];</div><div class="line"><a name="l01663"></a><span class="lineno"> 1663</span>&#160;  }</div><div class="line"><a name="l01664"></a><span class="lineno"> 1664</span>&#160;</div><div class="line"><a name="l01665"></a><span class="lineno"> 1665</span>&#160;  <span class="keywordflow">return</span> element[upperSide];</div><div class="line"><a name="l01666"></a><span class="lineno"> 1666</span>&#160;}</div><div class="line"><a name="l01667"></a><span class="lineno"> 1667</span>&#160;</div><div class="line"><a name="l01668"></a><span class="lineno"> 1668</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l01669"></a><span class="lineno"> 1669</span>&#160;<span class="comment"> * Sum or subtract the element scroll values (left and top) from a given rect object</span></div><div class="line"><a name="l01670"></a><span class="lineno"> 1670</span>&#160;<span class="comment"> * @method</span></div><div class="line"><a name="l01671"></a><span class="lineno"> 1671</span>&#160;<span class="comment"> * @memberof Popper.Utils</span></div><div class="line"><a name="l01672"></a><span class="lineno"> 1672</span>&#160;<span class="comment"> * @param {Object} rect - Rect object you want to change</span></div><div class="line"><a name="l01673"></a><span class="lineno"> 1673</span>&#160;<span class="comment"> * @param {HTMLElement} element - The element from the function reads the scroll values</span></div><div class="line"><a name="l01674"></a><span class="lineno"> 1674</span>&#160;<span class="comment"> * @param {Boolean} subtract - set to true if you want to subtract the scroll values</span></div><div class="line"><a name="l01675"></a><span class="lineno"> 1675</span>&#160;<span class="comment"> * @return {Object} rect - The modifier rect object</span></div><div class="line"><a name="l01676"></a><span class="lineno"> 1676</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l01677"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a08e668616aad32cf43ed2ca4d2af7182"> 1677</a></span>&#160;<span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#a08e668616aad32cf43ed2ca4d2af7182">includeScroll</a>(rect, element) {</div><div class="line"><a name="l01678"></a><span class="lineno"> 1678</span>&#160;  var subtract = arguments.length &gt; 2 &amp;&amp; arguments[2] !== <a class="code" href="../../d3/dea/a00046.php#ae21cc36bf0d65014c717a481a3f8a468">undefined</a> ? arguments[2] : <span class="keyword">false</span>;</div><div class="line"><a name="l01679"></a><span class="lineno"> 1679</span>&#160;</div><div class="line"><a name="l01680"></a><span class="lineno"> 1680</span>&#160;  var scrollTop = getScroll(element, <span class="stringliteral">&#39;top&#39;</span>);</div><div class="line"><a name="l01681"></a><span class="lineno"> 1681</span>&#160;  var scrollLeft = getScroll(element, <span class="stringliteral">&#39;left&#39;</span>);</div><div class="line"><a name="l01682"></a><span class="lineno"> 1682</span>&#160;  var modifier = subtract ? -1 : 1;</div><div class="line"><a name="l01683"></a><span class="lineno"> 1683</span>&#160;  rect.top += scrollTop * modifier;</div><div class="line"><a name="l01684"></a><span class="lineno"> 1684</span>&#160;  rect.bottom += scrollTop * modifier;</div><div class="line"><a name="l01685"></a><span class="lineno"> 1685</span>&#160;  rect.left += scrollLeft * modifier;</div><div class="line"><a name="l01686"></a><span class="lineno"> 1686</span>&#160;  rect.right += scrollLeft * modifier;</div><div class="line"><a name="l01687"></a><span class="lineno"> 1687</span>&#160;  <span class="keywordflow">return</span> rect;</div><div class="line"><a name="l01688"></a><span class="lineno"> 1688</span>&#160;}</div><div class="line"><a name="l01689"></a><span class="lineno"> 1689</span>&#160;</div><div class="line"><a name="l01690"></a><span class="lineno"> 1690</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l01691"></a><span class="lineno"> 1691</span>&#160;<span class="comment"> * Helper to detect borders of a given element</span></div><div class="line"><a name="l01692"></a><span class="lineno"> 1692</span>&#160;<span class="comment"> * @method</span></div><div class="line"><a name="l01693"></a><span class="lineno"> 1693</span>&#160;<span class="comment"> * @memberof Popper.Utils</span></div><div class="line"><a name="l01694"></a><span class="lineno"> 1694</span>&#160;<span class="comment"> * @param {CSSStyleDeclaration} styles</span></div><div class="line"><a name="l01695"></a><span class="lineno"> 1695</span>&#160;<span class="comment"> * Result of `getStyleComputedProperty` on the given element</span></div><div class="line"><a name="l01696"></a><span class="lineno"> 1696</span>&#160;<span class="comment"> * @param {String} axis - `x` or `y`</span></div><div class="line"><a name="l01697"></a><span class="lineno"> 1697</span>&#160;<span class="comment"> * @return {number} borders - The borders size of the given axis</span></div><div class="line"><a name="l01698"></a><span class="lineno"> 1698</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l01699"></a><span class="lineno"> 1699</span>&#160;</div><div class="line"><a name="l01700"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a6f99b2261196d1f2c9d5d035bb47bf40"> 1700</a></span>&#160;<span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#a6f99b2261196d1f2c9d5d035bb47bf40">getBordersSize</a>(styles, axis) {</div><div class="line"><a name="l01701"></a><span class="lineno"> 1701</span>&#160;  var sideA = axis === <span class="charliteral">&#39;x&#39;</span> ? <span class="stringliteral">&#39;Left&#39;</span> : <span class="stringliteral">&#39;Top&#39;</span>;</div><div class="line"><a name="l01702"></a><span class="lineno"> 1702</span>&#160;  var sideB = sideA === <span class="stringliteral">&#39;Left&#39;</span> ? <span class="stringliteral">&#39;Right&#39;</span> : <span class="stringliteral">&#39;Bottom&#39;</span>;</div><div class="line"><a name="l01703"></a><span class="lineno"> 1703</span>&#160;</div><div class="line"><a name="l01704"></a><span class="lineno"> 1704</span>&#160;  <span class="keywordflow">return</span> parseFloat(styles[<span class="stringliteral">&#39;border&#39;</span> + sideA + <span class="stringliteral">&#39;Width&#39;</span>], 10) + parseFloat(styles[<span class="stringliteral">&#39;border&#39;</span> + sideB + <span class="stringliteral">&#39;Width&#39;</span>], 10);</div><div class="line"><a name="l01705"></a><span class="lineno"> 1705</span>&#160;}</div><div class="line"><a name="l01706"></a><span class="lineno"> 1706</span>&#160;</div><div class="line"><a name="l01713"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#afdf7dbd507451f3148f2fe067eb7fc30"> 1713</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#afdf7dbd507451f3148f2fe067eb7fc30">isIE10</a> = <a class="code" href="../../d3/dea/a00046.php#ae21cc36bf0d65014c717a481a3f8a468">undefined</a>;</div><div class="line"><a name="l01714"></a><span class="lineno"> 1714</span>&#160;</div><div class="line"><a name="l01715"></a><span class="lineno"> 1715</span>&#160;var isIE10$1 = <span class="keyword">function</span> () {</div><div class="line"><a name="l01716"></a><span class="lineno"> 1716</span>&#160;  <span class="keywordflow">if</span> (isIE10 === <a class="code" href="../../d3/dea/a00046.php#ae21cc36bf0d65014c717a481a3f8a468">undefined</a>) {</div><div class="line"><a name="l01717"></a><span class="lineno"> 1717</span>&#160;    isIE10 = navigator.appVersion.indexOf(<span class="stringliteral">&#39;MSIE 10&#39;</span>) !== -1;</div><div class="line"><a name="l01718"></a><span class="lineno"> 1718</span>&#160;  }</div><div class="line"><a name="l01719"></a><span class="lineno"> 1719</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#afdf7dbd507451f3148f2fe067eb7fc30">isIE10</a>;</div><div class="line"><a name="l01720"></a><span class="lineno"> 1720</span>&#160;};</div><div class="line"><a name="l01721"></a><span class="lineno"> 1721</span>&#160;</div><div class="line"><a name="l01722"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a8214a24c6c0e45b5479c63b473cc6ce6"> 1722</a></span>&#160;<span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#a8214a24c6c0e45b5479c63b473cc6ce6">getSize</a>(axis, body, html, computedStyle) {</div><div class="line"><a name="l01723"></a><span class="lineno"> 1723</span>&#160;  <span class="keywordflow">return</span> Math.max(body[<span class="stringliteral">&#39;offset&#39;</span> + axis], body[<span class="stringliteral">&#39;scroll&#39;</span> + axis], html[<span class="stringliteral">&#39;client&#39;</span> + axis], html[<span class="stringliteral">&#39;offset&#39;</span> + axis], html[<span class="stringliteral">&#39;scroll&#39;</span> + axis], isIE10$1() ? html[<span class="stringliteral">&#39;offset&#39;</span> + axis] + computedStyle[<span class="stringliteral">&#39;margin&#39;</span> + (axis === <span class="stringliteral">&#39;Height&#39;</span> ? <span class="stringliteral">&#39;Top&#39;</span> : <span class="stringliteral">&#39;Left&#39;</span>)] + computedStyle[<span class="stringliteral">&#39;margin&#39;</span> + (axis === <span class="stringliteral">&#39;Height&#39;</span> ? <span class="stringliteral">&#39;Bottom&#39;</span> : <span class="stringliteral">&#39;Right&#39;</span>)] : 0);</div><div class="line"><a name="l01724"></a><span class="lineno"> 1724</span>&#160;}</div><div class="line"><a name="l01725"></a><span class="lineno"> 1725</span>&#160;</div><div class="line"><a name="l01726"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#aa26c4a814e420d16eaf5c7ac49b667d9"> 1726</a></span>&#160;<span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#aa26c4a814e420d16eaf5c7ac49b667d9">getWindowSizes</a>() {</div><div class="line"><a name="l01727"></a><span class="lineno"> 1727</span>&#160;  var body = document.body;</div><div class="line"><a name="l01728"></a><span class="lineno"> 1728</span>&#160;  var html = document.documentElement;</div><div class="line"><a name="l01729"></a><span class="lineno"> 1729</span>&#160;  var computedStyle = isIE10$1() &amp;&amp; getComputedStyle(html);</div><div class="line"><a name="l01730"></a><span class="lineno"> 1730</span>&#160;</div><div class="line"><a name="l01731"></a><span class="lineno"> 1731</span>&#160;  <span class="keywordflow">return</span> {</div><div class="line"><a name="l01732"></a><span class="lineno"> 1732</span>&#160;    height: <a class="code" href="../../d4/d51/a00017.php#a8214a24c6c0e45b5479c63b473cc6ce6">getSize</a>(<span class="stringliteral">&#39;Height&#39;</span>, body, html, computedStyle),</div><div class="line"><a name="l01733"></a><span class="lineno"> 1733</span>&#160;    <a class="code" href="../../d2/dee/a00049.php#af873e7c3edea50d105e73b055c6bdacf">width</a>: <a class="code" href="../../d4/d51/a00017.php#a8214a24c6c0e45b5479c63b473cc6ce6">getSize</a>(<span class="stringliteral">&#39;Width&#39;</span>, body, html, computedStyle)</div><div class="line"><a name="l01734"></a><span class="lineno"> 1734</span>&#160;  };</div><div class="line"><a name="l01735"></a><span class="lineno"> 1735</span>&#160;}</div><div class="line"><a name="l01736"></a><span class="lineno"> 1736</span>&#160;</div><div class="line"><a name="l01737"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#aa5a2e5bf0a535a30a11262d9df06151b"> 1737</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#aa5a2e5bf0a535a30a11262d9df06151b">classCallCheck</a> = <span class="keyword">function</span> (instance, <a class="code" href="../../db/db2/a00020.php#a0545907c609a48549a0cf5d4c692f851">Constructor</a>) {</div><div class="line"><a name="l01738"></a><span class="lineno"> 1738</span>&#160;  <span class="keywordflow">if</span> (!(instance instanceof <a class="code" href="../../db/db2/a00020.php#a0545907c609a48549a0cf5d4c692f851">Constructor</a>)) {</div><div class="line"><a name="l01739"></a><span class="lineno"> 1739</span>&#160;    <span class="keywordflow">throw</span> <span class="keyword">new</span> TypeError(<span class="stringliteral">&quot;Cannot call a class as a function&quot;</span>);</div><div class="line"><a name="l01740"></a><span class="lineno"> 1740</span>&#160;  }</div><div class="line"><a name="l01741"></a><span class="lineno"> 1741</span>&#160;};</div><div class="line"><a name="l01742"></a><span class="lineno"> 1742</span>&#160;</div><div class="line"><a name="l01743"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#aaf3dfd019b0e65fefde9702c4b377344"> 1743</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#aaf3dfd019b0e65fefde9702c4b377344">createClass</a> = <span class="keyword">function</span> () {</div><div class="line"><a name="l01744"></a><span class="lineno"> 1744</span>&#160;  <span class="keyword">function</span> defineProperties(target, props) {</div><div class="line"><a name="l01745"></a><span class="lineno"> 1745</span>&#160;    <span class="keywordflow">for</span> (var <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a> = 0; <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a> &lt; props.length; <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>++) {</div><div class="line"><a name="l01746"></a><span class="lineno"> 1746</span>&#160;      var descriptor = props[<a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>];</div><div class="line"><a name="l01747"></a><span class="lineno"> 1747</span>&#160;      descriptor.enumerable = descriptor.enumerable || <span class="keyword">false</span>;</div><div class="line"><a name="l01748"></a><span class="lineno"> 1748</span>&#160;      descriptor.configurable = <span class="keyword">true</span>;</div><div class="line"><a name="l01749"></a><span class="lineno"> 1749</span>&#160;      <span class="keywordflow">if</span> (<span class="stringliteral">&quot;value&quot;</span> in descriptor) descriptor.writable = <span class="keyword">true</span>;</div><div class="line"><a name="l01750"></a><span class="lineno"> 1750</span>&#160;      Object.defineProperty(target, descriptor.key, descriptor);</div><div class="line"><a name="l01751"></a><span class="lineno"> 1751</span>&#160;    }</div><div class="line"><a name="l01752"></a><span class="lineno"> 1752</span>&#160;  }</div><div class="line"><a name="l01753"></a><span class="lineno"> 1753</span>&#160;</div><div class="line"><a name="l01754"></a><span class="lineno"> 1754</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">function</span> (<a class="code" href="../../db/db2/a00020.php#a0545907c609a48549a0cf5d4c692f851">Constructor</a>, protoProps, staticProps) {</div><div class="line"><a name="l01755"></a><span class="lineno"> 1755</span>&#160;    <span class="keywordflow">if</span> (protoProps) defineProperties(<a class="code" href="../../db/db2/a00020.php#a0545907c609a48549a0cf5d4c692f851">Constructor</a>.prototype, protoProps);</div><div class="line"><a name="l01756"></a><span class="lineno"> 1756</span>&#160;    <span class="keywordflow">if</span> (staticProps) defineProperties(<a class="code" href="../../db/db2/a00020.php#a0545907c609a48549a0cf5d4c692f851">Constructor</a>, staticProps);</div><div class="line"><a name="l01757"></a><span class="lineno"> 1757</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../db/db2/a00020.php#a0545907c609a48549a0cf5d4c692f851">Constructor</a>;</div><div class="line"><a name="l01758"></a><span class="lineno"> 1758</span>&#160;  };</div><div class="line"><a name="l01759"></a><span class="lineno"> 1759</span>&#160;}();</div><div class="line"><a name="l01760"></a><span class="lineno"> 1760</span>&#160;</div><div class="line"><a name="l01761"></a><span class="lineno"> 1761</span>&#160;</div><div class="line"><a name="l01762"></a><span class="lineno"> 1762</span>&#160;</div><div class="line"><a name="l01763"></a><span class="lineno"> 1763</span>&#160;</div><div class="line"><a name="l01764"></a><span class="lineno"> 1764</span>&#160;</div><div class="line"><a name="l01765"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a817fcb70b363027b28fec000da90139a"> 1765</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#a817fcb70b363027b28fec000da90139a">defineProperty</a> = <span class="keyword">function</span> (obj, key, value) {</div><div class="line"><a name="l01766"></a><span class="lineno"> 1766</span>&#160;  <span class="keywordflow">if</span> (key in obj) {</div><div class="line"><a name="l01767"></a><span class="lineno"> 1767</span>&#160;    Object.defineProperty(obj, key, {</div><div class="line"><a name="l01768"></a><span class="lineno"> 1768</span>&#160;      value: value,</div><div class="line"><a name="l01769"></a><span class="lineno"> 1769</span>&#160;      enumerable: <span class="keyword">true</span>,</div><div class="line"><a name="l01770"></a><span class="lineno"> 1770</span>&#160;      configurable: <span class="keyword">true</span>,</div><div class="line"><a name="l01771"></a><span class="lineno"> 1771</span>&#160;      writable: <span class="keyword">true</span></div><div class="line"><a name="l01772"></a><span class="lineno"> 1772</span>&#160;    });</div><div class="line"><a name="l01773"></a><span class="lineno"> 1773</span>&#160;  } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01774"></a><span class="lineno"> 1774</span>&#160;    obj[key] = value;</div><div class="line"><a name="l01775"></a><span class="lineno"> 1775</span>&#160;  }</div><div class="line"><a name="l01776"></a><span class="lineno"> 1776</span>&#160;</div><div class="line"><a name="l01777"></a><span class="lineno"> 1777</span>&#160;  <span class="keywordflow">return</span> obj;</div><div class="line"><a name="l01778"></a><span class="lineno"> 1778</span>&#160;};</div><div class="line"><a name="l01779"></a><span class="lineno"> 1779</span>&#160;</div><div class="line"><a name="l01780"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#ac2eea16a19b83a9509e2f9188c0fdc0f"> 1780</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#ac2eea16a19b83a9509e2f9188c0fdc0f">_extends</a>$1 = Object.assign || <span class="keyword">function</span> (target) {</div><div class="line"><a name="l01781"></a><span class="lineno"> 1781</span>&#160;  <span class="keywordflow">for</span> (var <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a> = 1; <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a> &lt; arguments.length; <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>++) {</div><div class="line"><a name="l01782"></a><span class="lineno"> 1782</span>&#160;    var source = arguments[<a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>];</div><div class="line"><a name="l01783"></a><span class="lineno"> 1783</span>&#160;</div><div class="line"><a name="l01784"></a><span class="lineno"> 1784</span>&#160;    <span class="keywordflow">for</span> (var key in source) {</div><div class="line"><a name="l01785"></a><span class="lineno"> 1785</span>&#160;      <span class="keywordflow">if</span> (Object.prototype.hasOwnProperty.call(source, key)) {</div><div class="line"><a name="l01786"></a><span class="lineno"> 1786</span>&#160;        target[key] = source[key];</div><div class="line"><a name="l01787"></a><span class="lineno"> 1787</span>&#160;      }</div><div class="line"><a name="l01788"></a><span class="lineno"> 1788</span>&#160;    }</div><div class="line"><a name="l01789"></a><span class="lineno"> 1789</span>&#160;  }</div><div class="line"><a name="l01790"></a><span class="lineno"> 1790</span>&#160;</div><div class="line"><a name="l01791"></a><span class="lineno"> 1791</span>&#160;  <span class="keywordflow">return</span> target;</div><div class="line"><a name="l01792"></a><span class="lineno"> 1792</span>&#160;};</div><div class="line"><a name="l01793"></a><span class="lineno"> 1793</span>&#160;</div><div class="line"><a name="l01801"></a><span class="lineno"> 1801</span>&#160;<span class="keyword">function</span> getClientRect(offsets) {</div><div class="line"><a name="l01802"></a><span class="lineno"> 1802</span>&#160;  <span class="keywordflow">return</span> _extends$1({}, offsets, {</div><div class="line"><a name="l01803"></a><span class="lineno"> 1803</span>&#160;    right: offsets.left + offsets.width,</div><div class="line"><a name="l01804"></a><span class="lineno"> 1804</span>&#160;    bottom: offsets.top + offsets.height</div><div class="line"><a name="l01805"></a><span class="lineno"> 1805</span>&#160;  });</div><div class="line"><a name="l01806"></a><span class="lineno"> 1806</span>&#160;}</div><div class="line"><a name="l01807"></a><span class="lineno"> 1807</span>&#160;</div><div class="line"><a name="l01815"></a><span class="lineno"> 1815</span>&#160;<span class="keyword">function</span> getBoundingClientRect(element) {</div><div class="line"><a name="l01816"></a><span class="lineno"> 1816</span>&#160;  var rect = {};</div><div class="line"><a name="l01817"></a><span class="lineno"> 1817</span>&#160;</div><div class="line"><a name="l01818"></a><span class="lineno"> 1818</span>&#160;  <span class="comment">// IE10 10 FIX: Please, don&#39;t ask, the element isn&#39;t</span></div><div class="line"><a name="l01819"></a><span class="lineno"> 1819</span>&#160;  <span class="comment">// considered in DOM in some circumstances...</span></div><div class="line"><a name="l01820"></a><span class="lineno"> 1820</span>&#160;  <span class="comment">// This isn&#39;t reproducible in IE10 compatibility mode of IE11</span></div><div class="line"><a name="l01821"></a><span class="lineno"> 1821</span>&#160;  <span class="keywordflow">if</span> (isIE10$1()) {</div><div class="line"><a name="l01822"></a><span class="lineno"> 1822</span>&#160;    <span class="keywordflow">try</span> {</div><div class="line"><a name="l01823"></a><span class="lineno"> 1823</span>&#160;      rect = element.getBoundingClientRect();</div><div class="line"><a name="l01824"></a><span class="lineno"> 1824</span>&#160;      var scrollTop = getScroll(element, <span class="stringliteral">&#39;top&#39;</span>);</div><div class="line"><a name="l01825"></a><span class="lineno"> 1825</span>&#160;      var scrollLeft = getScroll(element, <span class="stringliteral">&#39;left&#39;</span>);</div><div class="line"><a name="l01826"></a><span class="lineno"> 1826</span>&#160;      rect.top += scrollTop;</div><div class="line"><a name="l01827"></a><span class="lineno"> 1827</span>&#160;      rect.left += scrollLeft;</div><div class="line"><a name="l01828"></a><span class="lineno"> 1828</span>&#160;      rect.bottom += scrollTop;</div><div class="line"><a name="l01829"></a><span class="lineno"> 1829</span>&#160;      rect.right += scrollLeft;</div><div class="line"><a name="l01830"></a><span class="lineno"> 1830</span>&#160;    } <span class="keywordflow">catch</span> (err) {}</div><div class="line"><a name="l01831"></a><span class="lineno"> 1831</span>&#160;  } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01832"></a><span class="lineno"> 1832</span>&#160;    rect = element.getBoundingClientRect();</div><div class="line"><a name="l01833"></a><span class="lineno"> 1833</span>&#160;  }</div><div class="line"><a name="l01834"></a><span class="lineno"> 1834</span>&#160;</div><div class="line"><a name="l01835"></a><span class="lineno"> 1835</span>&#160;  var result = {</div><div class="line"><a name="l01836"></a><span class="lineno"> 1836</span>&#160;    left: rect.left,</div><div class="line"><a name="l01837"></a><span class="lineno"> 1837</span>&#160;    top: rect.top,</div><div class="line"><a name="l01838"></a><span class="lineno"> 1838</span>&#160;    <a class="code" href="../../d2/dee/a00049.php#af873e7c3edea50d105e73b055c6bdacf">width</a>: rect.right - rect.left,</div><div class="line"><a name="l01839"></a><span class="lineno"> 1839</span>&#160;    height: rect.bottom - rect.top</div><div class="line"><a name="l01840"></a><span class="lineno"> 1840</span>&#160;  };</div><div class="line"><a name="l01841"></a><span class="lineno"> 1841</span>&#160;</div><div class="line"><a name="l01842"></a><span class="lineno"> 1842</span>&#160;  <span class="comment">// subtract scrollbar size from sizes</span></div><div class="line"><a name="l01843"></a><span class="lineno"> 1843</span>&#160;  var sizes = element.nodeName === <span class="stringliteral">&#39;HTML&#39;</span> ? <a class="code" href="../../d4/d51/a00017.php#aa26c4a814e420d16eaf5c7ac49b667d9">getWindowSizes</a>() : {};</div><div class="line"><a name="l01844"></a><span class="lineno"> 1844</span>&#160;  var <a class="code" href="../../d2/dee/a00049.php#af873e7c3edea50d105e73b055c6bdacf">width</a> = sizes.width || element.clientWidth || result.right - result.left;</div><div class="line"><a name="l01845"></a><span class="lineno"> 1845</span>&#160;  var height = sizes.height || element.clientHeight || result.bottom - result.top;</div><div class="line"><a name="l01846"></a><span class="lineno"> 1846</span>&#160;</div><div class="line"><a name="l01847"></a><span class="lineno"> 1847</span>&#160;  var horizScrollbar = element.offsetWidth - <a class="code" href="../../d2/dee/a00049.php#af873e7c3edea50d105e73b055c6bdacf">width</a>;</div><div class="line"><a name="l01848"></a><span class="lineno"> 1848</span>&#160;  var vertScrollbar = element.offsetHeight - height;</div><div class="line"><a name="l01849"></a><span class="lineno"> 1849</span>&#160;</div><div class="line"><a name="l01850"></a><span class="lineno"> 1850</span>&#160;  <span class="comment">// if an hypothetical scrollbar is detected, we must be sure it&#39;s not a `border`</span></div><div class="line"><a name="l01851"></a><span class="lineno"> 1851</span>&#160;  <span class="comment">// we make this check conditional for performance reasons</span></div><div class="line"><a name="l01852"></a><span class="lineno"> 1852</span>&#160;  <span class="keywordflow">if</span> (horizScrollbar || vertScrollbar) {</div><div class="line"><a name="l01853"></a><span class="lineno"> 1853</span>&#160;    var styles = getStyleComputedProperty(element);</div><div class="line"><a name="l01854"></a><span class="lineno"> 1854</span>&#160;    horizScrollbar -= <a class="code" href="../../d4/d51/a00017.php#a6f99b2261196d1f2c9d5d035bb47bf40">getBordersSize</a>(styles, <span class="charliteral">&#39;x&#39;</span>);</div><div class="line"><a name="l01855"></a><span class="lineno"> 1855</span>&#160;    vertScrollbar -= <a class="code" href="../../d4/d51/a00017.php#a6f99b2261196d1f2c9d5d035bb47bf40">getBordersSize</a>(styles, <span class="charliteral">&#39;y&#39;</span>);</div><div class="line"><a name="l01856"></a><span class="lineno"> 1856</span>&#160;</div><div class="line"><a name="l01857"></a><span class="lineno"> 1857</span>&#160;    result.width -= horizScrollbar;</div><div class="line"><a name="l01858"></a><span class="lineno"> 1858</span>&#160;    result.height -= vertScrollbar;</div><div class="line"><a name="l01859"></a><span class="lineno"> 1859</span>&#160;  }</div><div class="line"><a name="l01860"></a><span class="lineno"> 1860</span>&#160;</div><div class="line"><a name="l01861"></a><span class="lineno"> 1861</span>&#160;  <span class="keywordflow">return</span> getClientRect(result);</div><div class="line"><a name="l01862"></a><span class="lineno"> 1862</span>&#160;}</div><div class="line"><a name="l01863"></a><span class="lineno"> 1863</span>&#160;</div><div class="line"><a name="l01864"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#ab1a56442bacbc27c3a4e72aee080e209"> 1864</a></span>&#160;<span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#ab1a56442bacbc27c3a4e72aee080e209">getOffsetRectRelativeToArbitraryNode</a>(children, parent) {</div><div class="line"><a name="l01865"></a><span class="lineno"> 1865</span>&#160;  var isIE10 = isIE10$1();</div><div class="line"><a name="l01866"></a><span class="lineno"> 1866</span>&#160;  var isHTML = parent.nodeName === <span class="stringliteral">&#39;HTML&#39;</span>;</div><div class="line"><a name="l01867"></a><span class="lineno"> 1867</span>&#160;  var childrenRect = getBoundingClientRect(children);</div><div class="line"><a name="l01868"></a><span class="lineno"> 1868</span>&#160;  var parentRect = getBoundingClientRect(parent);</div><div class="line"><a name="l01869"></a><span class="lineno"> 1869</span>&#160;  var scrollParent = getScrollParent(children);</div><div class="line"><a name="l01870"></a><span class="lineno"> 1870</span>&#160;</div><div class="line"><a name="l01871"></a><span class="lineno"> 1871</span>&#160;  var styles = getStyleComputedProperty(parent);</div><div class="line"><a name="l01872"></a><span class="lineno"> 1872</span>&#160;  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);</div><div class="line"><a name="l01873"></a><span class="lineno"> 1873</span>&#160;  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);</div><div class="line"><a name="l01874"></a><span class="lineno"> 1874</span>&#160;</div><div class="line"><a name="l01875"></a><span class="lineno"> 1875</span>&#160;  var offsets = getClientRect({</div><div class="line"><a name="l01876"></a><span class="lineno"> 1876</span>&#160;    top: childrenRect.top - parentRect.top - borderTopWidth,</div><div class="line"><a name="l01877"></a><span class="lineno"> 1877</span>&#160;    left: childrenRect.left - parentRect.left - borderLeftWidth,</div><div class="line"><a name="l01878"></a><span class="lineno"> 1878</span>&#160;    <a class="code" href="../../d2/dee/a00049.php#af873e7c3edea50d105e73b055c6bdacf">width</a>: childrenRect.width,</div><div class="line"><a name="l01879"></a><span class="lineno"> 1879</span>&#160;    height: childrenRect.height</div><div class="line"><a name="l01880"></a><span class="lineno"> 1880</span>&#160;  });</div><div class="line"><a name="l01881"></a><span class="lineno"> 1881</span>&#160;  offsets.marginTop = 0;</div><div class="line"><a name="l01882"></a><span class="lineno"> 1882</span>&#160;  offsets.marginLeft = 0;</div><div class="line"><a name="l01883"></a><span class="lineno"> 1883</span>&#160;</div><div class="line"><a name="l01884"></a><span class="lineno"> 1884</span>&#160;  <span class="comment">// Subtract margins of documentElement in case it&#39;s being used as parent</span></div><div class="line"><a name="l01885"></a><span class="lineno"> 1885</span>&#160;  <span class="comment">// we do this only on HTML because it&#39;s the only element that behaves</span></div><div class="line"><a name="l01886"></a><span class="lineno"> 1886</span>&#160;  <span class="comment">// differently when margins are applied to it. The margins are included in</span></div><div class="line"><a name="l01887"></a><span class="lineno"> 1887</span>&#160;  <span class="comment">// the box of the documentElement, in the other cases not.</span></div><div class="line"><a name="l01888"></a><span class="lineno"> 1888</span>&#160;  <span class="keywordflow">if</span> (!isIE10 &amp;&amp; isHTML) {</div><div class="line"><a name="l01889"></a><span class="lineno"> 1889</span>&#160;    var marginTop = parseFloat(styles.marginTop, 10);</div><div class="line"><a name="l01890"></a><span class="lineno"> 1890</span>&#160;    var marginLeft = parseFloat(styles.marginLeft, 10);</div><div class="line"><a name="l01891"></a><span class="lineno"> 1891</span>&#160;</div><div class="line"><a name="l01892"></a><span class="lineno"> 1892</span>&#160;    offsets.top -= borderTopWidth - marginTop;</div><div class="line"><a name="l01893"></a><span class="lineno"> 1893</span>&#160;    offsets.bottom -= borderTopWidth - marginTop;</div><div class="line"><a name="l01894"></a><span class="lineno"> 1894</span>&#160;    offsets.left -= borderLeftWidth - marginLeft;</div><div class="line"><a name="l01895"></a><span class="lineno"> 1895</span>&#160;    offsets.right -= borderLeftWidth - marginLeft;</div><div class="line"><a name="l01896"></a><span class="lineno"> 1896</span>&#160;</div><div class="line"><a name="l01897"></a><span class="lineno"> 1897</span>&#160;    <span class="comment">// Attach marginTop and marginLeft because in some circumstances we may need them</span></div><div class="line"><a name="l01898"></a><span class="lineno"> 1898</span>&#160;    offsets.marginTop = marginTop;</div><div class="line"><a name="l01899"></a><span class="lineno"> 1899</span>&#160;    offsets.marginLeft = marginLeft;</div><div class="line"><a name="l01900"></a><span class="lineno"> 1900</span>&#160;  }</div><div class="line"><a name="l01901"></a><span class="lineno"> 1901</span>&#160;</div><div class="line"><a name="l01902"></a><span class="lineno"> 1902</span>&#160;  <span class="keywordflow">if</span> (isIE10 ? parent.contains(scrollParent) : parent === scrollParent &amp;&amp; scrollParent.nodeName !== <span class="stringliteral">&#39;BODY&#39;</span>) {</div><div class="line"><a name="l01903"></a><span class="lineno"> 1903</span>&#160;    offsets = <a class="code" href="../../d4/d51/a00017.php#a08e668616aad32cf43ed2ca4d2af7182">includeScroll</a>(offsets, parent);</div><div class="line"><a name="l01904"></a><span class="lineno"> 1904</span>&#160;  }</div><div class="line"><a name="l01905"></a><span class="lineno"> 1905</span>&#160;</div><div class="line"><a name="l01906"></a><span class="lineno"> 1906</span>&#160;  <span class="keywordflow">return</span> offsets;</div><div class="line"><a name="l01907"></a><span class="lineno"> 1907</span>&#160;}</div><div class="line"><a name="l01908"></a><span class="lineno"> 1908</span>&#160;</div><div class="line"><a name="l01909"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a6cf88445ea7151cc8e81dc4b0cb8de77"> 1909</a></span>&#160;<span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#a6cf88445ea7151cc8e81dc4b0cb8de77">getViewportOffsetRectRelativeToArtbitraryNode</a>(element) {</div><div class="line"><a name="l01910"></a><span class="lineno"> 1910</span>&#160;  var html = element.ownerDocument.documentElement;</div><div class="line"><a name="l01911"></a><span class="lineno"> 1911</span>&#160;  var relativeOffset = <a class="code" href="../../d4/d51/a00017.php#ab1a56442bacbc27c3a4e72aee080e209">getOffsetRectRelativeToArbitraryNode</a>(element, html);</div><div class="line"><a name="l01912"></a><span class="lineno"> 1912</span>&#160;  var <a class="code" href="../../d2/dee/a00049.php#af873e7c3edea50d105e73b055c6bdacf">width</a> = Math.max(html.clientWidth, window.innerWidth || 0);</div><div class="line"><a name="l01913"></a><span class="lineno"> 1913</span>&#160;  var height = Math.max(html.clientHeight, window.innerHeight || 0);</div><div class="line"><a name="l01914"></a><span class="lineno"> 1914</span>&#160;</div><div class="line"><a name="l01915"></a><span class="lineno"> 1915</span>&#160;  var scrollTop = getScroll(html);</div><div class="line"><a name="l01916"></a><span class="lineno"> 1916</span>&#160;  var scrollLeft = getScroll(html, <span class="stringliteral">&#39;left&#39;</span>);</div><div class="line"><a name="l01917"></a><span class="lineno"> 1917</span>&#160;</div><div class="line"><a name="l01918"></a><span class="lineno"> 1918</span>&#160;  var offset = {</div><div class="line"><a name="l01919"></a><span class="lineno"> 1919</span>&#160;    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,</div><div class="line"><a name="l01920"></a><span class="lineno"> 1920</span>&#160;    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,</div><div class="line"><a name="l01921"></a><span class="lineno"> 1921</span>&#160;    width: <a class="code" href="../../d2/dee/a00049.php#af873e7c3edea50d105e73b055c6bdacf">width</a>,</div><div class="line"><a name="l01922"></a><span class="lineno"> 1922</span>&#160;    height: height</div><div class="line"><a name="l01923"></a><span class="lineno"> 1923</span>&#160;  };</div><div class="line"><a name="l01924"></a><span class="lineno"> 1924</span>&#160;</div><div class="line"><a name="l01925"></a><span class="lineno"> 1925</span>&#160;  <span class="keywordflow">return</span> getClientRect(offset);</div><div class="line"><a name="l01926"></a><span class="lineno"> 1926</span>&#160;}</div><div class="line"><a name="l01927"></a><span class="lineno"> 1927</span>&#160;</div><div class="line"><a name="l01936"></a><span class="lineno"> 1936</span>&#160;<span class="keyword">function</span> isFixed(element) {</div><div class="line"><a name="l01937"></a><span class="lineno"> 1937</span>&#160;  var nodeName = element.nodeName;</div><div class="line"><a name="l01938"></a><span class="lineno"> 1938</span>&#160;  <span class="keywordflow">if</span> (nodeName === <span class="stringliteral">&#39;BODY&#39;</span> || nodeName === <span class="stringliteral">&#39;HTML&#39;</span>) {</div><div class="line"><a name="l01939"></a><span class="lineno"> 1939</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l01940"></a><span class="lineno"> 1940</span>&#160;  }</div><div class="line"><a name="l01941"></a><span class="lineno"> 1941</span>&#160;  <span class="keywordflow">if</span> (getStyleComputedProperty(element, <span class="stringliteral">&#39;position&#39;</span>) === <span class="stringliteral">&#39;fixed&#39;</span>) {</div><div class="line"><a name="l01942"></a><span class="lineno"> 1942</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l01943"></a><span class="lineno"> 1943</span>&#160;  }</div><div class="line"><a name="l01944"></a><span class="lineno"> 1944</span>&#160;  <span class="keywordflow">return</span> isFixed(getParentNode(element));</div><div class="line"><a name="l01945"></a><span class="lineno"> 1945</span>&#160;}</div><div class="line"><a name="l01946"></a><span class="lineno"> 1946</span>&#160;</div><div class="line"><a name="l01957"></a><span class="lineno"> 1957</span>&#160;<span class="keyword">function</span> getBoundaries(popper, reference, padding, boundariesElement) {</div><div class="line"><a name="l01958"></a><span class="lineno"> 1958</span>&#160;  <span class="comment">// NOTE: 1 DOM access here</span></div><div class="line"><a name="l01959"></a><span class="lineno"> 1959</span>&#160;  var boundaries = { top: 0, left: 0 };</div><div class="line"><a name="l01960"></a><span class="lineno"> 1960</span>&#160;  var offsetParent = findCommonOffsetParent(popper, reference);</div><div class="line"><a name="l01961"></a><span class="lineno"> 1961</span>&#160;</div><div class="line"><a name="l01962"></a><span class="lineno"> 1962</span>&#160;  <span class="comment">// Handle viewport case</span></div><div class="line"><a name="l01963"></a><span class="lineno"> 1963</span>&#160;  <span class="keywordflow">if</span> (boundariesElement === <span class="stringliteral">&#39;viewport&#39;</span>) {</div><div class="line"><a name="l01964"></a><span class="lineno"> 1964</span>&#160;    boundaries = <a class="code" href="../../d4/d51/a00017.php#a6cf88445ea7151cc8e81dc4b0cb8de77">getViewportOffsetRectRelativeToArtbitraryNode</a>(offsetParent);</div><div class="line"><a name="l01965"></a><span class="lineno"> 1965</span>&#160;  } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01966"></a><span class="lineno"> 1966</span>&#160;    <span class="comment">// Handle other cases based on DOM element used as boundaries</span></div><div class="line"><a name="l01967"></a><span class="lineno"> 1967</span>&#160;    var boundariesNode = <span class="keywordtype">void</span> 0;</div><div class="line"><a name="l01968"></a><span class="lineno"> 1968</span>&#160;    <span class="keywordflow">if</span> (boundariesElement === <span class="stringliteral">&#39;scrollParent&#39;</span>) {</div><div class="line"><a name="l01969"></a><span class="lineno"> 1969</span>&#160;      boundariesNode = getScrollParent(getParentNode(reference));</div><div class="line"><a name="l01970"></a><span class="lineno"> 1970</span>&#160;      <span class="keywordflow">if</span> (boundariesNode.nodeName === <span class="stringliteral">&#39;BODY&#39;</span>) {</div><div class="line"><a name="l01971"></a><span class="lineno"> 1971</span>&#160;        boundariesNode = popper.ownerDocument.documentElement;</div><div class="line"><a name="l01972"></a><span class="lineno"> 1972</span>&#160;      }</div><div class="line"><a name="l01973"></a><span class="lineno"> 1973</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (boundariesElement === <span class="stringliteral">&#39;window&#39;</span>) {</div><div class="line"><a name="l01974"></a><span class="lineno"> 1974</span>&#160;      boundariesNode = popper.ownerDocument.documentElement;</div><div class="line"><a name="l01975"></a><span class="lineno"> 1975</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01976"></a><span class="lineno"> 1976</span>&#160;      boundariesNode = boundariesElement;</div><div class="line"><a name="l01977"></a><span class="lineno"> 1977</span>&#160;    }</div><div class="line"><a name="l01978"></a><span class="lineno"> 1978</span>&#160;</div><div class="line"><a name="l01979"></a><span class="lineno"> 1979</span>&#160;    var offsets = <a class="code" href="../../d4/d51/a00017.php#ab1a56442bacbc27c3a4e72aee080e209">getOffsetRectRelativeToArbitraryNode</a>(boundariesNode, offsetParent);</div><div class="line"><a name="l01980"></a><span class="lineno"> 1980</span>&#160;</div><div class="line"><a name="l01981"></a><span class="lineno"> 1981</span>&#160;    <span class="comment">// In case of HTML, we need a different computation</span></div><div class="line"><a name="l01982"></a><span class="lineno"> 1982</span>&#160;    <span class="keywordflow">if</span> (boundariesNode.nodeName === <span class="stringliteral">&#39;HTML&#39;</span> &amp;&amp; !isFixed(offsetParent)) {</div><div class="line"><a name="l01983"></a><span class="lineno"> 1983</span>&#160;      var _getWindowSizes = <a class="code" href="../../d4/d51/a00017.php#aa26c4a814e420d16eaf5c7ac49b667d9">getWindowSizes</a>(),</div><div class="line"><a name="l01984"></a><span class="lineno"> 1984</span>&#160;          height = _getWindowSizes.height,</div><div class="line"><a name="l01985"></a><span class="lineno"> 1985</span>&#160;          <a class="code" href="../../d2/dee/a00049.php#af873e7c3edea50d105e73b055c6bdacf">width</a> = _getWindowSizes.width;</div><div class="line"><a name="l01986"></a><span class="lineno"> 1986</span>&#160;</div><div class="line"><a name="l01987"></a><span class="lineno"> 1987</span>&#160;      boundaries.top += offsets.top - offsets.marginTop;</div><div class="line"><a name="l01988"></a><span class="lineno"> 1988</span>&#160;      boundaries.bottom = height + offsets.top;</div><div class="line"><a name="l01989"></a><span class="lineno"> 1989</span>&#160;      boundaries.left += offsets.left - offsets.marginLeft;</div><div class="line"><a name="l01990"></a><span class="lineno"> 1990</span>&#160;      boundaries.right = <a class="code" href="../../d2/dee/a00049.php#af873e7c3edea50d105e73b055c6bdacf">width</a> + offsets.left;</div><div class="line"><a name="l01991"></a><span class="lineno"> 1991</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01992"></a><span class="lineno"> 1992</span>&#160;      <span class="comment">// for all the other DOM elements, this one is good</span></div><div class="line"><a name="l01993"></a><span class="lineno"> 1993</span>&#160;      boundaries = offsets;</div><div class="line"><a name="l01994"></a><span class="lineno"> 1994</span>&#160;    }</div><div class="line"><a name="l01995"></a><span class="lineno"> 1995</span>&#160;  }</div><div class="line"><a name="l01996"></a><span class="lineno"> 1996</span>&#160;</div><div class="line"><a name="l01997"></a><span class="lineno"> 1997</span>&#160;  <span class="comment">// Add paddings</span></div><div class="line"><a name="l01998"></a><span class="lineno"> 1998</span>&#160;  boundaries.left += padding;</div><div class="line"><a name="l01999"></a><span class="lineno"> 1999</span>&#160;  boundaries.top += padding;</div><div class="line"><a name="l02000"></a><span class="lineno"> 2000</span>&#160;  boundaries.right -= padding;</div><div class="line"><a name="l02001"></a><span class="lineno"> 2001</span>&#160;  boundaries.bottom -= padding;</div><div class="line"><a name="l02002"></a><span class="lineno"> 2002</span>&#160;</div><div class="line"><a name="l02003"></a><span class="lineno"> 2003</span>&#160;  <span class="keywordflow">return</span> boundaries;</div><div class="line"><a name="l02004"></a><span class="lineno"> 2004</span>&#160;}</div><div class="line"><a name="l02005"></a><span class="lineno"> 2005</span>&#160;</div><div class="line"><a name="l02006"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a9fa3042e5a4ee75afbc234ea2261f2dc"> 2006</a></span>&#160;<span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#a9fa3042e5a4ee75afbc234ea2261f2dc">getArea</a>(_ref) {</div><div class="line"><a name="l02007"></a><span class="lineno"> 2007</span>&#160;  var <a class="code" href="../../d2/dee/a00049.php#af873e7c3edea50d105e73b055c6bdacf">width</a> = _ref.width,</div><div class="line"><a name="l02008"></a><span class="lineno"> 2008</span>&#160;      height = _ref.height;</div><div class="line"><a name="l02009"></a><span class="lineno"> 2009</span>&#160;</div><div class="line"><a name="l02010"></a><span class="lineno"> 2010</span>&#160;  <span class="keywordflow">return</span> width * height;</div><div class="line"><a name="l02011"></a><span class="lineno"> 2011</span>&#160;}</div><div class="line"><a name="l02012"></a><span class="lineno"> 2012</span>&#160;</div><div class="line"><a name="l02022"></a><span class="lineno"> 2022</span>&#160;<span class="keyword">function</span> computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {</div><div class="line"><a name="l02023"></a><span class="lineno"> 2023</span>&#160;  var padding = arguments.length &gt; 5 &amp;&amp; arguments[5] !== <a class="code" href="../../d3/dea/a00046.php#ae21cc36bf0d65014c717a481a3f8a468">undefined</a> ? arguments[5] : 0;</div><div class="line"><a name="l02024"></a><span class="lineno"> 2024</span>&#160;</div><div class="line"><a name="l02025"></a><span class="lineno"> 2025</span>&#160;  <span class="keywordflow">if</span> (placement.indexOf(<span class="stringliteral">&#39;auto&#39;</span>) === -1) {</div><div class="line"><a name="l02026"></a><span class="lineno"> 2026</span>&#160;    <span class="keywordflow">return</span> placement;</div><div class="line"><a name="l02027"></a><span class="lineno"> 2027</span>&#160;  }</div><div class="line"><a name="l02028"></a><span class="lineno"> 2028</span>&#160;</div><div class="line"><a name="l02029"></a><span class="lineno"> 2029</span>&#160;  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);</div><div class="line"><a name="l02030"></a><span class="lineno"> 2030</span>&#160;</div><div class="line"><a name="l02031"></a><span class="lineno"> 2031</span>&#160;  var rects = {</div><div class="line"><a name="l02032"></a><span class="lineno"> 2032</span>&#160;    top: {</div><div class="line"><a name="l02033"></a><span class="lineno"> 2033</span>&#160;      <a class="code" href="../../d2/dee/a00049.php#af873e7c3edea50d105e73b055c6bdacf">width</a>: boundaries.width,</div><div class="line"><a name="l02034"></a><span class="lineno"> 2034</span>&#160;      height: refRect.top - boundaries.top</div><div class="line"><a name="l02035"></a><span class="lineno"> 2035</span>&#160;    },</div><div class="line"><a name="l02036"></a><span class="lineno"> 2036</span>&#160;    right: {</div><div class="line"><a name="l02037"></a><span class="lineno"> 2037</span>&#160;      <a class="code" href="../../d2/dee/a00049.php#af873e7c3edea50d105e73b055c6bdacf">width</a>: boundaries.right - refRect.right,</div><div class="line"><a name="l02038"></a><span class="lineno"> 2038</span>&#160;      height: boundaries.height</div><div class="line"><a name="l02039"></a><span class="lineno"> 2039</span>&#160;    },</div><div class="line"><a name="l02040"></a><span class="lineno"> 2040</span>&#160;    bottom: {</div><div class="line"><a name="l02041"></a><span class="lineno"> 2041</span>&#160;      <a class="code" href="../../d2/dee/a00049.php#af873e7c3edea50d105e73b055c6bdacf">width</a>: boundaries.width,</div><div class="line"><a name="l02042"></a><span class="lineno"> 2042</span>&#160;      height: boundaries.bottom - refRect.bottom</div><div class="line"><a name="l02043"></a><span class="lineno"> 2043</span>&#160;    },</div><div class="line"><a name="l02044"></a><span class="lineno"> 2044</span>&#160;    left: {</div><div class="line"><a name="l02045"></a><span class="lineno"> 2045</span>&#160;      <a class="code" href="../../d2/dee/a00049.php#af873e7c3edea50d105e73b055c6bdacf">width</a>: refRect.left - boundaries.left,</div><div class="line"><a name="l02046"></a><span class="lineno"> 2046</span>&#160;      height: boundaries.height</div><div class="line"><a name="l02047"></a><span class="lineno"> 2047</span>&#160;    }</div><div class="line"><a name="l02048"></a><span class="lineno"> 2048</span>&#160;  };</div><div class="line"><a name="l02049"></a><span class="lineno"> 2049</span>&#160;</div><div class="line"><a name="l02050"></a><span class="lineno"> 2050</span>&#160;  var sortedAreas = Object.keys(rects).map(<span class="keyword">function</span> (key) {</div><div class="line"><a name="l02051"></a><span class="lineno"> 2051</span>&#160;    <span class="keywordflow">return</span> _extends$1({</div><div class="line"><a name="l02052"></a><span class="lineno"> 2052</span>&#160;      key: key</div><div class="line"><a name="l02053"></a><span class="lineno"> 2053</span>&#160;    }, rects[key], {</div><div class="line"><a name="l02054"></a><span class="lineno"> 2054</span>&#160;      area: <a class="code" href="../../d4/d51/a00017.php#a9fa3042e5a4ee75afbc234ea2261f2dc">getArea</a>(rects[key])</div><div class="line"><a name="l02055"></a><span class="lineno"> 2055</span>&#160;    });</div><div class="line"><a name="l02056"></a><span class="lineno"> 2056</span>&#160;  }).sort(<span class="keyword">function</span> (<a class="code" href="../../db/db2/a00020.php#ae8f6b400ed3390908c5cdeebed3a82b9">a</a>, <a class="code" href="../../db/db2/a00020.php#ac0431efac4d7c393d1e70b86115cb93f">b</a>) {</div><div class="line"><a name="l02057"></a><span class="lineno"> 2057</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../db/db2/a00020.php#ac0431efac4d7c393d1e70b86115cb93f">b</a>.area - <a class="code" href="../../db/db2/a00020.php#ae8f6b400ed3390908c5cdeebed3a82b9">a</a>.area;</div><div class="line"><a name="l02058"></a><span class="lineno"> 2058</span>&#160;  });</div><div class="line"><a name="l02059"></a><span class="lineno"> 2059</span>&#160;</div><div class="line"><a name="l02060"></a><span class="lineno"> 2060</span>&#160;  var filteredAreas = sortedAreas.filter(<span class="keyword">function</span> (_ref2) {</div><div class="line"><a name="l02061"></a><span class="lineno"> 2061</span>&#160;    var <a class="code" href="../../d2/dee/a00049.php#af873e7c3edea50d105e73b055c6bdacf">width</a> = _ref2.width,</div><div class="line"><a name="l02062"></a><span class="lineno"> 2062</span>&#160;        height = _ref2.height;</div><div class="line"><a name="l02063"></a><span class="lineno"> 2063</span>&#160;    <span class="keywordflow">return</span> width &gt;= popper.clientWidth &amp;&amp; height &gt;= popper.clientHeight;</div><div class="line"><a name="l02064"></a><span class="lineno"> 2064</span>&#160;  });</div><div class="line"><a name="l02065"></a><span class="lineno"> 2065</span>&#160;</div><div class="line"><a name="l02066"></a><span class="lineno"> 2066</span>&#160;  var computedPlacement = filteredAreas.length &gt; 0 ? filteredAreas[0].key : sortedAreas[0].key;</div><div class="line"><a name="l02067"></a><span class="lineno"> 2067</span>&#160;</div><div class="line"><a name="l02068"></a><span class="lineno"> 2068</span>&#160;  var variation = placement.split(<span class="charliteral">&#39;-&#39;</span>)[1];</div><div class="line"><a name="l02069"></a><span class="lineno"> 2069</span>&#160;</div><div class="line"><a name="l02070"></a><span class="lineno"> 2070</span>&#160;  <span class="keywordflow">return</span> computedPlacement + (variation ? <span class="charliteral">&#39;-&#39;</span> + variation : <span class="stringliteral">&#39;&#39;</span>);</div><div class="line"><a name="l02071"></a><span class="lineno"> 2071</span>&#160;}</div><div class="line"><a name="l02072"></a><span class="lineno"> 2072</span>&#160;</div><div class="line"><a name="l02082"></a><span class="lineno"> 2082</span>&#160;<span class="keyword">function</span> getReferenceOffsets(state, popper, reference) {</div><div class="line"><a name="l02083"></a><span class="lineno"> 2083</span>&#160;  var commonOffsetParent = findCommonOffsetParent(popper, reference);</div><div class="line"><a name="l02084"></a><span class="lineno"> 2084</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#ab1a56442bacbc27c3a4e72aee080e209">getOffsetRectRelativeToArbitraryNode</a>(reference, commonOffsetParent);</div><div class="line"><a name="l02085"></a><span class="lineno"> 2085</span>&#160;}</div><div class="line"><a name="l02086"></a><span class="lineno"> 2086</span>&#160;</div><div class="line"><a name="l02094"></a><span class="lineno"> 2094</span>&#160;<span class="keyword">function</span> getOuterSizes(element) {</div><div class="line"><a name="l02095"></a><span class="lineno"> 2095</span>&#160;  var styles = getComputedStyle(element);</div><div class="line"><a name="l02096"></a><span class="lineno"> 2096</span>&#160;  var <a class="code" href="../../de/d11/a00021.php#a81e910173af87b1161e719a504d52407">x</a> = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);</div><div class="line"><a name="l02097"></a><span class="lineno"> 2097</span>&#160;  var <a class="code" href="../../de/d11/a00021.php#a0b31909b1cae9ed1db6ff042057fce60">y</a> = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);</div><div class="line"><a name="l02098"></a><span class="lineno"> 2098</span>&#160;  var result = {</div><div class="line"><a name="l02099"></a><span class="lineno"> 2099</span>&#160;    <a class="code" href="../../d2/dee/a00049.php#af873e7c3edea50d105e73b055c6bdacf">width</a>: element.offsetWidth + <a class="code" href="../../de/d11/a00021.php#a0b31909b1cae9ed1db6ff042057fce60">y</a>,</div><div class="line"><a name="l02100"></a><span class="lineno"> 2100</span>&#160;    height: element.offsetHeight + x</div><div class="line"><a name="l02101"></a><span class="lineno"> 2101</span>&#160;  };</div><div class="line"><a name="l02102"></a><span class="lineno"> 2102</span>&#160;  <span class="keywordflow">return</span> result;</div><div class="line"><a name="l02103"></a><span class="lineno"> 2103</span>&#160;}</div><div class="line"><a name="l02104"></a><span class="lineno"> 2104</span>&#160;</div><div class="line"><a name="l02112"></a><span class="lineno"> 2112</span>&#160;<span class="keyword">function</span> getOppositePlacement(placement) {</div><div class="line"><a name="l02113"></a><span class="lineno"> 2113</span>&#160;  var hash = { left: <span class="stringliteral">&#39;right&#39;</span>, right: <span class="stringliteral">&#39;left&#39;</span>, bottom: <span class="stringliteral">&#39;top&#39;</span>, top: <span class="stringliteral">&#39;bottom&#39;</span> };</div><div class="line"><a name="l02114"></a><span class="lineno"> 2114</span>&#160;  <span class="keywordflow">return</span> placement.replace(/left|right|bottom|top/<a class="code" href="../../de/d11/a00021.php#a103df269476e78897c9c4c6cb8f4eb06">g</a>, <span class="keyword">function</span> (matched) {</div><div class="line"><a name="l02115"></a><span class="lineno"> 2115</span>&#160;    <span class="keywordflow">return</span> hash[matched];</div><div class="line"><a name="l02116"></a><span class="lineno"> 2116</span>&#160;  });</div><div class="line"><a name="l02117"></a><span class="lineno"> 2117</span>&#160;}</div><div class="line"><a name="l02118"></a><span class="lineno"> 2118</span>&#160;</div><div class="line"><a name="l02129"></a><span class="lineno"> 2129</span>&#160;<span class="keyword">function</span> getPopperOffsets(popper, referenceOffsets, placement) {</div><div class="line"><a name="l02130"></a><span class="lineno"> 2130</span>&#160;  placement = placement.split(<span class="charliteral">&#39;-&#39;</span>)[0];</div><div class="line"><a name="l02131"></a><span class="lineno"> 2131</span>&#160;</div><div class="line"><a name="l02132"></a><span class="lineno"> 2132</span>&#160;  <span class="comment">// Get popper node sizes</span></div><div class="line"><a name="l02133"></a><span class="lineno"> 2133</span>&#160;  var popperRect = getOuterSizes(popper);</div><div class="line"><a name="l02134"></a><span class="lineno"> 2134</span>&#160;</div><div class="line"><a name="l02135"></a><span class="lineno"> 2135</span>&#160;  <span class="comment">// Add position, width and height to our offsets object</span></div><div class="line"><a name="l02136"></a><span class="lineno"> 2136</span>&#160;  var popperOffsets = {</div><div class="line"><a name="l02137"></a><span class="lineno"> 2137</span>&#160;    <a class="code" href="../../d2/dee/a00049.php#af873e7c3edea50d105e73b055c6bdacf">width</a>: popperRect.width,</div><div class="line"><a name="l02138"></a><span class="lineno"> 2138</span>&#160;    height: popperRect.height</div><div class="line"><a name="l02139"></a><span class="lineno"> 2139</span>&#160;  };</div><div class="line"><a name="l02140"></a><span class="lineno"> 2140</span>&#160;</div><div class="line"><a name="l02141"></a><span class="lineno"> 2141</span>&#160;  <span class="comment">// depending by the popper placement we have to compute its offsets slightly differently</span></div><div class="line"><a name="l02142"></a><span class="lineno"> 2142</span>&#160;  var isHoriz = [<span class="stringliteral">&#39;right&#39;</span>, <span class="stringliteral">&#39;left&#39;</span>].indexOf(placement) !== -1;</div><div class="line"><a name="l02143"></a><span class="lineno"> 2143</span>&#160;  var mainSide = isHoriz ? <span class="stringliteral">&#39;top&#39;</span> : <span class="stringliteral">&#39;left&#39;</span>;</div><div class="line"><a name="l02144"></a><span class="lineno"> 2144</span>&#160;  var secondarySide = isHoriz ? <span class="stringliteral">&#39;left&#39;</span> : <span class="stringliteral">&#39;top&#39;</span>;</div><div class="line"><a name="l02145"></a><span class="lineno"> 2145</span>&#160;  var measurement = isHoriz ? <span class="stringliteral">&#39;height&#39;</span> : <span class="stringliteral">&#39;width&#39;</span>;</div><div class="line"><a name="l02146"></a><span class="lineno"> 2146</span>&#160;  var secondaryMeasurement = !isHoriz ? <span class="stringliteral">&#39;height&#39;</span> : <span class="stringliteral">&#39;width&#39;</span>;</div><div class="line"><a name="l02147"></a><span class="lineno"> 2147</span>&#160;</div><div class="line"><a name="l02148"></a><span class="lineno"> 2148</span>&#160;  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;</div><div class="line"><a name="l02149"></a><span class="lineno"> 2149</span>&#160;  <span class="keywordflow">if</span> (placement === secondarySide) {</div><div class="line"><a name="l02150"></a><span class="lineno"> 2150</span>&#160;    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];</div><div class="line"><a name="l02151"></a><span class="lineno"> 2151</span>&#160;  } <span class="keywordflow">else</span> {</div><div class="line"><a name="l02152"></a><span class="lineno"> 2152</span>&#160;    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];</div><div class="line"><a name="l02153"></a><span class="lineno"> 2153</span>&#160;  }</div><div class="line"><a name="l02154"></a><span class="lineno"> 2154</span>&#160;</div><div class="line"><a name="l02155"></a><span class="lineno"> 2155</span>&#160;  <span class="keywordflow">return</span> popperOffsets;</div><div class="line"><a name="l02156"></a><span class="lineno"> 2156</span>&#160;}</div><div class="line"><a name="l02157"></a><span class="lineno"> 2157</span>&#160;</div><div class="line"><a name="l02167"></a><span class="lineno"> 2167</span>&#160;<span class="keyword">function</span> find(arr, check) {</div><div class="line"><a name="l02168"></a><span class="lineno"> 2168</span>&#160;  <span class="comment">// use native find if supported</span></div><div class="line"><a name="l02169"></a><span class="lineno"> 2169</span>&#160;  <span class="keywordflow">if</span> (Array.prototype.find) {</div><div class="line"><a name="l02170"></a><span class="lineno"> 2170</span>&#160;    <span class="keywordflow">return</span> arr.find(check);</div><div class="line"><a name="l02171"></a><span class="lineno"> 2171</span>&#160;  }</div><div class="line"><a name="l02172"></a><span class="lineno"> 2172</span>&#160;</div><div class="line"><a name="l02173"></a><span class="lineno"> 2173</span>&#160;  <span class="comment">// use `filter` to obtain the same behavior of `find`</span></div><div class="line"><a name="l02174"></a><span class="lineno"> 2174</span>&#160;  <span class="keywordflow">return</span> arr.filter(check)[0];</div><div class="line"><a name="l02175"></a><span class="lineno"> 2175</span>&#160;}</div><div class="line"><a name="l02176"></a><span class="lineno"> 2176</span>&#160;</div><div class="line"><a name="l02186"></a><span class="lineno"> 2186</span>&#160;<span class="keyword">function</span> findIndex(arr, prop, value) {</div><div class="line"><a name="l02187"></a><span class="lineno"> 2187</span>&#160;  <span class="comment">// use native findIndex if supported</span></div><div class="line"><a name="l02188"></a><span class="lineno"> 2188</span>&#160;  <span class="keywordflow">if</span> (Array.prototype.findIndex) {</div><div class="line"><a name="l02189"></a><span class="lineno"> 2189</span>&#160;    <span class="keywordflow">return</span> arr.findIndex(<span class="keyword">function</span> (cur) {</div><div class="line"><a name="l02190"></a><span class="lineno"> 2190</span>&#160;      <span class="keywordflow">return</span> cur[prop] === value;</div><div class="line"><a name="l02191"></a><span class="lineno"> 2191</span>&#160;    });</div><div class="line"><a name="l02192"></a><span class="lineno"> 2192</span>&#160;  }</div><div class="line"><a name="l02193"></a><span class="lineno"> 2193</span>&#160;</div><div class="line"><a name="l02194"></a><span class="lineno"> 2194</span>&#160;  <span class="comment">// use `find` + `indexOf` if `findIndex` isn&#39;t supported</span></div><div class="line"><a name="l02195"></a><span class="lineno"> 2195</span>&#160;  var match = find(arr, <span class="keyword">function</span> (obj) {</div><div class="line"><a name="l02196"></a><span class="lineno"> 2196</span>&#160;    <span class="keywordflow">return</span> obj[prop] === value;</div><div class="line"><a name="l02197"></a><span class="lineno"> 2197</span>&#160;  });</div><div class="line"><a name="l02198"></a><span class="lineno"> 2198</span>&#160;  <span class="keywordflow">return</span> arr.indexOf(match);</div><div class="line"><a name="l02199"></a><span class="lineno"> 2199</span>&#160;}</div><div class="line"><a name="l02200"></a><span class="lineno"> 2200</span>&#160;</div><div class="line"><a name="l02211"></a><span class="lineno"> 2211</span>&#160;<span class="keyword">function</span> runModifiers(<a class="code" href="../../d4/d31/a00069.php">modifiers</a>, <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>, ends) {</div><div class="line"><a name="l02212"></a><span class="lineno"> 2212</span>&#160;  var modifiersToRun = ends === <a class="code" href="../../d3/dea/a00046.php#ae21cc36bf0d65014c717a481a3f8a468">undefined</a> ? <a class="code" href="../../d4/d31/a00069.php">modifiers</a> : <a class="code" href="../../d4/d31/a00069.php">modifiers</a>.slice(0, findIndex(<a class="code" href="../../d4/d31/a00069.php">modifiers</a>, <span class="stringliteral">&#39;name&#39;</span>, ends));</div><div class="line"><a name="l02213"></a><span class="lineno"> 2213</span>&#160;</div><div class="line"><a name="l02214"></a><span class="lineno"> 2214</span>&#160;  modifiersToRun.forEach(<span class="keyword">function</span> (modifier) {</div><div class="line"><a name="l02215"></a><span class="lineno"> 2215</span>&#160;    <span class="keywordflow">if</span> (modifier[<span class="stringliteral">&#39;function&#39;</span>]) {</div><div class="line"><a name="l02216"></a><span class="lineno"> 2216</span>&#160;      <span class="comment">// eslint-disable-line dot-notation</span></div><div class="line"><a name="l02217"></a><span class="lineno"> 2217</span>&#160;      console.warn(<span class="stringliteral">&#39;`modifier.function` is deprecated, use `modifier.fn`!&#39;</span>);</div><div class="line"><a name="l02218"></a><span class="lineno"> 2218</span>&#160;    }</div><div class="line"><a name="l02219"></a><span class="lineno"> 2219</span>&#160;    var <a class="code" href="../../d3/dea/a00046.php#a8a938b10dab9fa9d43908785f7e2c002">fn</a> = modifier[<span class="stringliteral">&#39;function&#39;</span>] || modifier.fn; <span class="comment">// eslint-disable-line dot-notation</span></div><div class="line"><a name="l02220"></a><span class="lineno"> 2220</span>&#160;    <span class="keywordflow">if</span> (modifier.enabled &amp;&amp; isFunction(fn)) {</div><div class="line"><a name="l02221"></a><span class="lineno"> 2221</span>&#160;      <span class="comment">// Add properties to offsets to make them a complete clientRect object</span></div><div class="line"><a name="l02222"></a><span class="lineno"> 2222</span>&#160;      <span class="comment">// we do this before each modifier to make sure the previous one doesn&#39;t</span></div><div class="line"><a name="l02223"></a><span class="lineno"> 2223</span>&#160;      <span class="comment">// mess with these values</span></div><div class="line"><a name="l02224"></a><span class="lineno"> 2224</span>&#160;      <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets.popper = getClientRect(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets.popper);</div><div class="line"><a name="l02225"></a><span class="lineno"> 2225</span>&#160;      <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets.reference = getClientRect(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets.reference);</div><div class="line"><a name="l02226"></a><span class="lineno"> 2226</span>&#160;</div><div class="line"><a name="l02227"></a><span class="lineno"> 2227</span>&#160;      <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a> = <a class="code" href="../../d3/dea/a00046.php#a8a938b10dab9fa9d43908785f7e2c002">fn</a>(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>, modifier);</div><div class="line"><a name="l02228"></a><span class="lineno"> 2228</span>&#160;    }</div><div class="line"><a name="l02229"></a><span class="lineno"> 2229</span>&#160;  });</div><div class="line"><a name="l02230"></a><span class="lineno"> 2230</span>&#160;</div><div class="line"><a name="l02231"></a><span class="lineno"> 2231</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>;</div><div class="line"><a name="l02232"></a><span class="lineno"> 2232</span>&#160;}</div><div class="line"><a name="l02233"></a><span class="lineno"> 2233</span>&#160;</div><div class="line"><a name="l02241"></a><span class="lineno"> 2241</span>&#160;<span class="keyword">function</span> update() {</div><div class="line"><a name="l02242"></a><span class="lineno"> 2242</span>&#160;  <span class="comment">// if popper is destroyed, don&#39;t perform any further update</span></div><div class="line"><a name="l02243"></a><span class="lineno"> 2243</span>&#160;  <span class="keywordflow">if</span> (this.state.isDestroyed) {</div><div class="line"><a name="l02244"></a><span class="lineno"> 2244</span>&#160;    <span class="keywordflow">return</span>;</div><div class="line"><a name="l02245"></a><span class="lineno"> 2245</span>&#160;  }</div><div class="line"><a name="l02246"></a><span class="lineno"> 2246</span>&#160;</div><div class="line"><a name="l02247"></a><span class="lineno"> 2247</span>&#160;  var <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a> = {</div><div class="line"><a name="l02248"></a><span class="lineno"> 2248</span>&#160;    instance: <span class="keyword">this</span>,</div><div class="line"><a name="l02249"></a><span class="lineno"> 2249</span>&#160;    styles: {},</div><div class="line"><a name="l02250"></a><span class="lineno"> 2250</span>&#160;    arrowStyles: {},</div><div class="line"><a name="l02251"></a><span class="lineno"> 2251</span>&#160;    attributes: {},</div><div class="line"><a name="l02252"></a><span class="lineno"> 2252</span>&#160;    flipped: <span class="keyword">false</span>,</div><div class="line"><a name="l02253"></a><span class="lineno"> 2253</span>&#160;    offsets: {}</div><div class="line"><a name="l02254"></a><span class="lineno"> 2254</span>&#160;  };</div><div class="line"><a name="l02255"></a><span class="lineno"> 2255</span>&#160;</div><div class="line"><a name="l02256"></a><span class="lineno"> 2256</span>&#160;  <span class="comment">// compute reference element offsets</span></div><div class="line"><a name="l02257"></a><span class="lineno"> 2257</span>&#160;  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference);</div><div class="line"><a name="l02258"></a><span class="lineno"> 2258</span>&#160;</div><div class="line"><a name="l02259"></a><span class="lineno"> 2259</span>&#160;  <span class="comment">// compute auto placement, store placement inside the data object,</span></div><div class="line"><a name="l02260"></a><span class="lineno"> 2260</span>&#160;  <span class="comment">// modifiers will be able to edit `placement` if needed</span></div><div class="line"><a name="l02261"></a><span class="lineno"> 2261</span>&#160;  <span class="comment">// and refer to originalPlacement to know the original value</span></div><div class="line"><a name="l02262"></a><span class="lineno"> 2262</span>&#160;  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, <span class="keyword">this</span>.popper, <span class="keyword">this</span>.reference, <span class="keyword">this</span>.options.modifiers.flip.boundariesElement, <span class="keyword">this</span>.options.modifiers.flip.padding);</div><div class="line"><a name="l02263"></a><span class="lineno"> 2263</span>&#160;</div><div class="line"><a name="l02264"></a><span class="lineno"> 2264</span>&#160;  <span class="comment">// store the computed placement inside `originalPlacement`</span></div><div class="line"><a name="l02265"></a><span class="lineno"> 2265</span>&#160;  data.originalPlacement = data.placement;</div><div class="line"><a name="l02266"></a><span class="lineno"> 2266</span>&#160;</div><div class="line"><a name="l02267"></a><span class="lineno"> 2267</span>&#160;  <span class="comment">// compute the popper offsets</span></div><div class="line"><a name="l02268"></a><span class="lineno"> 2268</span>&#160;  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);</div><div class="line"><a name="l02269"></a><span class="lineno"> 2269</span>&#160;  data.offsets.popper.position = <span class="stringliteral">&#39;absolute&#39;</span>;</div><div class="line"><a name="l02270"></a><span class="lineno"> 2270</span>&#160;</div><div class="line"><a name="l02271"></a><span class="lineno"> 2271</span>&#160;  <span class="comment">// run the modifiers</span></div><div class="line"><a name="l02272"></a><span class="lineno"> 2272</span>&#160;  data = runModifiers(this.<a class="code" href="../../d4/d31/a00069.php">modifiers</a>, data);</div><div class="line"><a name="l02273"></a><span class="lineno"> 2273</span>&#160;</div><div class="line"><a name="l02274"></a><span class="lineno"> 2274</span>&#160;  <span class="comment">// the first `update` will call `onCreate` callback</span></div><div class="line"><a name="l02275"></a><span class="lineno"> 2275</span>&#160;  <span class="comment">// the other ones will call `onUpdate` callback</span></div><div class="line"><a name="l02276"></a><span class="lineno"> 2276</span>&#160;  <span class="keywordflow">if</span> (!this.state.isCreated) {</div><div class="line"><a name="l02277"></a><span class="lineno"> 2277</span>&#160;    this.state.isCreated = <span class="keyword">true</span>;</div><div class="line"><a name="l02278"></a><span class="lineno"> 2278</span>&#160;    this.options.onCreate(data);</div><div class="line"><a name="l02279"></a><span class="lineno"> 2279</span>&#160;  } <span class="keywordflow">else</span> {</div><div class="line"><a name="l02280"></a><span class="lineno"> 2280</span>&#160;    this.options.onUpdate(data);</div><div class="line"><a name="l02281"></a><span class="lineno"> 2281</span>&#160;  }</div><div class="line"><a name="l02282"></a><span class="lineno"> 2282</span>&#160;}</div><div class="line"><a name="l02283"></a><span class="lineno"> 2283</span>&#160;</div><div class="line"><a name="l02290"></a><span class="lineno"> 2290</span>&#160;<span class="keyword">function</span> isModifierEnabled(<a class="code" href="../../d4/d31/a00069.php">modifiers</a>, modifierName) {</div><div class="line"><a name="l02291"></a><span class="lineno"> 2291</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/d31/a00069.php">modifiers</a>.some(<span class="keyword">function</span> (_ref) {</div><div class="line"><a name="l02292"></a><span class="lineno"> 2292</span>&#160;    var name = _ref.name,</div><div class="line"><a name="l02293"></a><span class="lineno"> 2293</span>&#160;        enabled = _ref.enabled;</div><div class="line"><a name="l02294"></a><span class="lineno"> 2294</span>&#160;    <span class="keywordflow">return</span> enabled &amp;&amp; name === modifierName;</div><div class="line"><a name="l02295"></a><span class="lineno"> 2295</span>&#160;  });</div><div class="line"><a name="l02296"></a><span class="lineno"> 2296</span>&#160;}</div><div class="line"><a name="l02297"></a><span class="lineno"> 2297</span>&#160;</div><div class="line"><a name="l02305"></a><span class="lineno"> 2305</span>&#160;<span class="keyword">function</span> getSupportedPropertyName(property) {</div><div class="line"><a name="l02306"></a><span class="lineno"> 2306</span>&#160;  var prefixes = [<span class="keyword">false</span>, <span class="stringliteral">&#39;ms&#39;</span>, <span class="stringliteral">&#39;Webkit&#39;</span>, <span class="stringliteral">&#39;Moz&#39;</span>, <span class="charliteral">&#39;O&#39;</span>];</div><div class="line"><a name="l02307"></a><span class="lineno"> 2307</span>&#160;  var upperProp = <span class="keyword">property</span>.charAt(0).toUpperCase() + <span class="keyword">property</span>.slice(1);</div><div class="line"><a name="l02308"></a><span class="lineno"> 2308</span>&#160;</div><div class="line"><a name="l02309"></a><span class="lineno"> 2309</span>&#160;  <span class="keywordflow">for</span> (var <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a> = 0; <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a> &lt; prefixes.length - 1; <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>++) {</div><div class="line"><a name="l02310"></a><span class="lineno"> 2310</span>&#160;    var prefix = prefixes[<a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>];</div><div class="line"><a name="l02311"></a><span class="lineno"> 2311</span>&#160;    var toCheck = prefix ? <span class="stringliteral">&#39;&#39;</span> + prefix + upperProp : property;</div><div class="line"><a name="l02312"></a><span class="lineno"> 2312</span>&#160;    <span class="keywordflow">if</span> (typeof document.body.style[toCheck] !== <span class="stringliteral">&#39;undefined&#39;</span>) {</div><div class="line"><a name="l02313"></a><span class="lineno"> 2313</span>&#160;      <span class="keywordflow">return</span> toCheck;</div><div class="line"><a name="l02314"></a><span class="lineno"> 2314</span>&#160;    }</div><div class="line"><a name="l02315"></a><span class="lineno"> 2315</span>&#160;  }</div><div class="line"><a name="l02316"></a><span class="lineno"> 2316</span>&#160;  <span class="keywordflow">return</span> null;</div><div class="line"><a name="l02317"></a><span class="lineno"> 2317</span>&#160;}</div><div class="line"><a name="l02318"></a><span class="lineno"> 2318</span>&#160;</div><div class="line"><a name="l02324"></a><span class="lineno"> 2324</span>&#160;<span class="keyword">function</span> destroy() {</div><div class="line"><a name="l02325"></a><span class="lineno"> 2325</span>&#160;  this.state.isDestroyed = <span class="keyword">true</span>;</div><div class="line"><a name="l02326"></a><span class="lineno"> 2326</span>&#160;</div><div class="line"><a name="l02327"></a><span class="lineno"> 2327</span>&#160;  <span class="comment">// touch DOM only if `applyStyle` modifier is enabled</span></div><div class="line"><a name="l02328"></a><span class="lineno"> 2328</span>&#160;  <span class="keywordflow">if</span> (isModifierEnabled(this.<a class="code" href="../../d4/d31/a00069.php">modifiers</a>, <span class="stringliteral">&#39;applyStyle&#39;</span>)) {</div><div class="line"><a name="l02329"></a><span class="lineno"> 2329</span>&#160;    this.popper.removeAttribute(<span class="stringliteral">&#39;x-placement&#39;</span>);</div><div class="line"><a name="l02330"></a><span class="lineno"> 2330</span>&#160;    this.popper.style.left = <span class="stringliteral">&#39;&#39;</span>;</div><div class="line"><a name="l02331"></a><span class="lineno"> 2331</span>&#160;    this.popper.style.position = <span class="stringliteral">&#39;&#39;</span>;</div><div class="line"><a name="l02332"></a><span class="lineno"> 2332</span>&#160;    this.popper.style.top = <span class="stringliteral">&#39;&#39;</span>;</div><div class="line"><a name="l02333"></a><span class="lineno"> 2333</span>&#160;    this.popper.style[getSupportedPropertyName(<span class="stringliteral">&#39;transform&#39;</span>)] = <span class="stringliteral">&#39;&#39;</span>;</div><div class="line"><a name="l02334"></a><span class="lineno"> 2334</span>&#160;  }</div><div class="line"><a name="l02335"></a><span class="lineno"> 2335</span>&#160;</div><div class="line"><a name="l02336"></a><span class="lineno"> 2336</span>&#160;  this.disableEventListeners();</div><div class="line"><a name="l02337"></a><span class="lineno"> 2337</span>&#160;</div><div class="line"><a name="l02338"></a><span class="lineno"> 2338</span>&#160;  <span class="comment">// remove the popper if user explicity asked for the deletion on destroy</span></div><div class="line"><a name="l02339"></a><span class="lineno"> 2339</span>&#160;  <span class="comment">// do not use `remove` because IE11 doesn&#39;t support it</span></div><div class="line"><a name="l02340"></a><span class="lineno"> 2340</span>&#160;  <span class="keywordflow">if</span> (this.options.removeOnDestroy) {</div><div class="line"><a name="l02341"></a><span class="lineno"> 2341</span>&#160;    this.popper.parentNode.removeChild(this.popper);</div><div class="line"><a name="l02342"></a><span class="lineno"> 2342</span>&#160;  }</div><div class="line"><a name="l02343"></a><span class="lineno"> 2343</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">this</span>;</div><div class="line"><a name="l02344"></a><span class="lineno"> 2344</span>&#160;}</div><div class="line"><a name="l02345"></a><span class="lineno"> 2345</span>&#160;</div><div class="line"><a name="l02351"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#acf179fee398e6c6ca0aa3bfe412c95fc"> 2351</a></span>&#160;<span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#acf179fee398e6c6ca0aa3bfe412c95fc">getWindow</a>(element) {</div><div class="line"><a name="l02352"></a><span class="lineno"> 2352</span>&#160;  var ownerDocument = element.ownerDocument;</div><div class="line"><a name="l02353"></a><span class="lineno"> 2353</span>&#160;  <span class="keywordflow">return</span> ownerDocument ? ownerDocument.defaultView : window;</div><div class="line"><a name="l02354"></a><span class="lineno"> 2354</span>&#160;}</div><div class="line"><a name="l02355"></a><span class="lineno"> 2355</span>&#160;</div><div class="line"><a name="l02356"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a5d33c8c99f4895dc1c7032a3d8550511"> 2356</a></span>&#160;<span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#a5d33c8c99f4895dc1c7032a3d8550511">attachToScrollParents</a>(scrollParent, event, callback, scrollParents) {</div><div class="line"><a name="l02357"></a><span class="lineno"> 2357</span>&#160;  var isBody = scrollParent.nodeName === <span class="stringliteral">&#39;BODY&#39;</span>;</div><div class="line"><a name="l02358"></a><span class="lineno"> 2358</span>&#160;  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;</div><div class="line"><a name="l02359"></a><span class="lineno"> 2359</span>&#160;  target.addEventListener(event, callback, { passive: <span class="keyword">true</span> });</div><div class="line"><a name="l02360"></a><span class="lineno"> 2360</span>&#160;</div><div class="line"><a name="l02361"></a><span class="lineno"> 2361</span>&#160;  <span class="keywordflow">if</span> (!isBody) {</div><div class="line"><a name="l02362"></a><span class="lineno"> 2362</span>&#160;    <a class="code" href="../../d4/d51/a00017.php#a5d33c8c99f4895dc1c7032a3d8550511">attachToScrollParents</a>(getScrollParent(target.parentNode), event, callback, scrollParents);</div><div class="line"><a name="l02363"></a><span class="lineno"> 2363</span>&#160;  }</div><div class="line"><a name="l02364"></a><span class="lineno"> 2364</span>&#160;  scrollParents.push(target);</div><div class="line"><a name="l02365"></a><span class="lineno"> 2365</span>&#160;}</div><div class="line"><a name="l02366"></a><span class="lineno"> 2366</span>&#160;</div><div class="line"><a name="l02373"></a><span class="lineno"> 2373</span>&#160;<span class="keyword">function</span> setupEventListeners(reference, options, state, updateBound) {</div><div class="line"><a name="l02374"></a><span class="lineno"> 2374</span>&#160;  <span class="comment">// Resize event listener on window</span></div><div class="line"><a name="l02375"></a><span class="lineno"> 2375</span>&#160;  state.updateBound = updateBound;</div><div class="line"><a name="l02376"></a><span class="lineno"> 2376</span>&#160;  <a class="code" href="../../d4/d51/a00017.php#acf179fee398e6c6ca0aa3bfe412c95fc">getWindow</a>(reference).addEventListener(<span class="stringliteral">&#39;resize&#39;</span>, state.updateBound, { passive: true });</div><div class="line"><a name="l02377"></a><span class="lineno"> 2377</span>&#160;</div><div class="line"><a name="l02378"></a><span class="lineno"> 2378</span>&#160;  <span class="comment">// Scroll event listener on scroll parents</span></div><div class="line"><a name="l02379"></a><span class="lineno"> 2379</span>&#160;  var scrollElement = getScrollParent(reference);</div><div class="line"><a name="l02380"></a><span class="lineno"> 2380</span>&#160;  <a class="code" href="../../d4/d51/a00017.php#a5d33c8c99f4895dc1c7032a3d8550511">attachToScrollParents</a>(scrollElement, <span class="stringliteral">&#39;scroll&#39;</span>, state.updateBound, state.scrollParents);</div><div class="line"><a name="l02381"></a><span class="lineno"> 2381</span>&#160;  state.scrollElement = scrollElement;</div><div class="line"><a name="l02382"></a><span class="lineno"> 2382</span>&#160;  state.eventsEnabled = <span class="keyword">true</span>;</div><div class="line"><a name="l02383"></a><span class="lineno"> 2383</span>&#160;</div><div class="line"><a name="l02384"></a><span class="lineno"> 2384</span>&#160;  <span class="keywordflow">return</span> state;</div><div class="line"><a name="l02385"></a><span class="lineno"> 2385</span>&#160;}</div><div class="line"><a name="l02386"></a><span class="lineno"> 2386</span>&#160;</div><div class="line"><a name="l02393"></a><span class="lineno"> 2393</span>&#160;<span class="keyword">function</span> enableEventListeners() {</div><div class="line"><a name="l02394"></a><span class="lineno"> 2394</span>&#160;  <span class="keywordflow">if</span> (!this.state.eventsEnabled) {</div><div class="line"><a name="l02395"></a><span class="lineno"> 2395</span>&#160;    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);</div><div class="line"><a name="l02396"></a><span class="lineno"> 2396</span>&#160;  }</div><div class="line"><a name="l02397"></a><span class="lineno"> 2397</span>&#160;}</div><div class="line"><a name="l02398"></a><span class="lineno"> 2398</span>&#160;</div><div class="line"><a name="l02405"></a><span class="lineno"> 2405</span>&#160;<span class="keyword">function</span> removeEventListeners(reference, state) {</div><div class="line"><a name="l02406"></a><span class="lineno"> 2406</span>&#160;  <span class="comment">// Remove resize event listener on window</span></div><div class="line"><a name="l02407"></a><span class="lineno"> 2407</span>&#160;  <a class="code" href="../../d4/d51/a00017.php#acf179fee398e6c6ca0aa3bfe412c95fc">getWindow</a>(reference).removeEventListener(<span class="stringliteral">&#39;resize&#39;</span>, state.updateBound);</div><div class="line"><a name="l02408"></a><span class="lineno"> 2408</span>&#160;</div><div class="line"><a name="l02409"></a><span class="lineno"> 2409</span>&#160;  <span class="comment">// Remove scroll event listener on scroll parents</span></div><div class="line"><a name="l02410"></a><span class="lineno"> 2410</span>&#160;  state.scrollParents.forEach(<span class="keyword">function</span> (target) {</div><div class="line"><a name="l02411"></a><span class="lineno"> 2411</span>&#160;    target.removeEventListener(<span class="stringliteral">&#39;scroll&#39;</span>, state.updateBound);</div><div class="line"><a name="l02412"></a><span class="lineno"> 2412</span>&#160;  });</div><div class="line"><a name="l02413"></a><span class="lineno"> 2413</span>&#160;</div><div class="line"><a name="l02414"></a><span class="lineno"> 2414</span>&#160;  <span class="comment">// Reset state</span></div><div class="line"><a name="l02415"></a><span class="lineno"> 2415</span>&#160;  state.updateBound = null;</div><div class="line"><a name="l02416"></a><span class="lineno"> 2416</span>&#160;  state.scrollParents = [];</div><div class="line"><a name="l02417"></a><span class="lineno"> 2417</span>&#160;  state.scrollElement = null;</div><div class="line"><a name="l02418"></a><span class="lineno"> 2418</span>&#160;  state.eventsEnabled = <span class="keyword">false</span>;</div><div class="line"><a name="l02419"></a><span class="lineno"> 2419</span>&#160;  <span class="keywordflow">return</span> state;</div><div class="line"><a name="l02420"></a><span class="lineno"> 2420</span>&#160;}</div><div class="line"><a name="l02421"></a><span class="lineno"> 2421</span>&#160;</div><div class="line"><a name="l02429"></a><span class="lineno"> 2429</span>&#160;<span class="keyword">function</span> disableEventListeners() {</div><div class="line"><a name="l02430"></a><span class="lineno"> 2430</span>&#160;  <span class="keywordflow">if</span> (this.state.eventsEnabled) {</div><div class="line"><a name="l02431"></a><span class="lineno"> 2431</span>&#160;    cancelAnimationFrame(this.scheduleUpdate);</div><div class="line"><a name="l02432"></a><span class="lineno"> 2432</span>&#160;    this.state = removeEventListeners(this.reference, this.state);</div><div class="line"><a name="l02433"></a><span class="lineno"> 2433</span>&#160;  }</div><div class="line"><a name="l02434"></a><span class="lineno"> 2434</span>&#160;}</div><div class="line"><a name="l02435"></a><span class="lineno"> 2435</span>&#160;</div><div class="line"><a name="l02443"></a><span class="lineno"> 2443</span>&#160;<span class="keyword">function</span> isNumeric(<a class="code" href="../../de/d11/a00021.php#aeab71244afb687f16d8c4f5ee9d6ef0e">n</a>) {</div><div class="line"><a name="l02444"></a><span class="lineno"> 2444</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/d11/a00021.php#aeab71244afb687f16d8c4f5ee9d6ef0e">n</a> !== <span class="stringliteral">&#39;&#39;</span> &amp;&amp; !isNaN(parseFloat(<a class="code" href="../../de/d11/a00021.php#aeab71244afb687f16d8c4f5ee9d6ef0e">n</a>)) &amp;&amp; isFinite(<a class="code" href="../../de/d11/a00021.php#aeab71244afb687f16d8c4f5ee9d6ef0e">n</a>);</div><div class="line"><a name="l02445"></a><span class="lineno"> 2445</span>&#160;}</div><div class="line"><a name="l02446"></a><span class="lineno"> 2446</span>&#160;</div><div class="line"><a name="l02455"></a><span class="lineno"> 2455</span>&#160;<span class="keyword">function</span> setStyles(element, styles) {</div><div class="line"><a name="l02456"></a><span class="lineno"> 2456</span>&#160;  Object.keys(styles).forEach(<span class="keyword">function</span> (prop) {</div><div class="line"><a name="l02457"></a><span class="lineno"> 2457</span>&#160;    var unit = <span class="stringliteral">&#39;&#39;</span>;</div><div class="line"><a name="l02458"></a><span class="lineno"> 2458</span>&#160;    <span class="comment">// add unit if the value is numeric and is one of the following</span></div><div class="line"><a name="l02459"></a><span class="lineno"> 2459</span>&#160;    <span class="keywordflow">if</span> ([<span class="stringliteral">&#39;width&#39;</span>, <span class="stringliteral">&#39;height&#39;</span>, <span class="stringliteral">&#39;top&#39;</span>, <span class="stringliteral">&#39;right&#39;</span>, <span class="stringliteral">&#39;bottom&#39;</span>, <span class="stringliteral">&#39;left&#39;</span>].indexOf(prop) !== -1 &amp;&amp; isNumeric(styles[prop])) {</div><div class="line"><a name="l02460"></a><span class="lineno"> 2460</span>&#160;      unit = <span class="stringliteral">&#39;px&#39;</span>;</div><div class="line"><a name="l02461"></a><span class="lineno"> 2461</span>&#160;    }</div><div class="line"><a name="l02462"></a><span class="lineno"> 2462</span>&#160;    element.style[prop] = styles[prop] + unit;</div><div class="line"><a name="l02463"></a><span class="lineno"> 2463</span>&#160;  });</div><div class="line"><a name="l02464"></a><span class="lineno"> 2464</span>&#160;}</div><div class="line"><a name="l02465"></a><span class="lineno"> 2465</span>&#160;</div><div class="line"><a name="l02474"></a><span class="lineno"> 2474</span>&#160;<span class="keyword">function</span> setAttributes(element, attributes) {</div><div class="line"><a name="l02475"></a><span class="lineno"> 2475</span>&#160;  Object.keys(attributes).forEach(<span class="keyword">function</span> (prop) {</div><div class="line"><a name="l02476"></a><span class="lineno"> 2476</span>&#160;    var value = attributes[prop];</div><div class="line"><a name="l02477"></a><span class="lineno"> 2477</span>&#160;    <span class="keywordflow">if</span> (value !== <span class="keyword">false</span>) {</div><div class="line"><a name="l02478"></a><span class="lineno"> 2478</span>&#160;      element.setAttribute(prop, attributes[prop]);</div><div class="line"><a name="l02479"></a><span class="lineno"> 2479</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l02480"></a><span class="lineno"> 2480</span>&#160;      element.removeAttribute(prop);</div><div class="line"><a name="l02481"></a><span class="lineno"> 2481</span>&#160;    }</div><div class="line"><a name="l02482"></a><span class="lineno"> 2482</span>&#160;  });</div><div class="line"><a name="l02483"></a><span class="lineno"> 2483</span>&#160;}</div><div class="line"><a name="l02484"></a><span class="lineno"> 2484</span>&#160;</div><div class="line"><a name="l02494"></a><span class="lineno"> 2494</span>&#160;<span class="keyword">function</span> applyStyle(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>) {</div><div class="line"><a name="l02495"></a><span class="lineno"> 2495</span>&#160;  <span class="comment">// any property present in `data.styles` will be applied to the popper,</span></div><div class="line"><a name="l02496"></a><span class="lineno"> 2496</span>&#160;  <span class="comment">// in this way we can make the 3rd party modifiers add custom styles to it</span></div><div class="line"><a name="l02497"></a><span class="lineno"> 2497</span>&#160;  <span class="comment">// Be aware, modifiers could override the properties defined in the previous</span></div><div class="line"><a name="l02498"></a><span class="lineno"> 2498</span>&#160;  <span class="comment">// lines of this modifier!</span></div><div class="line"><a name="l02499"></a><span class="lineno"> 2499</span>&#160;  setStyles(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.instance.popper, <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.styles);</div><div class="line"><a name="l02500"></a><span class="lineno"> 2500</span>&#160;</div><div class="line"><a name="l02501"></a><span class="lineno"> 2501</span>&#160;  <span class="comment">// any property present in `data.attributes` will be applied to the popper,</span></div><div class="line"><a name="l02502"></a><span class="lineno"> 2502</span>&#160;  <span class="comment">// they will be set as HTML attributes of the element</span></div><div class="line"><a name="l02503"></a><span class="lineno"> 2503</span>&#160;  setAttributes(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.instance.popper, <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.attributes);</div><div class="line"><a name="l02504"></a><span class="lineno"> 2504</span>&#160;</div><div class="line"><a name="l02505"></a><span class="lineno"> 2505</span>&#160;  <span class="comment">// if arrowElement is defined and arrowStyles has some properties</span></div><div class="line"><a name="l02506"></a><span class="lineno"> 2506</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.arrowElement &amp;&amp; Object.keys(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.arrowStyles).length) {</div><div class="line"><a name="l02507"></a><span class="lineno"> 2507</span>&#160;    setStyles(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.arrowElement, <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.arrowStyles);</div><div class="line"><a name="l02508"></a><span class="lineno"> 2508</span>&#160;  }</div><div class="line"><a name="l02509"></a><span class="lineno"> 2509</span>&#160;</div><div class="line"><a name="l02510"></a><span class="lineno"> 2510</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>;</div><div class="line"><a name="l02511"></a><span class="lineno"> 2511</span>&#160;}</div><div class="line"><a name="l02512"></a><span class="lineno"> 2512</span>&#160;</div><div class="line"><a name="l02523"></a><span class="lineno"> 2523</span>&#160;<span class="keyword">function</span> applyStyleOnLoad(reference, popper, options, modifierOptions, state) {</div><div class="line"><a name="l02524"></a><span class="lineno"> 2524</span>&#160;  <span class="comment">// compute reference element offsets</span></div><div class="line"><a name="l02525"></a><span class="lineno"> 2525</span>&#160;  var referenceOffsets = getReferenceOffsets(state, popper, reference);</div><div class="line"><a name="l02526"></a><span class="lineno"> 2526</span>&#160;</div><div class="line"><a name="l02527"></a><span class="lineno"> 2527</span>&#160;  <span class="comment">// compute auto placement, store placement inside the data object,</span></div><div class="line"><a name="l02528"></a><span class="lineno"> 2528</span>&#160;  <span class="comment">// modifiers will be able to edit `placement` if needed</span></div><div class="line"><a name="l02529"></a><span class="lineno"> 2529</span>&#160;  <span class="comment">// and refer to originalPlacement to know the original value</span></div><div class="line"><a name="l02530"></a><span class="lineno"> 2530</span>&#160;  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);</div><div class="line"><a name="l02531"></a><span class="lineno"> 2531</span>&#160;</div><div class="line"><a name="l02532"></a><span class="lineno"> 2532</span>&#160;  popper.setAttribute(<span class="stringliteral">&#39;x-placement&#39;</span>, placement);</div><div class="line"><a name="l02533"></a><span class="lineno"> 2533</span>&#160;</div><div class="line"><a name="l02534"></a><span class="lineno"> 2534</span>&#160;  <span class="comment">// Apply `position` to popper before anything else because</span></div><div class="line"><a name="l02535"></a><span class="lineno"> 2535</span>&#160;  <span class="comment">// without the position applied we can&#39;t guarantee correct computations</span></div><div class="line"><a name="l02536"></a><span class="lineno"> 2536</span>&#160;  setStyles(popper, { position: <span class="stringliteral">&#39;absolute&#39;</span> });</div><div class="line"><a name="l02537"></a><span class="lineno"> 2537</span>&#160;</div><div class="line"><a name="l02538"></a><span class="lineno"> 2538</span>&#160;  <span class="keywordflow">return</span> options;</div><div class="line"><a name="l02539"></a><span class="lineno"> 2539</span>&#160;}</div><div class="line"><a name="l02540"></a><span class="lineno"> 2540</span>&#160;</div><div class="line"><a name="l02548"></a><span class="lineno"> 2548</span>&#160;<span class="keyword">function</span> computeStyle(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>, options) {</div><div class="line"><a name="l02549"></a><span class="lineno"> 2549</span>&#160;  var <a class="code" href="../../de/d11/a00021.php#a81e910173af87b1161e719a504d52407">x</a> = options.x,</div><div class="line"><a name="l02550"></a><span class="lineno"> 2550</span>&#160;      <a class="code" href="../../de/d11/a00021.php#a0b31909b1cae9ed1db6ff042057fce60">y</a> = options.y;</div><div class="line"><a name="l02551"></a><span class="lineno"> 2551</span>&#160;  var popper = <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets.popper;</div><div class="line"><a name="l02552"></a><span class="lineno"> 2552</span>&#160;</div><div class="line"><a name="l02553"></a><span class="lineno"> 2553</span>&#160;  <span class="comment">// Remove this legacy support in Popper.js v2</span></div><div class="line"><a name="l02554"></a><span class="lineno"> 2554</span>&#160;</div><div class="line"><a name="l02555"></a><span class="lineno"> 2555</span>&#160;  var legacyGpuAccelerationOption = find(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.instance.modifiers, function (modifier) {</div><div class="line"><a name="l02556"></a><span class="lineno"> 2556</span>&#160;    <span class="keywordflow">return</span> modifier.name === <span class="stringliteral">&#39;applyStyle&#39;</span>;</div><div class="line"><a name="l02557"></a><span class="lineno"> 2557</span>&#160;  }).gpuAcceleration;</div><div class="line"><a name="l02558"></a><span class="lineno"> 2558</span>&#160;  <span class="keywordflow">if</span> (legacyGpuAccelerationOption !== <a class="code" href="../../d3/dea/a00046.php#ae21cc36bf0d65014c717a481a3f8a468">undefined</a>) {</div><div class="line"><a name="l02559"></a><span class="lineno"> 2559</span>&#160;    console.warn(<span class="stringliteral">&#39;WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!&#39;</span>);</div><div class="line"><a name="l02560"></a><span class="lineno"> 2560</span>&#160;  }</div><div class="line"><a name="l02561"></a><span class="lineno"> 2561</span>&#160;  var gpuAcceleration = legacyGpuAccelerationOption !== <a class="code" href="../../d3/dea/a00046.php#ae21cc36bf0d65014c717a481a3f8a468">undefined</a> ? legacyGpuAccelerationOption : options.gpuAcceleration;</div><div class="line"><a name="l02562"></a><span class="lineno"> 2562</span>&#160;</div><div class="line"><a name="l02563"></a><span class="lineno"> 2563</span>&#160;  var offsetParent = getOffsetParent(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.instance.popper);</div><div class="line"><a name="l02564"></a><span class="lineno"> 2564</span>&#160;  var offsetParentRect = getBoundingClientRect(offsetParent);</div><div class="line"><a name="l02565"></a><span class="lineno"> 2565</span>&#160;</div><div class="line"><a name="l02566"></a><span class="lineno"> 2566</span>&#160;  <span class="comment">// Styles</span></div><div class="line"><a name="l02567"></a><span class="lineno"> 2567</span>&#160;  var styles = {</div><div class="line"><a name="l02568"></a><span class="lineno"> 2568</span>&#160;    position: popper.position</div><div class="line"><a name="l02569"></a><span class="lineno"> 2569</span>&#160;  };</div><div class="line"><a name="l02570"></a><span class="lineno"> 2570</span>&#160;</div><div class="line"><a name="l02571"></a><span class="lineno"> 2571</span>&#160;  <span class="comment">// floor sides to avoid blurry text</span></div><div class="line"><a name="l02572"></a><span class="lineno"> 2572</span>&#160;  var offsets = {</div><div class="line"><a name="l02573"></a><span class="lineno"> 2573</span>&#160;    left: Math.floor(popper.left),</div><div class="line"><a name="l02574"></a><span class="lineno"> 2574</span>&#160;    top: Math.floor(popper.top),</div><div class="line"><a name="l02575"></a><span class="lineno"> 2575</span>&#160;    bottom: Math.floor(popper.bottom),</div><div class="line"><a name="l02576"></a><span class="lineno"> 2576</span>&#160;    right: Math.floor(popper.right)</div><div class="line"><a name="l02577"></a><span class="lineno"> 2577</span>&#160;  };</div><div class="line"><a name="l02578"></a><span class="lineno"> 2578</span>&#160;</div><div class="line"><a name="l02579"></a><span class="lineno"> 2579</span>&#160;  var sideA = x === <span class="stringliteral">&#39;bottom&#39;</span> ? <span class="stringliteral">&#39;top&#39;</span> : <span class="stringliteral">&#39;bottom&#39;</span>;</div><div class="line"><a name="l02580"></a><span class="lineno"> 2580</span>&#160;  var sideB = <a class="code" href="../../de/d11/a00021.php#a0b31909b1cae9ed1db6ff042057fce60">y</a> === <span class="stringliteral">&#39;right&#39;</span> ? <span class="stringliteral">&#39;left&#39;</span> : <span class="stringliteral">&#39;right&#39;</span>;</div><div class="line"><a name="l02581"></a><span class="lineno"> 2581</span>&#160;</div><div class="line"><a name="l02582"></a><span class="lineno"> 2582</span>&#160;  <span class="comment">// if gpuAcceleration is set to `true` and transform is supported,</span></div><div class="line"><a name="l02583"></a><span class="lineno"> 2583</span>&#160;  <span class="comment">//  we use `translate3d` to apply the position to the popper we</span></div><div class="line"><a name="l02584"></a><span class="lineno"> 2584</span>&#160;  <span class="comment">// automatically use the supported prefixed version if needed</span></div><div class="line"><a name="l02585"></a><span class="lineno"> 2585</span>&#160;  var prefixedProperty = getSupportedPropertyName(<span class="stringliteral">&#39;transform&#39;</span>);</div><div class="line"><a name="l02586"></a><span class="lineno"> 2586</span>&#160;</div><div class="line"><a name="l02587"></a><span class="lineno"> 2587</span>&#160;  <span class="comment">// now, let&#39;s make a step back and look at this code closely (wtf?)</span></div><div class="line"><a name="l02588"></a><span class="lineno"> 2588</span>&#160;  <span class="comment">// If the content of the popper grows once it&#39;s been positioned, it</span></div><div class="line"><a name="l02589"></a><span class="lineno"> 2589</span>&#160;  <span class="comment">// may happen that the popper gets misplaced because of the new content</span></div><div class="line"><a name="l02590"></a><span class="lineno"> 2590</span>&#160;  <span class="comment">// overflowing its reference element</span></div><div class="line"><a name="l02591"></a><span class="lineno"> 2591</span>&#160;  <span class="comment">// To avoid this problem, we provide two options (x and y), which allow</span></div><div class="line"><a name="l02592"></a><span class="lineno"> 2592</span>&#160;  <span class="comment">// the consumer to define the offset origin.</span></div><div class="line"><a name="l02593"></a><span class="lineno"> 2593</span>&#160;  <span class="comment">// If we position a popper on top of a reference element, we can set</span></div><div class="line"><a name="l02594"></a><span class="lineno"> 2594</span>&#160;  <span class="comment">// `x` to `top` to make the popper grow towards its top instead of</span></div><div class="line"><a name="l02595"></a><span class="lineno"> 2595</span>&#160;  <span class="comment">// its bottom.</span></div><div class="line"><a name="l02596"></a><span class="lineno"> 2596</span>&#160;  var left = <span class="keywordtype">void</span> 0,</div><div class="line"><a name="l02597"></a><span class="lineno"> 2597</span>&#160;      top = <span class="keywordtype">void</span> 0;</div><div class="line"><a name="l02598"></a><span class="lineno"> 2598</span>&#160;  <span class="keywordflow">if</span> (sideA === <span class="stringliteral">&#39;bottom&#39;</span>) {</div><div class="line"><a name="l02599"></a><span class="lineno"> 2599</span>&#160;    top = -offsetParentRect.height + offsets.bottom;</div><div class="line"><a name="l02600"></a><span class="lineno"> 2600</span>&#160;  } <span class="keywordflow">else</span> {</div><div class="line"><a name="l02601"></a><span class="lineno"> 2601</span>&#160;    top = offsets.top;</div><div class="line"><a name="l02602"></a><span class="lineno"> 2602</span>&#160;  }</div><div class="line"><a name="l02603"></a><span class="lineno"> 2603</span>&#160;  <span class="keywordflow">if</span> (sideB === <span class="stringliteral">&#39;right&#39;</span>) {</div><div class="line"><a name="l02604"></a><span class="lineno"> 2604</span>&#160;    left = -offsetParentRect.width + offsets.right;</div><div class="line"><a name="l02605"></a><span class="lineno"> 2605</span>&#160;  } <span class="keywordflow">else</span> {</div><div class="line"><a name="l02606"></a><span class="lineno"> 2606</span>&#160;    left = offsets.left;</div><div class="line"><a name="l02607"></a><span class="lineno"> 2607</span>&#160;  }</div><div class="line"><a name="l02608"></a><span class="lineno"> 2608</span>&#160;  <span class="keywordflow">if</span> (gpuAcceleration &amp;&amp; prefixedProperty) {</div><div class="line"><a name="l02609"></a><span class="lineno"> 2609</span>&#160;    styles[prefixedProperty] = <span class="stringliteral">&#39;translate3d(&#39;</span> + left + <span class="stringliteral">&#39;px, &#39;</span> + top + <span class="stringliteral">&#39;px, 0)&#39;</span>;</div><div class="line"><a name="l02610"></a><span class="lineno"> 2610</span>&#160;    styles[sideA] = 0;</div><div class="line"><a name="l02611"></a><span class="lineno"> 2611</span>&#160;    styles[sideB] = 0;</div><div class="line"><a name="l02612"></a><span class="lineno"> 2612</span>&#160;    styles.willChange = <span class="stringliteral">&#39;transform&#39;</span>;</div><div class="line"><a name="l02613"></a><span class="lineno"> 2613</span>&#160;  } <span class="keywordflow">else</span> {</div><div class="line"><a name="l02614"></a><span class="lineno"> 2614</span>&#160;    <span class="comment">// othwerise, we use the standard `top`, `left`, `bottom` and `right` properties</span></div><div class="line"><a name="l02615"></a><span class="lineno"> 2615</span>&#160;    var invertTop = sideA === <span class="stringliteral">&#39;bottom&#39;</span> ? -1 : 1;</div><div class="line"><a name="l02616"></a><span class="lineno"> 2616</span>&#160;    var invertLeft = sideB === <span class="stringliteral">&#39;right&#39;</span> ? -1 : 1;</div><div class="line"><a name="l02617"></a><span class="lineno"> 2617</span>&#160;    styles[sideA] = top * invertTop;</div><div class="line"><a name="l02618"></a><span class="lineno"> 2618</span>&#160;    styles[sideB] = left * invertLeft;</div><div class="line"><a name="l02619"></a><span class="lineno"> 2619</span>&#160;    styles.willChange = sideA + <span class="stringliteral">&#39;, &#39;</span> + sideB;</div><div class="line"><a name="l02620"></a><span class="lineno"> 2620</span>&#160;  }</div><div class="line"><a name="l02621"></a><span class="lineno"> 2621</span>&#160;</div><div class="line"><a name="l02622"></a><span class="lineno"> 2622</span>&#160;  <span class="comment">// Attributes</span></div><div class="line"><a name="l02623"></a><span class="lineno"> 2623</span>&#160;  var attributes = {</div><div class="line"><a name="l02624"></a><span class="lineno"> 2624</span>&#160;    <span class="stringliteral">&#39;x-placement&#39;</span>: <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.placement</div><div class="line"><a name="l02625"></a><span class="lineno"> 2625</span>&#160;  };</div><div class="line"><a name="l02626"></a><span class="lineno"> 2626</span>&#160;</div><div class="line"><a name="l02627"></a><span class="lineno"> 2627</span>&#160;  <span class="comment">// Update `data` attributes, styles and arrowStyles</span></div><div class="line"><a name="l02628"></a><span class="lineno"> 2628</span>&#160;  <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.attributes = _extends$1({}, attributes, <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.attributes);</div><div class="line"><a name="l02629"></a><span class="lineno"> 2629</span>&#160;  <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.styles = _extends$1({}, styles, <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.styles);</div><div class="line"><a name="l02630"></a><span class="lineno"> 2630</span>&#160;  <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.arrowStyles = _extends$1({}, <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets.arrow, <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.arrowStyles);</div><div class="line"><a name="l02631"></a><span class="lineno"> 2631</span>&#160;</div><div class="line"><a name="l02632"></a><span class="lineno"> 2632</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>;</div><div class="line"><a name="l02633"></a><span class="lineno"> 2633</span>&#160;}</div><div class="line"><a name="l02634"></a><span class="lineno"> 2634</span>&#160;</div><div class="line"><a name="l02645"></a><span class="lineno"> 2645</span>&#160;<span class="keyword">function</span> isModifierRequired(<a class="code" href="../../d4/d31/a00069.php">modifiers</a>, requestingName, requestedName) {</div><div class="line"><a name="l02646"></a><span class="lineno"> 2646</span>&#160;  var requesting = find(<a class="code" href="../../d4/d31/a00069.php">modifiers</a>, <span class="keyword">function</span> (_ref) {</div><div class="line"><a name="l02647"></a><span class="lineno"> 2647</span>&#160;    var name = _ref.name;</div><div class="line"><a name="l02648"></a><span class="lineno"> 2648</span>&#160;    <span class="keywordflow">return</span> name === requestingName;</div><div class="line"><a name="l02649"></a><span class="lineno"> 2649</span>&#160;  });</div><div class="line"><a name="l02650"></a><span class="lineno"> 2650</span>&#160;</div><div class="line"><a name="l02651"></a><span class="lineno"> 2651</span>&#160;  var isRequired = !!requesting &amp;&amp; <a class="code" href="../../d4/d31/a00069.php">modifiers</a>.some(<span class="keyword">function</span> (modifier) {</div><div class="line"><a name="l02652"></a><span class="lineno"> 2652</span>&#160;    <span class="keywordflow">return</span> modifier.name === requestedName &amp;&amp; modifier.enabled &amp;&amp; modifier.order &lt; requesting.order;</div><div class="line"><a name="l02653"></a><span class="lineno"> 2653</span>&#160;  });</div><div class="line"><a name="l02654"></a><span class="lineno"> 2654</span>&#160;</div><div class="line"><a name="l02655"></a><span class="lineno"> 2655</span>&#160;  <span class="keywordflow">if</span> (!isRequired) {</div><div class="line"><a name="l02656"></a><span class="lineno"> 2656</span>&#160;    var _requesting = <span class="charliteral">&#39;`&#39;</span> + requestingName + <span class="charliteral">&#39;`&#39;</span>;</div><div class="line"><a name="l02657"></a><span class="lineno"> 2657</span>&#160;    var requested = <span class="charliteral">&#39;`&#39;</span> + requestedName + <span class="charliteral">&#39;`&#39;</span>;</div><div class="line"><a name="l02658"></a><span class="lineno"> 2658</span>&#160;    console.warn(requested + <span class="stringliteral">&#39; modifier is required by &#39;</span> + _requesting + <span class="stringliteral">&#39; modifier in order to work, be sure to include it before &#39;</span> + _requesting + <span class="charliteral">&#39;!&#39;</span>);</div><div class="line"><a name="l02659"></a><span class="lineno"> 2659</span>&#160;  }</div><div class="line"><a name="l02660"></a><span class="lineno"> 2660</span>&#160;  <span class="keywordflow">return</span> isRequired;</div><div class="line"><a name="l02661"></a><span class="lineno"> 2661</span>&#160;}</div><div class="line"><a name="l02662"></a><span class="lineno"> 2662</span>&#160;</div><div class="line"><a name="l02670"></a><span class="lineno"> 2670</span>&#160;<span class="keyword">function</span> arrow(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>, options) {</div><div class="line"><a name="l02671"></a><span class="lineno"> 2671</span>&#160;  var _data$offsets$arrow;</div><div class="line"><a name="l02672"></a><span class="lineno"> 2672</span>&#160;</div><div class="line"><a name="l02673"></a><span class="lineno"> 2673</span>&#160;  <span class="comment">// arrow depends on keepTogether in order to work</span></div><div class="line"><a name="l02674"></a><span class="lineno"> 2674</span>&#160;  <span class="keywordflow">if</span> (!isModifierRequired(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.instance.modifiers, <span class="stringliteral">&#39;arrow&#39;</span>, <span class="stringliteral">&#39;keepTogether&#39;</span>)) {</div><div class="line"><a name="l02675"></a><span class="lineno"> 2675</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>;</div><div class="line"><a name="l02676"></a><span class="lineno"> 2676</span>&#160;  }</div><div class="line"><a name="l02677"></a><span class="lineno"> 2677</span>&#160;</div><div class="line"><a name="l02678"></a><span class="lineno"> 2678</span>&#160;  var arrowElement = options.element;</div><div class="line"><a name="l02679"></a><span class="lineno"> 2679</span>&#160;</div><div class="line"><a name="l02680"></a><span class="lineno"> 2680</span>&#160;  <span class="comment">// if arrowElement is a string, suppose it&#39;s a CSS selector</span></div><div class="line"><a name="l02681"></a><span class="lineno"> 2681</span>&#160;  <span class="keywordflow">if</span> (typeof arrowElement === <span class="stringliteral">&#39;string&#39;</span>) {</div><div class="line"><a name="l02682"></a><span class="lineno"> 2682</span>&#160;    arrowElement = <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.instance.popper.querySelector(arrowElement);</div><div class="line"><a name="l02683"></a><span class="lineno"> 2683</span>&#160;</div><div class="line"><a name="l02684"></a><span class="lineno"> 2684</span>&#160;    <span class="comment">// if arrowElement is not found, don&#39;t run the modifier</span></div><div class="line"><a name="l02685"></a><span class="lineno"> 2685</span>&#160;    <span class="keywordflow">if</span> (!arrowElement) {</div><div class="line"><a name="l02686"></a><span class="lineno"> 2686</span>&#160;      <span class="keywordflow">return</span> <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>;</div><div class="line"><a name="l02687"></a><span class="lineno"> 2687</span>&#160;    }</div><div class="line"><a name="l02688"></a><span class="lineno"> 2688</span>&#160;  } <span class="keywordflow">else</span> {</div><div class="line"><a name="l02689"></a><span class="lineno"> 2689</span>&#160;    <span class="comment">// if the arrowElement isn&#39;t a query selector we must check that the</span></div><div class="line"><a name="l02690"></a><span class="lineno"> 2690</span>&#160;    <span class="comment">// provided DOM node is child of its popper node</span></div><div class="line"><a name="l02691"></a><span class="lineno"> 2691</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.instance.popper.contains(arrowElement)) {</div><div class="line"><a name="l02692"></a><span class="lineno"> 2692</span>&#160;      console.warn(<span class="stringliteral">&#39;WARNING: `arrow.element` must be child of its popper element!&#39;</span>);</div><div class="line"><a name="l02693"></a><span class="lineno"> 2693</span>&#160;      <span class="keywordflow">return</span> <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>;</div><div class="line"><a name="l02694"></a><span class="lineno"> 2694</span>&#160;    }</div><div class="line"><a name="l02695"></a><span class="lineno"> 2695</span>&#160;  }</div><div class="line"><a name="l02696"></a><span class="lineno"> 2696</span>&#160;</div><div class="line"><a name="l02697"></a><span class="lineno"> 2697</span>&#160;  var placement = <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.placement.split(<span class="charliteral">&#39;-&#39;</span>)[0];</div><div class="line"><a name="l02698"></a><span class="lineno"> 2698</span>&#160;  var _data$offsets = <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets,</div><div class="line"><a name="l02699"></a><span class="lineno"> 2699</span>&#160;      popper = _data$offsets.popper,</div><div class="line"><a name="l02700"></a><span class="lineno"> 2700</span>&#160;      reference = _data$offsets.reference;</div><div class="line"><a name="l02701"></a><span class="lineno"> 2701</span>&#160;</div><div class="line"><a name="l02702"></a><span class="lineno"> 2702</span>&#160;  var isVertical = [<span class="stringliteral">&#39;left&#39;</span>, <span class="stringliteral">&#39;right&#39;</span>].indexOf(placement) !== -1;</div><div class="line"><a name="l02703"></a><span class="lineno"> 2703</span>&#160;</div><div class="line"><a name="l02704"></a><span class="lineno"> 2704</span>&#160;  var len = isVertical ? <span class="stringliteral">&#39;height&#39;</span> : <span class="stringliteral">&#39;width&#39;</span>;</div><div class="line"><a name="l02705"></a><span class="lineno"> 2705</span>&#160;  var sideCapitalized = isVertical ? <span class="stringliteral">&#39;Top&#39;</span> : <span class="stringliteral">&#39;Left&#39;</span>;</div><div class="line"><a name="l02706"></a><span class="lineno"> 2706</span>&#160;  var side = sideCapitalized.toLowerCase();</div><div class="line"><a name="l02707"></a><span class="lineno"> 2707</span>&#160;  var altSide = isVertical ? <span class="stringliteral">&#39;left&#39;</span> : <span class="stringliteral">&#39;top&#39;</span>;</div><div class="line"><a name="l02708"></a><span class="lineno"> 2708</span>&#160;  var opSide = isVertical ? <span class="stringliteral">&#39;bottom&#39;</span> : <span class="stringliteral">&#39;right&#39;</span>;</div><div class="line"><a name="l02709"></a><span class="lineno"> 2709</span>&#160;  var arrowElementSize = getOuterSizes(arrowElement)[len];</div><div class="line"><a name="l02710"></a><span class="lineno"> 2710</span>&#160;</div><div class="line"><a name="l02711"></a><span class="lineno"> 2711</span>&#160;  <span class="comment">//</span></div><div class="line"><a name="l02712"></a><span class="lineno"> 2712</span>&#160;  <span class="comment">// extends keepTogether behavior making sure the popper and its</span></div><div class="line"><a name="l02713"></a><span class="lineno"> 2713</span>&#160;  <span class="comment">// reference have enough pixels in conjuction</span></div><div class="line"><a name="l02714"></a><span class="lineno"> 2714</span>&#160;  <span class="comment">//</span></div><div class="line"><a name="l02715"></a><span class="lineno"> 2715</span>&#160;</div><div class="line"><a name="l02716"></a><span class="lineno"> 2716</span>&#160;  <span class="comment">// top/left side</span></div><div class="line"><a name="l02717"></a><span class="lineno"> 2717</span>&#160;  <span class="keywordflow">if</span> (reference[opSide] - arrowElementSize &lt; popper[side]) {</div><div class="line"><a name="l02718"></a><span class="lineno"> 2718</span>&#160;    <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);</div><div class="line"><a name="l02719"></a><span class="lineno"> 2719</span>&#160;  }</div><div class="line"><a name="l02720"></a><span class="lineno"> 2720</span>&#160;  <span class="comment">// bottom/right side</span></div><div class="line"><a name="l02721"></a><span class="lineno"> 2721</span>&#160;  <span class="keywordflow">if</span> (reference[side] + arrowElementSize &gt; popper[opSide]) {</div><div class="line"><a name="l02722"></a><span class="lineno"> 2722</span>&#160;    <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];</div><div class="line"><a name="l02723"></a><span class="lineno"> 2723</span>&#160;  }</div><div class="line"><a name="l02724"></a><span class="lineno"> 2724</span>&#160;  <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets.popper = getClientRect(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets.popper);</div><div class="line"><a name="l02725"></a><span class="lineno"> 2725</span>&#160;</div><div class="line"><a name="l02726"></a><span class="lineno"> 2726</span>&#160;  <span class="comment">// compute center of the popper</span></div><div class="line"><a name="l02727"></a><span class="lineno"> 2727</span>&#160;  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;</div><div class="line"><a name="l02728"></a><span class="lineno"> 2728</span>&#160;</div><div class="line"><a name="l02729"></a><span class="lineno"> 2729</span>&#160;  <span class="comment">// Compute the sideValue using the updated popper offsets</span></div><div class="line"><a name="l02730"></a><span class="lineno"> 2730</span>&#160;  <span class="comment">// take popper margin in account because we don&#39;t have this info available</span></div><div class="line"><a name="l02731"></a><span class="lineno"> 2731</span>&#160;  var css = getStyleComputedProperty(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.instance.popper);</div><div class="line"><a name="l02732"></a><span class="lineno"> 2732</span>&#160;  var popperMarginSide = parseFloat(css[<span class="stringliteral">&#39;margin&#39;</span> + sideCapitalized], 10);</div><div class="line"><a name="l02733"></a><span class="lineno"> 2733</span>&#160;  var popperBorderSide = parseFloat(css[<span class="stringliteral">&#39;border&#39;</span> + sideCapitalized + <span class="stringliteral">&#39;Width&#39;</span>], 10);</div><div class="line"><a name="l02734"></a><span class="lineno"> 2734</span>&#160;  var sideValue = center - <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets.popper[side] - popperMarginSide - popperBorderSide;</div><div class="line"><a name="l02735"></a><span class="lineno"> 2735</span>&#160;</div><div class="line"><a name="l02736"></a><span class="lineno"> 2736</span>&#160;  <span class="comment">// prevent arrowElement from being placed not contiguously to its popper</span></div><div class="line"><a name="l02737"></a><span class="lineno"> 2737</span>&#160;  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);</div><div class="line"><a name="l02738"></a><span class="lineno"> 2738</span>&#160;</div><div class="line"><a name="l02739"></a><span class="lineno"> 2739</span>&#160;  <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.arrowElement = arrowElement;</div><div class="line"><a name="l02740"></a><span class="lineno"> 2740</span>&#160;  <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets.arrow = (_data$offsets$arrow = {}, <a class="code" href="../../d4/d51/a00017.php#a817fcb70b363027b28fec000da90139a">defineProperty</a>(_data$offsets$arrow, side, Math.round(sideValue)), <a class="code" href="../../d4/d51/a00017.php#a817fcb70b363027b28fec000da90139a">defineProperty</a>(_data$offsets$arrow, altSide, <span class="stringliteral">&#39;&#39;</span>), _data$offsets$arrow);</div><div class="line"><a name="l02741"></a><span class="lineno"> 2741</span>&#160;</div><div class="line"><a name="l02742"></a><span class="lineno"> 2742</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>;</div><div class="line"><a name="l02743"></a><span class="lineno"> 2743</span>&#160;}</div><div class="line"><a name="l02744"></a><span class="lineno"> 2744</span>&#160;</div><div class="line"><a name="l02752"></a><span class="lineno"> 2752</span>&#160;<span class="keyword">function</span> getOppositeVariation(variation) {</div><div class="line"><a name="l02753"></a><span class="lineno"> 2753</span>&#160;  <span class="keywordflow">if</span> (variation === <span class="stringliteral">&#39;end&#39;</span>) {</div><div class="line"><a name="l02754"></a><span class="lineno"> 2754</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;start&#39;</span>;</div><div class="line"><a name="l02755"></a><span class="lineno"> 2755</span>&#160;  } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (variation === <span class="stringliteral">&#39;start&#39;</span>) {</div><div class="line"><a name="l02756"></a><span class="lineno"> 2756</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;end&#39;</span>;</div><div class="line"><a name="l02757"></a><span class="lineno"> 2757</span>&#160;  }</div><div class="line"><a name="l02758"></a><span class="lineno"> 2758</span>&#160;  <span class="keywordflow">return</span> variation;</div><div class="line"><a name="l02759"></a><span class="lineno"> 2759</span>&#160;}</div><div class="line"><a name="l02760"></a><span class="lineno"> 2760</span>&#160;</div><div class="line"><a name="l02792"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a0e37ae01d446a8be7bf004a86805ffa6"> 2792</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#a0e37ae01d446a8be7bf004a86805ffa6">placements</a> = [<span class="stringliteral">&#39;auto-start&#39;</span>, <span class="stringliteral">&#39;auto&#39;</span>, <span class="stringliteral">&#39;auto-end&#39;</span>, <span class="stringliteral">&#39;top-start&#39;</span>, <span class="stringliteral">&#39;top&#39;</span>, <span class="stringliteral">&#39;top-end&#39;</span>, <span class="stringliteral">&#39;right-start&#39;</span>, <span class="stringliteral">&#39;right&#39;</span>, <span class="stringliteral">&#39;right-end&#39;</span>, <span class="stringliteral">&#39;bottom-end&#39;</span>, <span class="stringliteral">&#39;bottom&#39;</span>, <span class="stringliteral">&#39;bottom-start&#39;</span>, <span class="stringliteral">&#39;left-end&#39;</span>, <span class="stringliteral">&#39;left&#39;</span>, <span class="stringliteral">&#39;left-start&#39;</span>];</div><div class="line"><a name="l02793"></a><span class="lineno"> 2793</span>&#160;</div><div class="line"><a name="l02794"></a><span class="lineno"> 2794</span>&#160;<span class="comment">// Get rid of `auto` `auto-start` and `auto-end`</span></div><div class="line"><a name="l02795"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a4ccf3b6984f59af0bfb81b608fd51477"> 2795</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#a4ccf3b6984f59af0bfb81b608fd51477">validPlacements</a> = placements.slice(3);</div><div class="line"><a name="l02796"></a><span class="lineno"> 2796</span>&#160;</div><div class="line"><a name="l02807"></a><span class="lineno"> 2807</span>&#160;<span class="keyword">function</span> clockwise(placement) {</div><div class="line"><a name="l02808"></a><span class="lineno"> 2808</span>&#160;  var counter = arguments.length &gt; 1 &amp;&amp; arguments[1] !== <a class="code" href="../../d3/dea/a00046.php#ae21cc36bf0d65014c717a481a3f8a468">undefined</a> ? arguments[1] : <span class="keyword">false</span>;</div><div class="line"><a name="l02809"></a><span class="lineno"> 2809</span>&#160;</div><div class="line"><a name="l02810"></a><span class="lineno"> 2810</span>&#160;  var index = validPlacements.indexOf(placement);</div><div class="line"><a name="l02811"></a><span class="lineno"> 2811</span>&#160;  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));</div><div class="line"><a name="l02812"></a><span class="lineno"> 2812</span>&#160;  <span class="keywordflow">return</span> counter ? arr.reverse() : arr;</div><div class="line"><a name="l02813"></a><span class="lineno"> 2813</span>&#160;}</div><div class="line"><a name="l02814"></a><span class="lineno"> 2814</span>&#160;</div><div class="line"><a name="l02815"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#aec6c1ccd0838ded5f3b5e2ce3196d4db"> 2815</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#aec6c1ccd0838ded5f3b5e2ce3196d4db">BEHAVIORS</a> = {</div><div class="line"><a name="l02816"></a><span class="lineno"> 2816</span>&#160;  FLIP: <span class="stringliteral">&#39;flip&#39;</span>,</div><div class="line"><a name="l02817"></a><span class="lineno"> 2817</span>&#160;  CLOCKWISE: <span class="stringliteral">&#39;clockwise&#39;</span>,</div><div class="line"><a name="l02818"></a><span class="lineno"> 2818</span>&#160;  COUNTERCLOCKWISE: <span class="stringliteral">&#39;counterclockwise&#39;</span></div><div class="line"><a name="l02819"></a><span class="lineno"> 2819</span>&#160;};</div><div class="line"><a name="l02820"></a><span class="lineno"> 2820</span>&#160;</div><div class="line"><a name="l02828"></a><span class="lineno"> 2828</span>&#160;<span class="keyword">function</span> flip(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>, options) {</div><div class="line"><a name="l02829"></a><span class="lineno"> 2829</span>&#160;  <span class="comment">// if `inner` modifier is enabled, we can&#39;t use the `flip` modifier</span></div><div class="line"><a name="l02830"></a><span class="lineno"> 2830</span>&#160;  <span class="keywordflow">if</span> (isModifierEnabled(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.instance.modifiers, <span class="stringliteral">&#39;inner&#39;</span>)) {</div><div class="line"><a name="l02831"></a><span class="lineno"> 2831</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>;</div><div class="line"><a name="l02832"></a><span class="lineno"> 2832</span>&#160;  }</div><div class="line"><a name="l02833"></a><span class="lineno"> 2833</span>&#160;</div><div class="line"><a name="l02834"></a><span class="lineno"> 2834</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.flipped &amp;&amp; <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.placement === <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.originalPlacement) {</div><div class="line"><a name="l02835"></a><span class="lineno"> 2835</span>&#160;    <span class="comment">// seems like flip is trying to loop, probably there&#39;s not enough space on any of the flippable sides</span></div><div class="line"><a name="l02836"></a><span class="lineno"> 2836</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>;</div><div class="line"><a name="l02837"></a><span class="lineno"> 2837</span>&#160;  }</div><div class="line"><a name="l02838"></a><span class="lineno"> 2838</span>&#160;</div><div class="line"><a name="l02839"></a><span class="lineno"> 2839</span>&#160;  var boundaries = getBoundaries(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.instance.popper, <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.instance.reference, options.padding, options.boundariesElement);</div><div class="line"><a name="l02840"></a><span class="lineno"> 2840</span>&#160;</div><div class="line"><a name="l02841"></a><span class="lineno"> 2841</span>&#160;  var placement = <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.placement.split(<span class="charliteral">&#39;-&#39;</span>)[0];</div><div class="line"><a name="l02842"></a><span class="lineno"> 2842</span>&#160;  var placementOpposite = getOppositePlacement(placement);</div><div class="line"><a name="l02843"></a><span class="lineno"> 2843</span>&#160;  var variation = <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.placement.split(<span class="charliteral">&#39;-&#39;</span>)[1] || <span class="stringliteral">&#39;&#39;</span>;</div><div class="line"><a name="l02844"></a><span class="lineno"> 2844</span>&#160;</div><div class="line"><a name="l02845"></a><span class="lineno"> 2845</span>&#160;  var flipOrder = [];</div><div class="line"><a name="l02846"></a><span class="lineno"> 2846</span>&#160;</div><div class="line"><a name="l02847"></a><span class="lineno"> 2847</span>&#160;  <span class="keywordflow">switch</span> (options.behavior) {</div><div class="line"><a name="l02848"></a><span class="lineno"> 2848</span>&#160;    <span class="keywordflow">case</span> BEHAVIORS.FLIP:</div><div class="line"><a name="l02849"></a><span class="lineno"> 2849</span>&#160;      flipOrder = [placement, placementOpposite];</div><div class="line"><a name="l02850"></a><span class="lineno"> 2850</span>&#160;      <span class="keywordflow">break</span>;</div><div class="line"><a name="l02851"></a><span class="lineno"> 2851</span>&#160;    <span class="keywordflow">case</span> BEHAVIORS.CLOCKWISE:</div><div class="line"><a name="l02852"></a><span class="lineno"> 2852</span>&#160;      flipOrder = clockwise(placement);</div><div class="line"><a name="l02853"></a><span class="lineno"> 2853</span>&#160;      <span class="keywordflow">break</span>;</div><div class="line"><a name="l02854"></a><span class="lineno"> 2854</span>&#160;    <span class="keywordflow">case</span> BEHAVIORS.COUNTERCLOCKWISE:</div><div class="line"><a name="l02855"></a><span class="lineno"> 2855</span>&#160;      flipOrder = clockwise(placement, <span class="keyword">true</span>);</div><div class="line"><a name="l02856"></a><span class="lineno"> 2856</span>&#160;      <span class="keywordflow">break</span>;</div><div class="line"><a name="l02857"></a><span class="lineno"> 2857</span>&#160;    <span class="keywordflow">default</span>:</div><div class="line"><a name="l02858"></a><span class="lineno"> 2858</span>&#160;      flipOrder = options.behavior;</div><div class="line"><a name="l02859"></a><span class="lineno"> 2859</span>&#160;  }</div><div class="line"><a name="l02860"></a><span class="lineno"> 2860</span>&#160;</div><div class="line"><a name="l02861"></a><span class="lineno"> 2861</span>&#160;  flipOrder.forEach(<span class="keyword">function</span> (step, index) {</div><div class="line"><a name="l02862"></a><span class="lineno"> 2862</span>&#160;    <span class="keywordflow">if</span> (placement !== step || flipOrder.length === index + 1) {</div><div class="line"><a name="l02863"></a><span class="lineno"> 2863</span>&#160;      return data;</div><div class="line"><a name="l02864"></a><span class="lineno"> 2864</span>&#160;    }</div><div class="line"><a name="l02865"></a><span class="lineno"> 2865</span>&#160;</div><div class="line"><a name="l02866"></a><span class="lineno"> 2866</span>&#160;    placement = <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.placement.split(<span class="charliteral">&#39;-&#39;</span>)[0];</div><div class="line"><a name="l02867"></a><span class="lineno"> 2867</span>&#160;    placementOpposite = getOppositePlacement(placement);</div><div class="line"><a name="l02868"></a><span class="lineno"> 2868</span>&#160;</div><div class="line"><a name="l02869"></a><span class="lineno"> 2869</span>&#160;    var popperOffsets = <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets.popper;</div><div class="line"><a name="l02870"></a><span class="lineno"> 2870</span>&#160;    var refOffsets = <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets.reference;</div><div class="line"><a name="l02871"></a><span class="lineno"> 2871</span>&#160;</div><div class="line"><a name="l02872"></a><span class="lineno"> 2872</span>&#160;    <span class="comment">// using floor because the reference offsets may contain decimals we are not going to consider here</span></div><div class="line"><a name="l02873"></a><span class="lineno"> 2873</span>&#160;    var floor = Math.floor;</div><div class="line"><a name="l02874"></a><span class="lineno"> 2874</span>&#160;    var overlapsRef = placement === <span class="stringliteral">&#39;left&#39;</span> &amp;&amp; floor(popperOffsets.right) &gt; floor(refOffsets.left) || placement === <span class="stringliteral">&#39;right&#39;</span> &amp;&amp; floor(popperOffsets.left) &lt; floor(refOffsets.right) || placement === <span class="stringliteral">&#39;top&#39;</span> &amp;&amp; floor(popperOffsets.bottom) &gt; floor(refOffsets.top) || placement === <span class="stringliteral">&#39;bottom&#39;</span> &amp;&amp; floor(popperOffsets.top) &lt; floor(refOffsets.bottom);</div><div class="line"><a name="l02875"></a><span class="lineno"> 2875</span>&#160;</div><div class="line"><a name="l02876"></a><span class="lineno"> 2876</span>&#160;    var overflowsLeft = floor(popperOffsets.left) &lt; floor(boundaries.left);</div><div class="line"><a name="l02877"></a><span class="lineno"> 2877</span>&#160;    var overflowsRight = floor(popperOffsets.right) &gt; floor(boundaries.right);</div><div class="line"><a name="l02878"></a><span class="lineno"> 2878</span>&#160;    var overflowsTop = floor(popperOffsets.top) &lt; floor(boundaries.top);</div><div class="line"><a name="l02879"></a><span class="lineno"> 2879</span>&#160;    var overflowsBottom = floor(popperOffsets.bottom) &gt; floor(boundaries.bottom);</div><div class="line"><a name="l02880"></a><span class="lineno"> 2880</span>&#160;</div><div class="line"><a name="l02881"></a><span class="lineno"> 2881</span>&#160;    var overflowsBoundaries = placement === <span class="stringliteral">&#39;left&#39;</span> &amp;&amp; overflowsLeft || placement === <span class="stringliteral">&#39;right&#39;</span> &amp;&amp; overflowsRight || placement === <span class="stringliteral">&#39;top&#39;</span> &amp;&amp; overflowsTop || placement === <span class="stringliteral">&#39;bottom&#39;</span> &amp;&amp; overflowsBottom;</div><div class="line"><a name="l02882"></a><span class="lineno"> 2882</span>&#160;</div><div class="line"><a name="l02883"></a><span class="lineno"> 2883</span>&#160;    <span class="comment">// flip the variation if required</span></div><div class="line"><a name="l02884"></a><span class="lineno"> 2884</span>&#160;    var isVertical = [<span class="stringliteral">&#39;top&#39;</span>, <span class="stringliteral">&#39;bottom&#39;</span>].indexOf(placement) !== -1;</div><div class="line"><a name="l02885"></a><span class="lineno"> 2885</span>&#160;    var flippedVariation = !!options.flipVariations &amp;&amp; (isVertical &amp;&amp; variation === <span class="stringliteral">&#39;start&#39;</span> &amp;&amp; overflowsLeft || isVertical &amp;&amp; variation === <span class="stringliteral">&#39;end&#39;</span> &amp;&amp; overflowsRight || !isVertical &amp;&amp; variation === <span class="stringliteral">&#39;start&#39;</span> &amp;&amp; overflowsTop || !isVertical &amp;&amp; variation === <span class="stringliteral">&#39;end&#39;</span> &amp;&amp; overflowsBottom);</div><div class="line"><a name="l02886"></a><span class="lineno"> 2886</span>&#160;</div><div class="line"><a name="l02887"></a><span class="lineno"> 2887</span>&#160;    <span class="keywordflow">if</span> (overlapsRef || overflowsBoundaries || flippedVariation) {</div><div class="line"><a name="l02888"></a><span class="lineno"> 2888</span>&#160;      <span class="comment">// this boolean to detect any flip loop</span></div><div class="line"><a name="l02889"></a><span class="lineno"> 2889</span>&#160;      <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.flipped = <span class="keyword">true</span>;</div><div class="line"><a name="l02890"></a><span class="lineno"> 2890</span>&#160;</div><div class="line"><a name="l02891"></a><span class="lineno"> 2891</span>&#160;      <span class="keywordflow">if</span> (overlapsRef || overflowsBoundaries) {</div><div class="line"><a name="l02892"></a><span class="lineno"> 2892</span>&#160;        placement = flipOrder[index + 1];</div><div class="line"><a name="l02893"></a><span class="lineno"> 2893</span>&#160;      }</div><div class="line"><a name="l02894"></a><span class="lineno"> 2894</span>&#160;</div><div class="line"><a name="l02895"></a><span class="lineno"> 2895</span>&#160;      <span class="keywordflow">if</span> (flippedVariation) {</div><div class="line"><a name="l02896"></a><span class="lineno"> 2896</span>&#160;        variation = getOppositeVariation(variation);</div><div class="line"><a name="l02897"></a><span class="lineno"> 2897</span>&#160;      }</div><div class="line"><a name="l02898"></a><span class="lineno"> 2898</span>&#160;</div><div class="line"><a name="l02899"></a><span class="lineno"> 2899</span>&#160;      <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.placement = placement + (variation ? <span class="charliteral">&#39;-&#39;</span> + variation : <span class="stringliteral">&#39;&#39;</span>);</div><div class="line"><a name="l02900"></a><span class="lineno"> 2900</span>&#160;</div><div class="line"><a name="l02901"></a><span class="lineno"> 2901</span>&#160;      <span class="comment">// this object contains `position`, we want to preserve it along with</span></div><div class="line"><a name="l02902"></a><span class="lineno"> 2902</span>&#160;      <span class="comment">// any additional property we may add in the future</span></div><div class="line"><a name="l02903"></a><span class="lineno"> 2903</span>&#160;      <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets.popper = _extends$1({}, <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets.popper, getPopperOffsets(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.instance.popper, <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets.reference, <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.placement));</div><div class="line"><a name="l02904"></a><span class="lineno"> 2904</span>&#160;</div><div class="line"><a name="l02905"></a><span class="lineno"> 2905</span>&#160;      <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a> = runModifiers(data.instance.modifiers, data, <span class="stringliteral">&#39;flip&#39;</span>);</div><div class="line"><a name="l02906"></a><span class="lineno"> 2906</span>&#160;    }</div><div class="line"><a name="l02907"></a><span class="lineno"> 2907</span>&#160;  });</div><div class="line"><a name="l02908"></a><span class="lineno"> 2908</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>;</div><div class="line"><a name="l02909"></a><span class="lineno"> 2909</span>&#160;}</div><div class="line"><a name="l02910"></a><span class="lineno"> 2910</span>&#160;</div><div class="line"><a name="l02918"></a><span class="lineno"> 2918</span>&#160;<span class="keyword">function</span> keepTogether(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>) {</div><div class="line"><a name="l02919"></a><span class="lineno"> 2919</span>&#160;  var _data$offsets = <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets,</div><div class="line"><a name="l02920"></a><span class="lineno"> 2920</span>&#160;      popper = _data$offsets.popper,</div><div class="line"><a name="l02921"></a><span class="lineno"> 2921</span>&#160;      reference = _data$offsets.reference;</div><div class="line"><a name="l02922"></a><span class="lineno"> 2922</span>&#160;</div><div class="line"><a name="l02923"></a><span class="lineno"> 2923</span>&#160;  var placement = <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.placement.split(<span class="charliteral">&#39;-&#39;</span>)[0];</div><div class="line"><a name="l02924"></a><span class="lineno"> 2924</span>&#160;  var floor = Math.floor;</div><div class="line"><a name="l02925"></a><span class="lineno"> 2925</span>&#160;  var isVertical = [<span class="stringliteral">&#39;top&#39;</span>, <span class="stringliteral">&#39;bottom&#39;</span>].indexOf(placement) !== -1;</div><div class="line"><a name="l02926"></a><span class="lineno"> 2926</span>&#160;  var side = isVertical ? <span class="stringliteral">&#39;right&#39;</span> : <span class="stringliteral">&#39;bottom&#39;</span>;</div><div class="line"><a name="l02927"></a><span class="lineno"> 2927</span>&#160;  var opSide = isVertical ? <span class="stringliteral">&#39;left&#39;</span> : <span class="stringliteral">&#39;top&#39;</span>;</div><div class="line"><a name="l02928"></a><span class="lineno"> 2928</span>&#160;  var measurement = isVertical ? <span class="stringliteral">&#39;width&#39;</span> : <span class="stringliteral">&#39;height&#39;</span>;</div><div class="line"><a name="l02929"></a><span class="lineno"> 2929</span>&#160;</div><div class="line"><a name="l02930"></a><span class="lineno"> 2930</span>&#160;  <span class="keywordflow">if</span> (popper[side] &lt; floor(reference[opSide])) {</div><div class="line"><a name="l02931"></a><span class="lineno"> 2931</span>&#160;    <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];</div><div class="line"><a name="l02932"></a><span class="lineno"> 2932</span>&#160;  }</div><div class="line"><a name="l02933"></a><span class="lineno"> 2933</span>&#160;  <span class="keywordflow">if</span> (popper[opSide] &gt; floor(reference[side])) {</div><div class="line"><a name="l02934"></a><span class="lineno"> 2934</span>&#160;    <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets.popper[opSide] = floor(reference[side]);</div><div class="line"><a name="l02935"></a><span class="lineno"> 2935</span>&#160;  }</div><div class="line"><a name="l02936"></a><span class="lineno"> 2936</span>&#160;</div><div class="line"><a name="l02937"></a><span class="lineno"> 2937</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>;</div><div class="line"><a name="l02938"></a><span class="lineno"> 2938</span>&#160;}</div><div class="line"><a name="l02939"></a><span class="lineno"> 2939</span>&#160;</div><div class="line"><a name="l02952"></a><span class="lineno"> 2952</span>&#160;<span class="keyword">function</span> toValue(str, measurement, popperOffsets, referenceOffsets) {</div><div class="line"><a name="l02953"></a><span class="lineno"> 2953</span>&#160;  <span class="comment">// separate value from unit</span></div><div class="line"><a name="l02954"></a><span class="lineno"> 2954</span>&#160;  var split = str.match(/((?:\-|\+)?\<a class="code" href="../../db/db2/a00020.php#aeb337d295abaddb5ec3cb34cc2e2bbc9">d</a>*\.?\<a class="code" href="../../db/db2/a00020.php#aeb337d295abaddb5ec3cb34cc2e2bbc9">d</a>*)(.*)/);</div><div class="line"><a name="l02955"></a><span class="lineno"> 2955</span>&#160;  var value = +split[1];</div><div class="line"><a name="l02956"></a><span class="lineno"> 2956</span>&#160;  var unit = split[2];</div><div class="line"><a name="l02957"></a><span class="lineno"> 2957</span>&#160;</div><div class="line"><a name="l02958"></a><span class="lineno"> 2958</span>&#160;  <span class="comment">// If it&#39;s not a number it&#39;s an operator, I guess</span></div><div class="line"><a name="l02959"></a><span class="lineno"> 2959</span>&#160;  <span class="keywordflow">if</span> (!value) {</div><div class="line"><a name="l02960"></a><span class="lineno"> 2960</span>&#160;    <span class="keywordflow">return</span> str;</div><div class="line"><a name="l02961"></a><span class="lineno"> 2961</span>&#160;  }</div><div class="line"><a name="l02962"></a><span class="lineno"> 2962</span>&#160;</div><div class="line"><a name="l02963"></a><span class="lineno"> 2963</span>&#160;  <span class="keywordflow">if</span> (unit.indexOf(<span class="charliteral">&#39;%&#39;</span>) === 0) {</div><div class="line"><a name="l02964"></a><span class="lineno"> 2964</span>&#160;    var element = <span class="keywordtype">void</span> 0;</div><div class="line"><a name="l02965"></a><span class="lineno"> 2965</span>&#160;    <span class="keywordflow">switch</span> (unit) {</div><div class="line"><a name="l02966"></a><span class="lineno"> 2966</span>&#160;      <span class="keywordflow">case</span> <span class="stringliteral">&#39;%p&#39;</span>:</div><div class="line"><a name="l02967"></a><span class="lineno"> 2967</span>&#160;        element = popperOffsets;</div><div class="line"><a name="l02968"></a><span class="lineno"> 2968</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l02969"></a><span class="lineno"> 2969</span>&#160;      <span class="keywordflow">case</span> <span class="charliteral">&#39;%&#39;</span>:</div><div class="line"><a name="l02970"></a><span class="lineno"> 2970</span>&#160;      <span class="keywordflow">case</span> <span class="stringliteral">&#39;%r&#39;</span>:</div><div class="line"><a name="l02971"></a><span class="lineno"> 2971</span>&#160;      <span class="keywordflow">default</span>:</div><div class="line"><a name="l02972"></a><span class="lineno"> 2972</span>&#160;        element = referenceOffsets;</div><div class="line"><a name="l02973"></a><span class="lineno"> 2973</span>&#160;    }</div><div class="line"><a name="l02974"></a><span class="lineno"> 2974</span>&#160;</div><div class="line"><a name="l02975"></a><span class="lineno"> 2975</span>&#160;    var rect = getClientRect(element);</div><div class="line"><a name="l02976"></a><span class="lineno"> 2976</span>&#160;    <span class="keywordflow">return</span> rect[measurement] / 100 * value;</div><div class="line"><a name="l02977"></a><span class="lineno"> 2977</span>&#160;  } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (unit === <span class="stringliteral">&#39;vh&#39;</span> || unit === <span class="stringliteral">&#39;vw&#39;</span>) {</div><div class="line"><a name="l02978"></a><span class="lineno"> 2978</span>&#160;    <span class="comment">// if is a vh or vw, we calculate the size based on the viewport</span></div><div class="line"><a name="l02979"></a><span class="lineno"> 2979</span>&#160;    var size = <span class="keywordtype">void</span> 0;</div><div class="line"><a name="l02980"></a><span class="lineno"> 2980</span>&#160;    <span class="keywordflow">if</span> (unit === <span class="stringliteral">&#39;vh&#39;</span>) {</div><div class="line"><a name="l02981"></a><span class="lineno"> 2981</span>&#160;      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);</div><div class="line"><a name="l02982"></a><span class="lineno"> 2982</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l02983"></a><span class="lineno"> 2983</span>&#160;      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);</div><div class="line"><a name="l02984"></a><span class="lineno"> 2984</span>&#160;    }</div><div class="line"><a name="l02985"></a><span class="lineno"> 2985</span>&#160;    <span class="keywordflow">return</span> size / 100 * value;</div><div class="line"><a name="l02986"></a><span class="lineno"> 2986</span>&#160;  } <span class="keywordflow">else</span> {</div><div class="line"><a name="l02987"></a><span class="lineno"> 2987</span>&#160;    <span class="comment">// if is an explicit pixel unit, we get rid of the unit and keep the value</span></div><div class="line"><a name="l02988"></a><span class="lineno"> 2988</span>&#160;    <span class="comment">// if is an implicit unit, it&#39;s px, and we return just the value</span></div><div class="line"><a name="l02989"></a><span class="lineno"> 2989</span>&#160;    <span class="keywordflow">return</span> value;</div><div class="line"><a name="l02990"></a><span class="lineno"> 2990</span>&#160;  }</div><div class="line"><a name="l02991"></a><span class="lineno"> 2991</span>&#160;}</div><div class="line"><a name="l02992"></a><span class="lineno"> 2992</span>&#160;</div><div class="line"><a name="l03004"></a><span class="lineno"> 3004</span>&#160;<span class="keyword">function</span> parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {</div><div class="line"><a name="l03005"></a><span class="lineno"> 3005</span>&#160;  var offsets = [0, 0];</div><div class="line"><a name="l03006"></a><span class="lineno"> 3006</span>&#160;</div><div class="line"><a name="l03007"></a><span class="lineno"> 3007</span>&#160;  <span class="comment">// Use height if placement is left or right and index is 0 otherwise use width</span></div><div class="line"><a name="l03008"></a><span class="lineno"> 3008</span>&#160;  <span class="comment">// in this way the first offset will use an axis and the second one</span></div><div class="line"><a name="l03009"></a><span class="lineno"> 3009</span>&#160;  <span class="comment">// will use the other one</span></div><div class="line"><a name="l03010"></a><span class="lineno"> 3010</span>&#160;  var useHeight = [<span class="stringliteral">&#39;right&#39;</span>, <span class="stringliteral">&#39;left&#39;</span>].indexOf(basePlacement) !== -1;</div><div class="line"><a name="l03011"></a><span class="lineno"> 3011</span>&#160;</div><div class="line"><a name="l03012"></a><span class="lineno"> 3012</span>&#160;  <span class="comment">// Split the offset string to obtain a list of values and operands</span></div><div class="line"><a name="l03013"></a><span class="lineno"> 3013</span>&#160;  <span class="comment">// The regex addresses values with the plus or minus sign in front (+10, -20, etc)</span></div><div class="line"><a name="l03014"></a><span class="lineno"> 3014</span>&#160;  var fragments = offset.split(/(\+|\-)/).map(<span class="keyword">function</span> (frag) {</div><div class="line"><a name="l03015"></a><span class="lineno"> 3015</span>&#160;    <span class="keywordflow">return</span> frag.trim();</div><div class="line"><a name="l03016"></a><span class="lineno"> 3016</span>&#160;  });</div><div class="line"><a name="l03017"></a><span class="lineno"> 3017</span>&#160;</div><div class="line"><a name="l03018"></a><span class="lineno"> 3018</span>&#160;  <span class="comment">// Detect if the offset string contains a pair of values or a single one</span></div><div class="line"><a name="l03019"></a><span class="lineno"> 3019</span>&#160;  <span class="comment">// they could be separated by comma or space</span></div><div class="line"><a name="l03020"></a><span class="lineno"> 3020</span>&#160;  var divider = fragments.indexOf(find(fragments, <span class="keyword">function</span> (frag) {</div><div class="line"><a name="l03021"></a><span class="lineno"> 3021</span>&#160;    <span class="keywordflow">return</span> frag.search(/,|\<a class="code" href="../../d3/dea/a00046.php#ad9a7d92cb87932d25187fdec3ba1b621">s</a>/) !== -1;</div><div class="line"><a name="l03022"></a><span class="lineno"> 3022</span>&#160;  }));</div><div class="line"><a name="l03023"></a><span class="lineno"> 3023</span>&#160;</div><div class="line"><a name="l03024"></a><span class="lineno"> 3024</span>&#160;  <span class="keywordflow">if</span> (fragments[divider] &amp;&amp; fragments[divider].indexOf(<span class="charliteral">&#39;,&#39;</span>) === -1) {</div><div class="line"><a name="l03025"></a><span class="lineno"> 3025</span>&#160;    console.warn(<span class="stringliteral">&#39;Offsets separated by white space(s) are deprecated, use a comma (,) instead.&#39;</span>);</div><div class="line"><a name="l03026"></a><span class="lineno"> 3026</span>&#160;  }</div><div class="line"><a name="l03027"></a><span class="lineno"> 3027</span>&#160;</div><div class="line"><a name="l03028"></a><span class="lineno"> 3028</span>&#160;  <span class="comment">// If divider is found, we divide the list of values and operands to divide</span></div><div class="line"><a name="l03029"></a><span class="lineno"> 3029</span>&#160;  <span class="comment">// them by ofset X and Y.</span></div><div class="line"><a name="l03030"></a><span class="lineno"> 3030</span>&#160;  var splitRegex = /<a class="code" href="../../d3/dea/a00046.php#ad9a7d92cb87932d25187fdec3ba1b621">\s</a>*,<a class="code" href="../../d3/dea/a00046.php#ad9a7d92cb87932d25187fdec3ba1b621">\s</a>*|<a class="code" href="../../d3/dea/a00046.php#ad9a7d92cb87932d25187fdec3ba1b621">\s</a>+/;</div><div class="line"><a name="l03031"></a><span class="lineno"> 3031</span>&#160;  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];</div><div class="line"><a name="l03032"></a><span class="lineno"> 3032</span>&#160;</div><div class="line"><a name="l03033"></a><span class="lineno"> 3033</span>&#160;  <span class="comment">// Convert the values with units to absolute pixels to allow our computations</span></div><div class="line"><a name="l03034"></a><span class="lineno"> 3034</span>&#160;  ops = ops.map(<span class="keyword">function</span> (op, index) {</div><div class="line"><a name="l03035"></a><span class="lineno"> 3035</span>&#160;    <span class="comment">// Most of the units rely on the orientation of the popper</span></div><div class="line"><a name="l03036"></a><span class="lineno"> 3036</span>&#160;    var measurement = (index === 1 ? !useHeight : useHeight) ? <span class="stringliteral">&#39;height&#39;</span> : <span class="stringliteral">&#39;width&#39;</span>;</div><div class="line"><a name="l03037"></a><span class="lineno"> 3037</span>&#160;    var mergeWithPrevious = <span class="keyword">false</span>;</div><div class="line"><a name="l03038"></a><span class="lineno"> 3038</span>&#160;    <span class="keywordflow">return</span> op</div><div class="line"><a name="l03039"></a><span class="lineno"> 3039</span>&#160;    <span class="comment">// This aggregates any `+` or `-` sign that aren&#39;t considered operators</span></div><div class="line"><a name="l03040"></a><span class="lineno"> 3040</span>&#160;    <span class="comment">// e.g.: 10 + +5 =&gt; [10, +, +5]</span></div><div class="line"><a name="l03041"></a><span class="lineno"> 3041</span>&#160;    .reduce(<span class="keyword">function</span> (<a class="code" href="../../db/db2/a00020.php#ae8f6b400ed3390908c5cdeebed3a82b9">a</a>, <a class="code" href="../../db/db2/a00020.php#ac0431efac4d7c393d1e70b86115cb93f">b</a>) {</div><div class="line"><a name="l03042"></a><span class="lineno"> 3042</span>&#160;      <span class="keywordflow">if</span> (<a class="code" href="../../db/db2/a00020.php#ae8f6b400ed3390908c5cdeebed3a82b9">a</a>[<a class="code" href="../../db/db2/a00020.php#ae8f6b400ed3390908c5cdeebed3a82b9">a</a>.length - 1] === <span class="stringliteral">&#39;&#39;</span> &amp;&amp; [<span class="charliteral">&#39;+&#39;</span>, <span class="charliteral">&#39;-&#39;</span>].indexOf(<a class="code" href="../../db/db2/a00020.php#ac0431efac4d7c393d1e70b86115cb93f">b</a>) !== -1) {</div><div class="line"><a name="l03043"></a><span class="lineno"> 3043</span>&#160;        <a class="code" href="../../db/db2/a00020.php#ae8f6b400ed3390908c5cdeebed3a82b9">a</a>[<a class="code" href="../../db/db2/a00020.php#ae8f6b400ed3390908c5cdeebed3a82b9">a</a>.length - 1] = <a class="code" href="../../db/db2/a00020.php#ac0431efac4d7c393d1e70b86115cb93f">b</a>;</div><div class="line"><a name="l03044"></a><span class="lineno"> 3044</span>&#160;        mergeWithPrevious = <span class="keyword">true</span>;</div><div class="line"><a name="l03045"></a><span class="lineno"> 3045</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../db/db2/a00020.php#ae8f6b400ed3390908c5cdeebed3a82b9">a</a>;</div><div class="line"><a name="l03046"></a><span class="lineno"> 3046</span>&#160;      } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (mergeWithPrevious) {</div><div class="line"><a name="l03047"></a><span class="lineno"> 3047</span>&#160;        <a class="code" href="../../db/db2/a00020.php#ae8f6b400ed3390908c5cdeebed3a82b9">a</a>[<a class="code" href="../../db/db2/a00020.php#ae8f6b400ed3390908c5cdeebed3a82b9">a</a>.length - 1] += <a class="code" href="../../db/db2/a00020.php#ac0431efac4d7c393d1e70b86115cb93f">b</a>;</div><div class="line"><a name="l03048"></a><span class="lineno"> 3048</span>&#160;        mergeWithPrevious = <span class="keyword">false</span>;</div><div class="line"><a name="l03049"></a><span class="lineno"> 3049</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../db/db2/a00020.php#ae8f6b400ed3390908c5cdeebed3a82b9">a</a>;</div><div class="line"><a name="l03050"></a><span class="lineno"> 3050</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l03051"></a><span class="lineno"> 3051</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../db/db2/a00020.php#ae8f6b400ed3390908c5cdeebed3a82b9">a</a>.concat(<a class="code" href="../../db/db2/a00020.php#ac0431efac4d7c393d1e70b86115cb93f">b</a>);</div><div class="line"><a name="l03052"></a><span class="lineno"> 3052</span>&#160;      }</div><div class="line"><a name="l03053"></a><span class="lineno"> 3053</span>&#160;    }, [])</div><div class="line"><a name="l03054"></a><span class="lineno"> 3054</span>&#160;    <span class="comment">// Here we convert the string values into number values (in px)</span></div><div class="line"><a name="l03055"></a><span class="lineno"> 3055</span>&#160;    .<a class="code" href="../../d2/dee/a00049.php#a48e18769649a3ca5bab0fafdec44cb15">map</a>(<span class="keyword">function</span> (str) {</div><div class="line"><a name="l03056"></a><span class="lineno"> 3056</span>&#160;      <span class="keywordflow">return</span> toValue(str, measurement, popperOffsets, referenceOffsets);</div><div class="line"><a name="l03057"></a><span class="lineno"> 3057</span>&#160;    });</div><div class="line"><a name="l03058"></a><span class="lineno"> 3058</span>&#160;  });</div><div class="line"><a name="l03059"></a><span class="lineno"> 3059</span>&#160;</div><div class="line"><a name="l03060"></a><span class="lineno"> 3060</span>&#160;  <span class="comment">// Loop trough the offsets arrays and execute the operations</span></div><div class="line"><a name="l03061"></a><span class="lineno"> 3061</span>&#160;  ops.forEach(<span class="keyword">function</span> (op, index) {</div><div class="line"><a name="l03062"></a><span class="lineno"> 3062</span>&#160;    op.forEach(<span class="keyword">function</span> (frag, index2) {</div><div class="line"><a name="l03063"></a><span class="lineno"> 3063</span>&#160;      <span class="keywordflow">if</span> (isNumeric(frag)) {</div><div class="line"><a name="l03064"></a><span class="lineno"> 3064</span>&#160;        offsets[index] += frag * (op[index2 - 1] === <span class="charliteral">&#39;-&#39;</span> ? -1 : 1);</div><div class="line"><a name="l03065"></a><span class="lineno"> 3065</span>&#160;      }</div><div class="line"><a name="l03066"></a><span class="lineno"> 3066</span>&#160;    });</div><div class="line"><a name="l03067"></a><span class="lineno"> 3067</span>&#160;  });</div><div class="line"><a name="l03068"></a><span class="lineno"> 3068</span>&#160;  <span class="keywordflow">return</span> offsets;</div><div class="line"><a name="l03069"></a><span class="lineno"> 3069</span>&#160;}</div><div class="line"><a name="l03070"></a><span class="lineno"> 3070</span>&#160;</div><div class="line"><a name="l03080"></a><span class="lineno"> 3080</span>&#160;<span class="keyword">function</span> offset(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>, _ref) {</div><div class="line"><a name="l03081"></a><span class="lineno"> 3081</span>&#160;  var offset = _ref.offset;</div><div class="line"><a name="l03082"></a><span class="lineno"> 3082</span>&#160;  var placement = <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.placement,</div><div class="line"><a name="l03083"></a><span class="lineno"> 3083</span>&#160;      _data$offsets = <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets,</div><div class="line"><a name="l03084"></a><span class="lineno"> 3084</span>&#160;      popper = _data$offsets.popper,</div><div class="line"><a name="l03085"></a><span class="lineno"> 3085</span>&#160;      reference = _data$offsets.reference;</div><div class="line"><a name="l03086"></a><span class="lineno"> 3086</span>&#160;</div><div class="line"><a name="l03087"></a><span class="lineno"> 3087</span>&#160;  var basePlacement = placement.split(<span class="charliteral">&#39;-&#39;</span>)[0];</div><div class="line"><a name="l03088"></a><span class="lineno"> 3088</span>&#160;</div><div class="line"><a name="l03089"></a><span class="lineno"> 3089</span>&#160;  var offsets = <span class="keywordtype">void</span> 0;</div><div class="line"><a name="l03090"></a><span class="lineno"> 3090</span>&#160;  <span class="keywordflow">if</span> (isNumeric(+offset)) {</div><div class="line"><a name="l03091"></a><span class="lineno"> 3091</span>&#160;    offsets = [+offset, 0];</div><div class="line"><a name="l03092"></a><span class="lineno"> 3092</span>&#160;  } <span class="keywordflow">else</span> {</div><div class="line"><a name="l03093"></a><span class="lineno"> 3093</span>&#160;    offsets = parseOffset(offset, popper, reference, basePlacement);</div><div class="line"><a name="l03094"></a><span class="lineno"> 3094</span>&#160;  }</div><div class="line"><a name="l03095"></a><span class="lineno"> 3095</span>&#160;</div><div class="line"><a name="l03096"></a><span class="lineno"> 3096</span>&#160;  <span class="keywordflow">if</span> (basePlacement === <span class="stringliteral">&#39;left&#39;</span>) {</div><div class="line"><a name="l03097"></a><span class="lineno"> 3097</span>&#160;    popper.top += offsets[0];</div><div class="line"><a name="l03098"></a><span class="lineno"> 3098</span>&#160;    popper.left -= offsets[1];</div><div class="line"><a name="l03099"></a><span class="lineno"> 3099</span>&#160;  } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (basePlacement === <span class="stringliteral">&#39;right&#39;</span>) {</div><div class="line"><a name="l03100"></a><span class="lineno"> 3100</span>&#160;    popper.top += offsets[0];</div><div class="line"><a name="l03101"></a><span class="lineno"> 3101</span>&#160;    popper.left += offsets[1];</div><div class="line"><a name="l03102"></a><span class="lineno"> 3102</span>&#160;  } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (basePlacement === <span class="stringliteral">&#39;top&#39;</span>) {</div><div class="line"><a name="l03103"></a><span class="lineno"> 3103</span>&#160;    popper.left += offsets[0];</div><div class="line"><a name="l03104"></a><span class="lineno"> 3104</span>&#160;    popper.top -= offsets[1];</div><div class="line"><a name="l03105"></a><span class="lineno"> 3105</span>&#160;  } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (basePlacement === <span class="stringliteral">&#39;bottom&#39;</span>) {</div><div class="line"><a name="l03106"></a><span class="lineno"> 3106</span>&#160;    popper.left += offsets[0];</div><div class="line"><a name="l03107"></a><span class="lineno"> 3107</span>&#160;    popper.top += offsets[1];</div><div class="line"><a name="l03108"></a><span class="lineno"> 3108</span>&#160;  }</div><div class="line"><a name="l03109"></a><span class="lineno"> 3109</span>&#160;</div><div class="line"><a name="l03110"></a><span class="lineno"> 3110</span>&#160;  <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.popper = popper;</div><div class="line"><a name="l03111"></a><span class="lineno"> 3111</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>;</div><div class="line"><a name="l03112"></a><span class="lineno"> 3112</span>&#160;}</div><div class="line"><a name="l03113"></a><span class="lineno"> 3113</span>&#160;</div><div class="line"><a name="l03121"></a><span class="lineno"> 3121</span>&#160;<span class="keyword">function</span> preventOverflow(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>, options) {</div><div class="line"><a name="l03122"></a><span class="lineno"> 3122</span>&#160;  var boundariesElement = options.boundariesElement || getOffsetParent(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.instance.popper);</div><div class="line"><a name="l03123"></a><span class="lineno"> 3123</span>&#160;</div><div class="line"><a name="l03124"></a><span class="lineno"> 3124</span>&#160;  <span class="comment">// If offsetParent is the reference element, we really want to</span></div><div class="line"><a name="l03125"></a><span class="lineno"> 3125</span>&#160;  <span class="comment">// go one step up and use the next offsetParent as reference to</span></div><div class="line"><a name="l03126"></a><span class="lineno"> 3126</span>&#160;  <span class="comment">// avoid to make this modifier completely useless and look like broken</span></div><div class="line"><a name="l03127"></a><span class="lineno"> 3127</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.instance.reference === boundariesElement) {</div><div class="line"><a name="l03128"></a><span class="lineno"> 3128</span>&#160;    boundariesElement = getOffsetParent(boundariesElement);</div><div class="line"><a name="l03129"></a><span class="lineno"> 3129</span>&#160;  }</div><div class="line"><a name="l03130"></a><span class="lineno"> 3130</span>&#160;</div><div class="line"><a name="l03131"></a><span class="lineno"> 3131</span>&#160;  var boundaries = getBoundaries(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.instance.popper, <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.instance.reference, options.padding, boundariesElement);</div><div class="line"><a name="l03132"></a><span class="lineno"> 3132</span>&#160;  options.boundaries = boundaries;</div><div class="line"><a name="l03133"></a><span class="lineno"> 3133</span>&#160;</div><div class="line"><a name="l03134"></a><span class="lineno"> 3134</span>&#160;  var order = options.priority;</div><div class="line"><a name="l03135"></a><span class="lineno"> 3135</span>&#160;  var popper = <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets.popper;</div><div class="line"><a name="l03136"></a><span class="lineno"> 3136</span>&#160;</div><div class="line"><a name="l03137"></a><span class="lineno"> 3137</span>&#160;  var check = {</div><div class="line"><a name="l03138"></a><span class="lineno"> 3138</span>&#160;    primary: <span class="keyword">function</span> primary(placement) {</div><div class="line"><a name="l03139"></a><span class="lineno"> 3139</span>&#160;      var value = popper[placement];</div><div class="line"><a name="l03140"></a><span class="lineno"> 3140</span>&#160;      <span class="keywordflow">if</span> (popper[placement] &lt; boundaries[placement] &amp;&amp; !options.escapeWithReference) {</div><div class="line"><a name="l03141"></a><span class="lineno"> 3141</span>&#160;        value = Math.max(popper[placement], boundaries[placement]);</div><div class="line"><a name="l03142"></a><span class="lineno"> 3142</span>&#160;      }</div><div class="line"><a name="l03143"></a><span class="lineno"> 3143</span>&#160;      <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#a817fcb70b363027b28fec000da90139a">defineProperty</a>({}, placement, value);</div><div class="line"><a name="l03144"></a><span class="lineno"> 3144</span>&#160;    },</div><div class="line"><a name="l03145"></a><span class="lineno"> 3145</span>&#160;    secondary: <span class="keyword">function</span> secondary(placement) {</div><div class="line"><a name="l03146"></a><span class="lineno"> 3146</span>&#160;      var mainSide = placement === <span class="stringliteral">&#39;right&#39;</span> ? <span class="stringliteral">&#39;left&#39;</span> : <span class="stringliteral">&#39;top&#39;</span>;</div><div class="line"><a name="l03147"></a><span class="lineno"> 3147</span>&#160;      var value = popper[mainSide];</div><div class="line"><a name="l03148"></a><span class="lineno"> 3148</span>&#160;      <span class="keywordflow">if</span> (popper[placement] &gt; boundaries[placement] &amp;&amp; !options.escapeWithReference) {</div><div class="line"><a name="l03149"></a><span class="lineno"> 3149</span>&#160;        value = Math.min(popper[mainSide], boundaries[placement] - (placement === <span class="stringliteral">&#39;right&#39;</span> ? popper.width : popper.height));</div><div class="line"><a name="l03150"></a><span class="lineno"> 3150</span>&#160;      }</div><div class="line"><a name="l03151"></a><span class="lineno"> 3151</span>&#160;      <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#a817fcb70b363027b28fec000da90139a">defineProperty</a>({}, mainSide, value);</div><div class="line"><a name="l03152"></a><span class="lineno"> 3152</span>&#160;    }</div><div class="line"><a name="l03153"></a><span class="lineno"> 3153</span>&#160;  };</div><div class="line"><a name="l03154"></a><span class="lineno"> 3154</span>&#160;</div><div class="line"><a name="l03155"></a><span class="lineno"> 3155</span>&#160;  order.forEach(<span class="keyword">function</span> (placement) {</div><div class="line"><a name="l03156"></a><span class="lineno"> 3156</span>&#160;    var side = [<span class="stringliteral">&#39;left&#39;</span>, <span class="stringliteral">&#39;top&#39;</span>].indexOf(placement) !== -1 ? <span class="stringliteral">&#39;primary&#39;</span> : <span class="stringliteral">&#39;secondary&#39;</span>;</div><div class="line"><a name="l03157"></a><span class="lineno"> 3157</span>&#160;    popper = _extends$1({}, popper, check[side](placement));</div><div class="line"><a name="l03158"></a><span class="lineno"> 3158</span>&#160;  });</div><div class="line"><a name="l03159"></a><span class="lineno"> 3159</span>&#160;</div><div class="line"><a name="l03160"></a><span class="lineno"> 3160</span>&#160;  <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets.popper = popper;</div><div class="line"><a name="l03161"></a><span class="lineno"> 3161</span>&#160;</div><div class="line"><a name="l03162"></a><span class="lineno"> 3162</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>;</div><div class="line"><a name="l03163"></a><span class="lineno"> 3163</span>&#160;}</div><div class="line"><a name="l03164"></a><span class="lineno"> 3164</span>&#160;</div><div class="line"><a name="l03172"></a><span class="lineno"> 3172</span>&#160;<span class="keyword">function</span> shift(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>) {</div><div class="line"><a name="l03173"></a><span class="lineno"> 3173</span>&#160;  var placement = <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.placement;</div><div class="line"><a name="l03174"></a><span class="lineno"> 3174</span>&#160;  var basePlacement = placement.split(<span class="charliteral">&#39;-&#39;</span>)[0];</div><div class="line"><a name="l03175"></a><span class="lineno"> 3175</span>&#160;  var shiftvariation = placement.split(<span class="charliteral">&#39;-&#39;</span>)[1];</div><div class="line"><a name="l03176"></a><span class="lineno"> 3176</span>&#160;</div><div class="line"><a name="l03177"></a><span class="lineno"> 3177</span>&#160;  <span class="comment">// if shift shiftvariation is specified, run the modifier</span></div><div class="line"><a name="l03178"></a><span class="lineno"> 3178</span>&#160;  <span class="keywordflow">if</span> (shiftvariation) {</div><div class="line"><a name="l03179"></a><span class="lineno"> 3179</span>&#160;    var _data$offsets = <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets,</div><div class="line"><a name="l03180"></a><span class="lineno"> 3180</span>&#160;        reference = _data$offsets.reference,</div><div class="line"><a name="l03181"></a><span class="lineno"> 3181</span>&#160;        popper = _data$offsets.popper;</div><div class="line"><a name="l03182"></a><span class="lineno"> 3182</span>&#160;</div><div class="line"><a name="l03183"></a><span class="lineno"> 3183</span>&#160;    var isVertical = [<span class="stringliteral">&#39;bottom&#39;</span>, <span class="stringliteral">&#39;top&#39;</span>].indexOf(basePlacement) !== -1;</div><div class="line"><a name="l03184"></a><span class="lineno"> 3184</span>&#160;    var side = isVertical ? <span class="stringliteral">&#39;left&#39;</span> : <span class="stringliteral">&#39;top&#39;</span>;</div><div class="line"><a name="l03185"></a><span class="lineno"> 3185</span>&#160;    var measurement = isVertical ? <span class="stringliteral">&#39;width&#39;</span> : <span class="stringliteral">&#39;height&#39;</span>;</div><div class="line"><a name="l03186"></a><span class="lineno"> 3186</span>&#160;</div><div class="line"><a name="l03187"></a><span class="lineno"> 3187</span>&#160;    var shiftOffsets = {</div><div class="line"><a name="l03188"></a><span class="lineno"> 3188</span>&#160;      start: <a class="code" href="../../d4/d51/a00017.php#a817fcb70b363027b28fec000da90139a">defineProperty</a>({}, side, reference[side]),</div><div class="line"><a name="l03189"></a><span class="lineno"> 3189</span>&#160;      end: <a class="code" href="../../d4/d51/a00017.php#a817fcb70b363027b28fec000da90139a">defineProperty</a>({}, side, reference[side] + reference[measurement] - popper[measurement])</div><div class="line"><a name="l03190"></a><span class="lineno"> 3190</span>&#160;    };</div><div class="line"><a name="l03191"></a><span class="lineno"> 3191</span>&#160;</div><div class="line"><a name="l03192"></a><span class="lineno"> 3192</span>&#160;    <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets.popper = _extends$1({}, popper, shiftOffsets[shiftvariation]);</div><div class="line"><a name="l03193"></a><span class="lineno"> 3193</span>&#160;  }</div><div class="line"><a name="l03194"></a><span class="lineno"> 3194</span>&#160;</div><div class="line"><a name="l03195"></a><span class="lineno"> 3195</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>;</div><div class="line"><a name="l03196"></a><span class="lineno"> 3196</span>&#160;}</div><div class="line"><a name="l03197"></a><span class="lineno"> 3197</span>&#160;</div><div class="line"><a name="l03205"></a><span class="lineno"> 3205</span>&#160;<span class="keyword">function</span> hide(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>) {</div><div class="line"><a name="l03206"></a><span class="lineno"> 3206</span>&#160;  <span class="keywordflow">if</span> (!isModifierRequired(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.instance.modifiers, <span class="stringliteral">&#39;hide&#39;</span>, <span class="stringliteral">&#39;preventOverflow&#39;</span>)) {</div><div class="line"><a name="l03207"></a><span class="lineno"> 3207</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>;</div><div class="line"><a name="l03208"></a><span class="lineno"> 3208</span>&#160;  }</div><div class="line"><a name="l03209"></a><span class="lineno"> 3209</span>&#160;</div><div class="line"><a name="l03210"></a><span class="lineno"> 3210</span>&#160;  var refRect = <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets.reference;</div><div class="line"><a name="l03211"></a><span class="lineno"> 3211</span>&#160;  var bound = find(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.instance.modifiers, function (modifier) {</div><div class="line"><a name="l03212"></a><span class="lineno"> 3212</span>&#160;    <span class="keywordflow">return</span> modifier.name === <span class="stringliteral">&#39;preventOverflow&#39;</span>;</div><div class="line"><a name="l03213"></a><span class="lineno"> 3213</span>&#160;  }).boundaries;</div><div class="line"><a name="l03214"></a><span class="lineno"> 3214</span>&#160;</div><div class="line"><a name="l03215"></a><span class="lineno"> 3215</span>&#160;  <span class="keywordflow">if</span> (refRect.bottom &lt; bound.top || refRect.left &gt; bound.right || refRect.top &gt; bound.bottom || refRect.right &lt; bound.left) {</div><div class="line"><a name="l03216"></a><span class="lineno"> 3216</span>&#160;    <span class="comment">// Avoid unnecessary DOM access if visibility hasn&#39;t changed</span></div><div class="line"><a name="l03217"></a><span class="lineno"> 3217</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.hide === <span class="keyword">true</span>) {</div><div class="line"><a name="l03218"></a><span class="lineno"> 3218</span>&#160;      <span class="keywordflow">return</span> <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>;</div><div class="line"><a name="l03219"></a><span class="lineno"> 3219</span>&#160;    }</div><div class="line"><a name="l03220"></a><span class="lineno"> 3220</span>&#160;</div><div class="line"><a name="l03221"></a><span class="lineno"> 3221</span>&#160;    <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.hide = <span class="keyword">true</span>;</div><div class="line"><a name="l03222"></a><span class="lineno"> 3222</span>&#160;    <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.attributes[<span class="stringliteral">&#39;x-out-of-boundaries&#39;</span>] = <span class="stringliteral">&#39;&#39;</span>;</div><div class="line"><a name="l03223"></a><span class="lineno"> 3223</span>&#160;  } <span class="keywordflow">else</span> {</div><div class="line"><a name="l03224"></a><span class="lineno"> 3224</span>&#160;    <span class="comment">// Avoid unnecessary DOM access if visibility hasn&#39;t changed</span></div><div class="line"><a name="l03225"></a><span class="lineno"> 3225</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.hide === <span class="keyword">false</span>) {</div><div class="line"><a name="l03226"></a><span class="lineno"> 3226</span>&#160;      <span class="keywordflow">return</span> <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>;</div><div class="line"><a name="l03227"></a><span class="lineno"> 3227</span>&#160;    }</div><div class="line"><a name="l03228"></a><span class="lineno"> 3228</span>&#160;</div><div class="line"><a name="l03229"></a><span class="lineno"> 3229</span>&#160;    <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.hide = <span class="keyword">false</span>;</div><div class="line"><a name="l03230"></a><span class="lineno"> 3230</span>&#160;    <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.attributes[<span class="stringliteral">&#39;x-out-of-boundaries&#39;</span>] = <span class="keyword">false</span>;</div><div class="line"><a name="l03231"></a><span class="lineno"> 3231</span>&#160;  }</div><div class="line"><a name="l03232"></a><span class="lineno"> 3232</span>&#160;</div><div class="line"><a name="l03233"></a><span class="lineno"> 3233</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>;</div><div class="line"><a name="l03234"></a><span class="lineno"> 3234</span>&#160;}</div><div class="line"><a name="l03235"></a><span class="lineno"> 3235</span>&#160;</div><div class="line"><a name="l03243"></a><span class="lineno"> 3243</span>&#160;<span class="keyword">function</span> inner(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>) {</div><div class="line"><a name="l03244"></a><span class="lineno"> 3244</span>&#160;  var placement = <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.placement;</div><div class="line"><a name="l03245"></a><span class="lineno"> 3245</span>&#160;  var basePlacement = placement.split(<span class="charliteral">&#39;-&#39;</span>)[0];</div><div class="line"><a name="l03246"></a><span class="lineno"> 3246</span>&#160;  var _data$offsets = <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets,</div><div class="line"><a name="l03247"></a><span class="lineno"> 3247</span>&#160;      popper = _data$offsets.popper,</div><div class="line"><a name="l03248"></a><span class="lineno"> 3248</span>&#160;      reference = _data$offsets.reference;</div><div class="line"><a name="l03249"></a><span class="lineno"> 3249</span>&#160;</div><div class="line"><a name="l03250"></a><span class="lineno"> 3250</span>&#160;  var isHoriz = [<span class="stringliteral">&#39;left&#39;</span>, <span class="stringliteral">&#39;right&#39;</span>].indexOf(basePlacement) !== -1;</div><div class="line"><a name="l03251"></a><span class="lineno"> 3251</span>&#160;</div><div class="line"><a name="l03252"></a><span class="lineno"> 3252</span>&#160;  var subtractLength = [<span class="stringliteral">&#39;top&#39;</span>, <span class="stringliteral">&#39;left&#39;</span>].indexOf(basePlacement) === -1;</div><div class="line"><a name="l03253"></a><span class="lineno"> 3253</span>&#160;</div><div class="line"><a name="l03254"></a><span class="lineno"> 3254</span>&#160;  popper[isHoriz ? <span class="stringliteral">&#39;left&#39;</span> : <span class="stringliteral">&#39;top&#39;</span>] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? <span class="stringliteral">&#39;width&#39;</span> : <span class="stringliteral">&#39;height&#39;</span>] : 0);</div><div class="line"><a name="l03255"></a><span class="lineno"> 3255</span>&#160;</div><div class="line"><a name="l03256"></a><span class="lineno"> 3256</span>&#160;  <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.placement = getOppositePlacement(placement);</div><div class="line"><a name="l03257"></a><span class="lineno"> 3257</span>&#160;  <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets.popper = getClientRect(popper);</div><div class="line"><a name="l03258"></a><span class="lineno"> 3258</span>&#160;</div><div class="line"><a name="l03259"></a><span class="lineno"> 3259</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>;</div><div class="line"><a name="l03260"></a><span class="lineno"> 3260</span>&#160;}</div><div class="line"><a name="l03261"></a><span class="lineno"> 3261</span>&#160;</div><div class="line"><a name="l03283"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#ae26895307b59dc67206da971565ba0d9"> 3283</a></span>&#160;var <a class="code" href="../../d4/d31/a00069.php">modifiers</a> = {</div><div class="line"><a name="l03292"></a><span class="lineno"> 3292</span>&#160;  shift: {</div><div class="line"><a name="l03294"></a><span class="lineno"> 3294</span>&#160;    order: 100,</div><div class="line"><a name="l03296"></a><span class="lineno"> 3296</span>&#160;    enabled: <span class="keyword">true</span>,</div><div class="line"><a name="l03298"></a><span class="lineno"> 3298</span>&#160;    <a class="code" href="../../d3/dea/a00046.php#a8a938b10dab9fa9d43908785f7e2c002">fn</a>: shift</div><div class="line"><a name="l03299"></a><span class="lineno"> 3299</span>&#160;  },</div><div class="line"><a name="l03300"></a><span class="lineno"> 3300</span>&#160;</div><div class="line"><a name="l03339"></a><span class="lineno"> 3339</span>&#160;  offset: {</div><div class="line"><a name="l03341"></a><span class="lineno"> 3341</span>&#160;    order: 200,</div><div class="line"><a name="l03343"></a><span class="lineno"> 3343</span>&#160;    enabled: <span class="keyword">true</span>,</div><div class="line"><a name="l03345"></a><span class="lineno"> 3345</span>&#160;    <a class="code" href="../../d3/dea/a00046.php#a8a938b10dab9fa9d43908785f7e2c002">fn</a>: offset,</div><div class="line"><a name="l03349"></a><span class="lineno"> 3349</span>&#160;    offset: 0</div><div class="line"><a name="l03350"></a><span class="lineno"> 3350</span>&#160;  },</div><div class="line"><a name="l03351"></a><span class="lineno"> 3351</span>&#160;</div><div class="line"><a name="l03369"></a><span class="lineno"> 3369</span>&#160;  preventOverflow: {</div><div class="line"><a name="l03371"></a><span class="lineno"> 3371</span>&#160;    order: 300,</div><div class="line"><a name="l03373"></a><span class="lineno"> 3373</span>&#160;    enabled: <span class="keyword">true</span>,</div><div class="line"><a name="l03375"></a><span class="lineno"> 3375</span>&#160;    <a class="code" href="../../d3/dea/a00046.php#a8a938b10dab9fa9d43908785f7e2c002">fn</a>: preventOverflow,</div><div class="line"><a name="l03381"></a><span class="lineno"> 3381</span>&#160;    priority: [<span class="stringliteral">&#39;left&#39;</span>, <span class="stringliteral">&#39;right&#39;</span>, <span class="stringliteral">&#39;top&#39;</span>, <span class="stringliteral">&#39;bottom&#39;</span>],</div><div class="line"><a name="l03388"></a><span class="lineno"> 3388</span>&#160;    padding: 5,</div><div class="line"><a name="l03394"></a><span class="lineno"> 3394</span>&#160;    boundariesElement: <span class="stringliteral">&#39;scrollParent&#39;</span></div><div class="line"><a name="l03395"></a><span class="lineno"> 3395</span>&#160;  },</div><div class="line"><a name="l03396"></a><span class="lineno"> 3396</span>&#160;</div><div class="line"><a name="l03406"></a><span class="lineno"> 3406</span>&#160;  keepTogether: {</div><div class="line"><a name="l03408"></a><span class="lineno"> 3408</span>&#160;    order: 400,</div><div class="line"><a name="l03410"></a><span class="lineno"> 3410</span>&#160;    enabled: <span class="keyword">true</span>,</div><div class="line"><a name="l03412"></a><span class="lineno"> 3412</span>&#160;    <a class="code" href="../../d3/dea/a00046.php#a8a938b10dab9fa9d43908785f7e2c002">fn</a>: keepTogether</div><div class="line"><a name="l03413"></a><span class="lineno"> 3413</span>&#160;  },</div><div class="line"><a name="l03414"></a><span class="lineno"> 3414</span>&#160;</div><div class="line"><a name="l03425"></a><span class="lineno"> 3425</span>&#160;  arrow: {</div><div class="line"><a name="l03427"></a><span class="lineno"> 3427</span>&#160;    order: 500,</div><div class="line"><a name="l03429"></a><span class="lineno"> 3429</span>&#160;    enabled: <span class="keyword">true</span>,</div><div class="line"><a name="l03431"></a><span class="lineno"> 3431</span>&#160;    <a class="code" href="../../d3/dea/a00046.php#a8a938b10dab9fa9d43908785f7e2c002">fn</a>: arrow,</div><div class="line"><a name="l03433"></a><span class="lineno"> 3433</span>&#160;    element: <span class="stringliteral">&#39;[x-arrow]&#39;</span></div><div class="line"><a name="l03434"></a><span class="lineno"> 3434</span>&#160;  },</div><div class="line"><a name="l03435"></a><span class="lineno"> 3435</span>&#160;</div><div class="line"><a name="l03447"></a><span class="lineno"> 3447</span>&#160;  flip: {</div><div class="line"><a name="l03449"></a><span class="lineno"> 3449</span>&#160;    order: 600,</div><div class="line"><a name="l03451"></a><span class="lineno"> 3451</span>&#160;    enabled: <span class="keyword">true</span>,</div><div class="line"><a name="l03453"></a><span class="lineno"> 3453</span>&#160;    <a class="code" href="../../d3/dea/a00046.php#a8a938b10dab9fa9d43908785f7e2c002">fn</a>: flip,</div><div class="line"><a name="l03460"></a><span class="lineno"> 3460</span>&#160;    behavior: <span class="stringliteral">&#39;flip&#39;</span>,</div><div class="line"><a name="l03465"></a><span class="lineno"> 3465</span>&#160;    padding: 5,</div><div class="line"><a name="l03472"></a><span class="lineno"> 3472</span>&#160;    boundariesElement: <span class="stringliteral">&#39;viewport&#39;</span></div><div class="line"><a name="l03473"></a><span class="lineno"> 3473</span>&#160;  },</div><div class="line"><a name="l03474"></a><span class="lineno"> 3474</span>&#160;</div><div class="line"><a name="l03482"></a><span class="lineno"> 3482</span>&#160;  inner: {</div><div class="line"><a name="l03484"></a><span class="lineno"> 3484</span>&#160;    order: 700,</div><div class="line"><a name="l03486"></a><span class="lineno"> 3486</span>&#160;    enabled: <span class="keyword">false</span>,</div><div class="line"><a name="l03488"></a><span class="lineno"> 3488</span>&#160;    <a class="code" href="../../d3/dea/a00046.php#a8a938b10dab9fa9d43908785f7e2c002">fn</a>: inner</div><div class="line"><a name="l03489"></a><span class="lineno"> 3489</span>&#160;  },</div><div class="line"><a name="l03490"></a><span class="lineno"> 3490</span>&#160;</div><div class="line"><a name="l03501"></a><span class="lineno"> 3501</span>&#160;  hide: {</div><div class="line"><a name="l03503"></a><span class="lineno"> 3503</span>&#160;    order: 800,</div><div class="line"><a name="l03505"></a><span class="lineno"> 3505</span>&#160;    enabled: <span class="keyword">true</span>,</div><div class="line"><a name="l03507"></a><span class="lineno"> 3507</span>&#160;    <a class="code" href="../../d3/dea/a00046.php#a8a938b10dab9fa9d43908785f7e2c002">fn</a>: hide</div><div class="line"><a name="l03508"></a><span class="lineno"> 3508</span>&#160;  },</div><div class="line"><a name="l03509"></a><span class="lineno"> 3509</span>&#160;</div><div class="line"><a name="l03525"></a><span class="lineno"> 3525</span>&#160;  computeStyle: {</div><div class="line"><a name="l03527"></a><span class="lineno"> 3527</span>&#160;    order: 850,</div><div class="line"><a name="l03529"></a><span class="lineno"> 3529</span>&#160;    enabled: <span class="keyword">true</span>,</div><div class="line"><a name="l03531"></a><span class="lineno"> 3531</span>&#160;    <a class="code" href="../../d3/dea/a00046.php#a8a938b10dab9fa9d43908785f7e2c002">fn</a>: computeStyle,</div><div class="line"><a name="l03537"></a><span class="lineno"> 3537</span>&#160;    gpuAcceleration: <span class="keyword">true</span>,</div><div class="line"><a name="l03543"></a><span class="lineno"> 3543</span>&#160;    <a class="code" href="../../de/d11/a00021.php#a81e910173af87b1161e719a504d52407">x</a>: <span class="stringliteral">&#39;bottom&#39;</span>,</div><div class="line"><a name="l03549"></a><span class="lineno"> 3549</span>&#160;    <a class="code" href="../../de/d11/a00021.php#a0b31909b1cae9ed1db6ff042057fce60">y</a>: <span class="stringliteral">&#39;right&#39;</span></div><div class="line"><a name="l03550"></a><span class="lineno"> 3550</span>&#160;  },</div><div class="line"><a name="l03551"></a><span class="lineno"> 3551</span>&#160;</div><div class="line"><a name="l03567"></a><span class="lineno"> 3567</span>&#160;  applyStyle: {</div><div class="line"><a name="l03569"></a><span class="lineno"> 3569</span>&#160;    order: 900,</div><div class="line"><a name="l03571"></a><span class="lineno"> 3571</span>&#160;    enabled: <span class="keyword">true</span>,</div><div class="line"><a name="l03573"></a><span class="lineno"> 3573</span>&#160;    <a class="code" href="../../d3/dea/a00046.php#a8a938b10dab9fa9d43908785f7e2c002">fn</a>: applyStyle,</div><div class="line"><a name="l03575"></a><span class="lineno"> 3575</span>&#160;    onLoad: applyStyleOnLoad,</div><div class="line"><a name="l03582"></a><span class="lineno"> 3582</span>&#160;    gpuAcceleration: <a class="code" href="../../d3/dea/a00046.php#ae21cc36bf0d65014c717a481a3f8a468">undefined</a></div><div class="line"><a name="l03583"></a><span class="lineno"> 3583</span>&#160;  }</div><div class="line"><a name="l03584"></a><span class="lineno"> 3584</span>&#160;};</div><div class="line"><a name="l03585"></a><span class="lineno"> 3585</span>&#160;</div><div class="line"><a name="l03621"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a82ae6814d07287d0c9be02efec53e216"> 3621</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#a82ae6814d07287d0c9be02efec53e216">Defaults</a> = {</div><div class="line"><a name="l03626"></a><span class="lineno"> 3626</span>&#160;  placement: <span class="stringliteral">&#39;bottom&#39;</span>,</div><div class="line"><a name="l03627"></a><span class="lineno"> 3627</span>&#160;</div><div class="line"><a name="l03632"></a><span class="lineno"> 3632</span>&#160;  eventsEnabled: <span class="keyword">true</span>,</div><div class="line"><a name="l03633"></a><span class="lineno"> 3633</span>&#160;</div><div class="line"><a name="l03639"></a><span class="lineno"> 3639</span>&#160;  removeOnDestroy: <span class="keyword">false</span>,</div><div class="line"><a name="l03640"></a><span class="lineno"> 3640</span>&#160;</div><div class="line"><a name="l03647"></a><span class="lineno"> 3647</span>&#160;  onCreate: <span class="keyword">function</span> onCreate() {},</div><div class="line"><a name="l03648"></a><span class="lineno"> 3648</span>&#160;</div><div class="line"><a name="l03657"></a><span class="lineno"> 3657</span>&#160;  onUpdate: <span class="keyword">function</span> onUpdate() {},</div><div class="line"><a name="l03658"></a><span class="lineno"> 3658</span>&#160;</div><div class="line"><a name="l03664"></a><span class="lineno"> 3664</span>&#160;  modifiers: modifiers</div><div class="line"><a name="l03665"></a><span class="lineno"> 3665</span>&#160;};</div><div class="line"><a name="l03666"></a><span class="lineno"> 3666</span>&#160;</div><div class="line"><a name="l03677"></a><span class="lineno"> 3677</span>&#160;<span class="comment">// Utils</span></div><div class="line"><a name="l03678"></a><span class="lineno"> 3678</span>&#160;<span class="comment">// Methods</span></div><div class="line"><a name="l03679"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#ab34a4e248b9bfbf76de92f866779e0e6"> 3679</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#ab34a4e248b9bfbf76de92f866779e0e6">Popper</a> = <span class="keyword">function</span> () {</div><div class="line"><a name="l03688"></a><span class="lineno"> 3688</span>&#160;  <span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#ab34a4e248b9bfbf76de92f866779e0e6">Popper</a>(reference, popper) {</div><div class="line"><a name="l03689"></a><span class="lineno"> 3689</span>&#160;    var _this = <span class="keyword">this</span>;</div><div class="line"><a name="l03690"></a><span class="lineno"> 3690</span>&#160;</div><div class="line"><a name="l03691"></a><span class="lineno"> 3691</span>&#160;    var options = arguments.length &gt; 2 &amp;&amp; arguments[2] !== <a class="code" href="../../d3/dea/a00046.php#ae21cc36bf0d65014c717a481a3f8a468">undefined</a> ? arguments[2] : {};</div><div class="line"><a name="l03692"></a><span class="lineno"> 3692</span>&#160;    <a class="code" href="../../d4/d51/a00017.php#aa5a2e5bf0a535a30a11262d9df06151b">classCallCheck</a>(<span class="keyword">this</span>, Popper);</div><div class="line"><a name="l03693"></a><span class="lineno"> 3693</span>&#160;</div><div class="line"><a name="l03694"></a><span class="lineno"> 3694</span>&#160;    this.scheduleUpdate = <span class="keyword">function</span> () {</div><div class="line"><a name="l03695"></a><span class="lineno"> 3695</span>&#160;      <span class="keywordflow">return</span> requestAnimationFrame(_this.update);</div><div class="line"><a name="l03696"></a><span class="lineno"> 3696</span>&#160;    };</div><div class="line"><a name="l03697"></a><span class="lineno"> 3697</span>&#160;</div><div class="line"><a name="l03698"></a><span class="lineno"> 3698</span>&#160;    <span class="comment">// make update() debounced, so that it only runs at most once-per-tick</span></div><div class="line"><a name="l03699"></a><span class="lineno"> 3699</span>&#160;    this.update = <a class="code" href="../../d4/d51/a00017.php#a1086dd4e23ce39ca6cf57fb61ac759c7">debounce</a>(this.update.bind(<span class="keyword">this</span>));</div><div class="line"><a name="l03700"></a><span class="lineno"> 3700</span>&#160;</div><div class="line"><a name="l03701"></a><span class="lineno"> 3701</span>&#160;    <span class="comment">// with {} we create a new object with the options inside it</span></div><div class="line"><a name="l03702"></a><span class="lineno"> 3702</span>&#160;    this.options = _extends$1({}, Popper.Defaults, options);</div><div class="line"><a name="l03703"></a><span class="lineno"> 3703</span>&#160;</div><div class="line"><a name="l03704"></a><span class="lineno"> 3704</span>&#160;    <span class="comment">// init state</span></div><div class="line"><a name="l03705"></a><span class="lineno"> 3705</span>&#160;    this.state = {</div><div class="line"><a name="l03706"></a><span class="lineno"> 3706</span>&#160;      isDestroyed: <span class="keyword">false</span>,</div><div class="line"><a name="l03707"></a><span class="lineno"> 3707</span>&#160;      isCreated: <span class="keyword">false</span>,</div><div class="line"><a name="l03708"></a><span class="lineno"> 3708</span>&#160;      scrollParents: []</div><div class="line"><a name="l03709"></a><span class="lineno"> 3709</span>&#160;    };</div><div class="line"><a name="l03710"></a><span class="lineno"> 3710</span>&#160;</div><div class="line"><a name="l03711"></a><span class="lineno"> 3711</span>&#160;    <span class="comment">// get reference and popper elements (allow jQuery wrappers)</span></div><div class="line"><a name="l03712"></a><span class="lineno"> 3712</span>&#160;    this.reference = reference &amp;&amp; reference.jquery ? reference[0] : reference;</div><div class="line"><a name="l03713"></a><span class="lineno"> 3713</span>&#160;    this.popper = popper &amp;&amp; popper.jquery ? popper[0] : popper;</div><div class="line"><a name="l03714"></a><span class="lineno"> 3714</span>&#160;</div><div class="line"><a name="l03715"></a><span class="lineno"> 3715</span>&#160;    <span class="comment">// Deep merge modifiers options</span></div><div class="line"><a name="l03716"></a><span class="lineno"> 3716</span>&#160;    this.options.modifiers = {};</div><div class="line"><a name="l03717"></a><span class="lineno"> 3717</span>&#160;    Object.keys(_extends$1({}, Popper.Defaults.modifiers, options.modifiers)).forEach(<span class="keyword">function</span> (name) {</div><div class="line"><a name="l03718"></a><span class="lineno"> 3718</span>&#160;      _this.options.modifiers[name] = _extends$1({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});</div><div class="line"><a name="l03719"></a><span class="lineno"> 3719</span>&#160;    });</div><div class="line"><a name="l03720"></a><span class="lineno"> 3720</span>&#160;</div><div class="line"><a name="l03721"></a><span class="lineno"> 3721</span>&#160;    <span class="comment">// Refactoring modifiers&#39; list (Object =&gt; Array)</span></div><div class="line"><a name="l03722"></a><span class="lineno"> 3722</span>&#160;    this.modifiers = Object.keys(this.options.modifiers).map(<span class="keyword">function</span> (name) {</div><div class="line"><a name="l03723"></a><span class="lineno"> 3723</span>&#160;      <span class="keywordflow">return</span> _extends$1({</div><div class="line"><a name="l03724"></a><span class="lineno"> 3724</span>&#160;        name: name</div><div class="line"><a name="l03725"></a><span class="lineno"> 3725</span>&#160;      }, _this.options.modifiers[name]);</div><div class="line"><a name="l03726"></a><span class="lineno"> 3726</span>&#160;    })</div><div class="line"><a name="l03727"></a><span class="lineno"> 3727</span>&#160;    <span class="comment">// sort the modifiers by order</span></div><div class="line"><a name="l03728"></a><span class="lineno"> 3728</span>&#160;    .sort(<span class="keyword">function</span> (<a class="code" href="../../db/db2/a00020.php#ae8f6b400ed3390908c5cdeebed3a82b9">a</a>, <a class="code" href="../../db/db2/a00020.php#ac0431efac4d7c393d1e70b86115cb93f">b</a>) {</div><div class="line"><a name="l03729"></a><span class="lineno"> 3729</span>&#160;      <span class="keywordflow">return</span> <a class="code" href="../../db/db2/a00020.php#ae8f6b400ed3390908c5cdeebed3a82b9">a</a>.order - <a class="code" href="../../db/db2/a00020.php#ac0431efac4d7c393d1e70b86115cb93f">b</a>.order;</div><div class="line"><a name="l03730"></a><span class="lineno"> 3730</span>&#160;    });</div><div class="line"><a name="l03731"></a><span class="lineno"> 3731</span>&#160;</div><div class="line"><a name="l03732"></a><span class="lineno"> 3732</span>&#160;    <span class="comment">// modifiers have the ability to execute arbitrary code when Popper.js get inited</span></div><div class="line"><a name="l03733"></a><span class="lineno"> 3733</span>&#160;    <span class="comment">// such code is executed in the same order of its modifier</span></div><div class="line"><a name="l03734"></a><span class="lineno"> 3734</span>&#160;    <span class="comment">// they could add new properties to their options configuration</span></div><div class="line"><a name="l03735"></a><span class="lineno"> 3735</span>&#160;    <span class="comment">// BE AWARE: don&#39;t add options to `options.modifiers.name` but to `modifierOptions`!</span></div><div class="line"><a name="l03736"></a><span class="lineno"> 3736</span>&#160;    this.modifiers.forEach(<span class="keyword">function</span> (modifierOptions) {</div><div class="line"><a name="l03737"></a><span class="lineno"> 3737</span>&#160;      <span class="keywordflow">if</span> (modifierOptions.enabled &amp;&amp; isFunction(modifierOptions.onLoad)) {</div><div class="line"><a name="l03738"></a><span class="lineno"> 3738</span>&#160;        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);</div><div class="line"><a name="l03739"></a><span class="lineno"> 3739</span>&#160;      }</div><div class="line"><a name="l03740"></a><span class="lineno"> 3740</span>&#160;    });</div><div class="line"><a name="l03741"></a><span class="lineno"> 3741</span>&#160;</div><div class="line"><a name="l03742"></a><span class="lineno"> 3742</span>&#160;    <span class="comment">// fire the first update to position the popper in the right place</span></div><div class="line"><a name="l03743"></a><span class="lineno"> 3743</span>&#160;    this.update();</div><div class="line"><a name="l03744"></a><span class="lineno"> 3744</span>&#160;</div><div class="line"><a name="l03745"></a><span class="lineno"> 3745</span>&#160;    var eventsEnabled = this.options.eventsEnabled;</div><div class="line"><a name="l03746"></a><span class="lineno"> 3746</span>&#160;    <span class="keywordflow">if</span> (eventsEnabled) {</div><div class="line"><a name="l03747"></a><span class="lineno"> 3747</span>&#160;      <span class="comment">// setup event listeners, they will take care of update the position in specific situations</span></div><div class="line"><a name="l03748"></a><span class="lineno"> 3748</span>&#160;      this.enableEventListeners();</div><div class="line"><a name="l03749"></a><span class="lineno"> 3749</span>&#160;    }</div><div class="line"><a name="l03750"></a><span class="lineno"> 3750</span>&#160;</div><div class="line"><a name="l03751"></a><span class="lineno"> 3751</span>&#160;    this.state.eventsEnabled = eventsEnabled;</div><div class="line"><a name="l03752"></a><span class="lineno"> 3752</span>&#160;  }</div><div class="line"><a name="l03753"></a><span class="lineno"> 3753</span>&#160;</div><div class="line"><a name="l03754"></a><span class="lineno"> 3754</span>&#160;  <span class="comment">// We can&#39;t use class properties because they don&#39;t get listed in the</span></div><div class="line"><a name="l03755"></a><span class="lineno"> 3755</span>&#160;  <span class="comment">// class prototype and break stuff like Sinon stubs</span></div><div class="line"><a name="l03756"></a><span class="lineno"> 3756</span>&#160;</div><div class="line"><a name="l03757"></a><span class="lineno"> 3757</span>&#160;</div><div class="line"><a name="l03758"></a><span class="lineno"> 3758</span>&#160;  <a class="code" href="../../d4/d51/a00017.php#aaf3dfd019b0e65fefde9702c4b377344">createClass</a>(Popper, [{</div><div class="line"><a name="l03759"></a><span class="lineno"> 3759</span>&#160;    key: <span class="stringliteral">&#39;update&#39;</span>,</div><div class="line"><a name="l03760"></a><span class="lineno"> 3760</span>&#160;    value: <span class="keyword">function</span> update$$1() {</div><div class="line"><a name="l03761"></a><span class="lineno"> 3761</span>&#160;      <span class="keywordflow">return</span> update.call(<span class="keyword">this</span>);</div><div class="line"><a name="l03762"></a><span class="lineno"> 3762</span>&#160;    }</div><div class="line"><a name="l03763"></a><span class="lineno"> 3763</span>&#160;  }, {</div><div class="line"><a name="l03764"></a><span class="lineno"> 3764</span>&#160;    key: <span class="stringliteral">&#39;destroy&#39;</span>,</div><div class="line"><a name="l03765"></a><span class="lineno"> 3765</span>&#160;    value: <span class="keyword">function</span> destroy$$1() {</div><div class="line"><a name="l03766"></a><span class="lineno"> 3766</span>&#160;      <span class="keywordflow">return</span> destroy.call(<span class="keyword">this</span>);</div><div class="line"><a name="l03767"></a><span class="lineno"> 3767</span>&#160;    }</div><div class="line"><a name="l03768"></a><span class="lineno"> 3768</span>&#160;  }, {</div><div class="line"><a name="l03769"></a><span class="lineno"> 3769</span>&#160;    key: <span class="stringliteral">&#39;enableEventListeners&#39;</span>,</div><div class="line"><a name="l03770"></a><span class="lineno"> 3770</span>&#160;    value: <span class="keyword">function</span> enableEventListeners$$1() {</div><div class="line"><a name="l03771"></a><span class="lineno"> 3771</span>&#160;      <span class="keywordflow">return</span> enableEventListeners.call(<span class="keyword">this</span>);</div><div class="line"><a name="l03772"></a><span class="lineno"> 3772</span>&#160;    }</div><div class="line"><a name="l03773"></a><span class="lineno"> 3773</span>&#160;  }, {</div><div class="line"><a name="l03774"></a><span class="lineno"> 3774</span>&#160;    key: <span class="stringliteral">&#39;disableEventListeners&#39;</span>,</div><div class="line"><a name="l03775"></a><span class="lineno"> 3775</span>&#160;    value: <span class="keyword">function</span> disableEventListeners$$1() {</div><div class="line"><a name="l03776"></a><span class="lineno"> 3776</span>&#160;      <span class="keywordflow">return</span> disableEventListeners.call(<span class="keyword">this</span>);</div><div class="line"><a name="l03777"></a><span class="lineno"> 3777</span>&#160;    }</div><div class="line"><a name="l03778"></a><span class="lineno"> 3778</span>&#160;</div><div class="line"><a name="l03803"></a><span class="lineno"> 3803</span>&#160;  }]);</div><div class="line"><a name="l03804"></a><span class="lineno"> 3804</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#ab34a4e248b9bfbf76de92f866779e0e6">Popper</a>;</div><div class="line"><a name="l03805"></a><span class="lineno"> 3805</span>&#160;}();</div><div class="line"><a name="l03806"></a><span class="lineno"> 3806</span>&#160;</div><div class="line"><a name="l03828"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a6c4547b977e8248fe4d4d24817f7245c"> 3828</a></span>&#160;Popper.Utils = (typeof window !== <span class="stringliteral">&#39;undefined&#39;</span> ? window : <a class="code" href="../../d4/d51/a00017.php#a57efe929cc6b44042891d05e15cec785">global</a>).PopperUtils;</div><div class="line"><a name="l03829"></a><span class="lineno"> 3829</span>&#160;Popper.placements = <a class="code" href="../../d4/d51/a00017.php#a0e37ae01d446a8be7bf004a86805ffa6">placements</a>;</div><div class="line"><a name="l03830"></a><span class="lineno"> 3830</span>&#160;Popper.Defaults = <a class="code" href="../../d4/d51/a00017.php#a82ae6814d07287d0c9be02efec53e216">Defaults</a>;</div><div class="line"><a name="l03831"></a><span class="lineno"> 3831</span>&#160;</div><div class="line"><a name="l03839"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a1ad233b38aa8a375e2ba938ca959bd15"> 3839</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#a1ad233b38aa8a375e2ba938ca959bd15">Dropdown</a> = <span class="keyword">function</span> ($$$1) {</div><div class="line"><a name="l03845"></a><span class="lineno"> 3845</span>&#160;  var NAME = <span class="stringliteral">&#39;dropdown&#39;</span>;</div><div class="line"><a name="l03846"></a><span class="lineno"> 3846</span>&#160;  var <a class="code" href="../../db/db2/a00020.php#a3635f2df5844f69204b70bf7b3983587">VERSION</a> = <span class="stringliteral">&#39;4.0.0&#39;</span>;</div><div class="line"><a name="l03847"></a><span class="lineno"> 3847</span>&#160;  var DATA_KEY = <span class="stringliteral">&#39;bs.dropdown&#39;</span>;</div><div class="line"><a name="l03848"></a><span class="lineno"> 3848</span>&#160;  var EVENT_KEY = <span class="stringliteral">&quot;.&quot;</span> + DATA_KEY;</div><div class="line"><a name="l03849"></a><span class="lineno"> 3849</span>&#160;  var DATA_API_KEY = <span class="stringliteral">&#39;.data-api&#39;</span>;</div><div class="line"><a name="l03850"></a><span class="lineno"> 3850</span>&#160;  var JQUERY_NO_CONFLICT = $$$1.fn[NAME];</div><div class="line"><a name="l03851"></a><span class="lineno"> 3851</span>&#160;  var ESCAPE_KEYCODE = 27; <span class="comment">// KeyboardEvent.which value for Escape (Esc) key</span></div><div class="line"><a name="l03852"></a><span class="lineno"> 3852</span>&#160;</div><div class="line"><a name="l03853"></a><span class="lineno"> 3853</span>&#160;  var SPACE_KEYCODE = 32; <span class="comment">// KeyboardEvent.which value for space key</span></div><div class="line"><a name="l03854"></a><span class="lineno"> 3854</span>&#160;</div><div class="line"><a name="l03855"></a><span class="lineno"> 3855</span>&#160;  var TAB_KEYCODE = 9; <span class="comment">// KeyboardEvent.which value for tab key</span></div><div class="line"><a name="l03856"></a><span class="lineno"> 3856</span>&#160;</div><div class="line"><a name="l03857"></a><span class="lineno"> 3857</span>&#160;  var ARROW_UP_KEYCODE = 38; <span class="comment">// KeyboardEvent.which value for up arrow key</span></div><div class="line"><a name="l03858"></a><span class="lineno"> 3858</span>&#160;</div><div class="line"><a name="l03859"></a><span class="lineno"> 3859</span>&#160;  var ARROW_DOWN_KEYCODE = 40; <span class="comment">// KeyboardEvent.which value for down arrow key</span></div><div class="line"><a name="l03860"></a><span class="lineno"> 3860</span>&#160;</div><div class="line"><a name="l03861"></a><span class="lineno"> 3861</span>&#160;  var RIGHT_MOUSE_BUTTON_WHICH = 3; <span class="comment">// MouseEvent.which value for the right button (assuming a right-handed mouse)</span></div><div class="line"><a name="l03862"></a><span class="lineno"> 3862</span>&#160;</div><div class="line"><a name="l03863"></a><span class="lineno"> 3863</span>&#160;  var REGEXP_KEYDOWN = <span class="keyword">new</span> RegExp(ARROW_UP_KEYCODE + <span class="stringliteral">&quot;|&quot;</span> + ARROW_DOWN_KEYCODE + <span class="stringliteral">&quot;|&quot;</span> + ESCAPE_KEYCODE);</div><div class="line"><a name="l03864"></a><span class="lineno"> 3864</span>&#160;  var Event = {</div><div class="line"><a name="l03865"></a><span class="lineno"> 3865</span>&#160;    HIDE: <span class="stringliteral">&quot;hide&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l03866"></a><span class="lineno"> 3866</span>&#160;    HIDDEN: <span class="stringliteral">&quot;hidden&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l03867"></a><span class="lineno"> 3867</span>&#160;    SHOW: <span class="stringliteral">&quot;show&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l03868"></a><span class="lineno"> 3868</span>&#160;    SHOWN: <span class="stringliteral">&quot;shown&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l03869"></a><span class="lineno"> 3869</span>&#160;    CLICK: <span class="stringliteral">&quot;click&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l03870"></a><span class="lineno"> 3870</span>&#160;    CLICK_DATA_API: <span class="stringliteral">&quot;click&quot;</span> + EVENT_KEY + DATA_API_KEY,</div><div class="line"><a name="l03871"></a><span class="lineno"> 3871</span>&#160;    KEYDOWN_DATA_API: <span class="stringliteral">&quot;keydown&quot;</span> + EVENT_KEY + DATA_API_KEY,</div><div class="line"><a name="l03872"></a><span class="lineno"> 3872</span>&#160;    KEYUP_DATA_API: <span class="stringliteral">&quot;keyup&quot;</span> + EVENT_KEY + DATA_API_KEY</div><div class="line"><a name="l03873"></a><span class="lineno"> 3873</span>&#160;  };</div><div class="line"><a name="l03874"></a><span class="lineno"> 3874</span>&#160;  var ClassName = {</div><div class="line"><a name="l03875"></a><span class="lineno"> 3875</span>&#160;    DISABLED: <span class="stringliteral">&#39;disabled&#39;</span>,</div><div class="line"><a name="l03876"></a><span class="lineno"> 3876</span>&#160;    SHOW: <span class="stringliteral">&#39;show&#39;</span>,</div><div class="line"><a name="l03877"></a><span class="lineno"> 3877</span>&#160;    DROPUP: <span class="stringliteral">&#39;dropup&#39;</span>,</div><div class="line"><a name="l03878"></a><span class="lineno"> 3878</span>&#160;    DROPRIGHT: <span class="stringliteral">&#39;dropright&#39;</span>,</div><div class="line"><a name="l03879"></a><span class="lineno"> 3879</span>&#160;    DROPLEFT: <span class="stringliteral">&#39;dropleft&#39;</span>,</div><div class="line"><a name="l03880"></a><span class="lineno"> 3880</span>&#160;    MENURIGHT: <span class="stringliteral">&#39;dropdown-menu-right&#39;</span>,</div><div class="line"><a name="l03881"></a><span class="lineno"> 3881</span>&#160;    MENULEFT: <span class="stringliteral">&#39;dropdown-menu-left&#39;</span>,</div><div class="line"><a name="l03882"></a><span class="lineno"> 3882</span>&#160;    POSITION_STATIC: <span class="stringliteral">&#39;position-static&#39;</span></div><div class="line"><a name="l03883"></a><span class="lineno"> 3883</span>&#160;  };</div><div class="line"><a name="l03884"></a><span class="lineno"> 3884</span>&#160;  var Selector = {</div><div class="line"><a name="l03885"></a><span class="lineno"> 3885</span>&#160;    DATA_TOGGLE: <span class="stringliteral">&#39;[data-toggle=&quot;dropdown&quot;]&#39;</span>,</div><div class="line"><a name="l03886"></a><span class="lineno"> 3886</span>&#160;    FORM_CHILD: <span class="stringliteral">&#39;.dropdown form&#39;</span>,</div><div class="line"><a name="l03887"></a><span class="lineno"> 3887</span>&#160;    MENU: <span class="stringliteral">&#39;.dropdown-menu&#39;</span>,</div><div class="line"><a name="l03888"></a><span class="lineno"> 3888</span>&#160;    NAVBAR_NAV: <span class="stringliteral">&#39;.navbar-nav&#39;</span>,</div><div class="line"><a name="l03889"></a><span class="lineno"> 3889</span>&#160;    VISIBLE_ITEMS: <span class="stringliteral">&#39;.dropdown-menu .dropdown-item:not(.disabled)&#39;</span></div><div class="line"><a name="l03890"></a><span class="lineno"> 3890</span>&#160;  };</div><div class="line"><a name="l03891"></a><span class="lineno"> 3891</span>&#160;  var AttachmentMap = {</div><div class="line"><a name="l03892"></a><span class="lineno"> 3892</span>&#160;    TOP: <span class="stringliteral">&#39;top-start&#39;</span>,</div><div class="line"><a name="l03893"></a><span class="lineno"> 3893</span>&#160;    TOPEND: <span class="stringliteral">&#39;top-end&#39;</span>,</div><div class="line"><a name="l03894"></a><span class="lineno"> 3894</span>&#160;    BOTTOM: <span class="stringliteral">&#39;bottom-start&#39;</span>,</div><div class="line"><a name="l03895"></a><span class="lineno"> 3895</span>&#160;    BOTTOMEND: <span class="stringliteral">&#39;bottom-end&#39;</span>,</div><div class="line"><a name="l03896"></a><span class="lineno"> 3896</span>&#160;    RIGHT: <span class="stringliteral">&#39;right-start&#39;</span>,</div><div class="line"><a name="l03897"></a><span class="lineno"> 3897</span>&#160;    RIGHTEND: <span class="stringliteral">&#39;right-end&#39;</span>,</div><div class="line"><a name="l03898"></a><span class="lineno"> 3898</span>&#160;    LEFT: <span class="stringliteral">&#39;left-start&#39;</span>,</div><div class="line"><a name="l03899"></a><span class="lineno"> 3899</span>&#160;    LEFTEND: <span class="stringliteral">&#39;left-end&#39;</span></div><div class="line"><a name="l03900"></a><span class="lineno"> 3900</span>&#160;  };</div><div class="line"><a name="l03901"></a><span class="lineno"> 3901</span>&#160;  var Default = {</div><div class="line"><a name="l03902"></a><span class="lineno"> 3902</span>&#160;    offset: 0,</div><div class="line"><a name="l03903"></a><span class="lineno"> 3903</span>&#160;    flip: <span class="keyword">true</span>,</div><div class="line"><a name="l03904"></a><span class="lineno"> 3904</span>&#160;    boundary: <span class="stringliteral">&#39;scrollParent&#39;</span></div><div class="line"><a name="l03905"></a><span class="lineno"> 3905</span>&#160;  };</div><div class="line"><a name="l03906"></a><span class="lineno"> 3906</span>&#160;  var DefaultType = {</div><div class="line"><a name="l03907"></a><span class="lineno"> 3907</span>&#160;    offset: <span class="stringliteral">&#39;(number|string|function)&#39;</span>,</div><div class="line"><a name="l03908"></a><span class="lineno"> 3908</span>&#160;    flip: <span class="stringliteral">&#39;boolean&#39;</span>,</div><div class="line"><a name="l03909"></a><span class="lineno"> 3909</span>&#160;    boundary: <span class="stringliteral">&#39;(string|element)&#39;</span></div><div class="line"><a name="l03916"></a><span class="lineno"> 3916</span>&#160;  };</div><div class="line"><a name="l03917"></a><span class="lineno"> 3917</span>&#160;</div><div class="line"><a name="l03918"></a><span class="lineno"> 3918</span>&#160;  var Dropdown =</div><div class="line"><a name="l03919"></a><span class="lineno"> 3919</span>&#160;  <span class="comment">/*#__PURE__*/</span></div><div class="line"><a name="l03920"></a><span class="lineno"> 3920</span>&#160;  <span class="keyword">function</span> () {</div><div class="line"><a name="l03921"></a><span class="lineno"> 3921</span>&#160;    <span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#a1ad233b38aa8a375e2ba938ca959bd15">Dropdown</a>(element, config) {</div><div class="line"><a name="l03922"></a><span class="lineno"> 3922</span>&#160;      this._element = element;</div><div class="line"><a name="l03923"></a><span class="lineno"> 3923</span>&#160;      this._popper = null;</div><div class="line"><a name="l03924"></a><span class="lineno"> 3924</span>&#160;      this._config = this._getConfig(config);</div><div class="line"><a name="l03925"></a><span class="lineno"> 3925</span>&#160;      this._menu = this._getMenuElement();</div><div class="line"><a name="l03926"></a><span class="lineno"> 3926</span>&#160;      this._inNavbar = this._detectNavbar();</div><div class="line"><a name="l03927"></a><span class="lineno"> 3927</span>&#160;</div><div class="line"><a name="l03928"></a><span class="lineno"> 3928</span>&#160;      this._addEventListeners();</div><div class="line"><a name="l03929"></a><span class="lineno"> 3929</span>&#160;    } <span class="comment">// Getters</span></div><div class="line"><a name="l03930"></a><span class="lineno"> 3930</span>&#160;</div><div class="line"><a name="l03931"></a><span class="lineno"> 3931</span>&#160;</div><div class="line"><a name="l03932"></a><span class="lineno"> 3932</span>&#160;    var _proto = Dropdown.prototype;</div><div class="line"><a name="l03933"></a><span class="lineno"> 3933</span>&#160;</div><div class="line"><a name="l03934"></a><span class="lineno"> 3934</span>&#160;    <span class="comment">// Public</span></div><div class="line"><a name="l03935"></a><span class="lineno"> 3935</span>&#160;    _proto.toggle = <span class="keyword">function</span> <a class="code" href="../../db/db2/a00020.php#aa8e797a9bda5e7e313be3518054164a3">toggle</a>() {</div><div class="line"><a name="l03936"></a><span class="lineno"> 3936</span>&#160;      <span class="keywordflow">if</span> (this._element.disabled || $$$1(<span class="keyword">this</span>._element).hasClass(ClassName.DISABLED)) {</div><div class="line"><a name="l03937"></a><span class="lineno"> 3937</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l03938"></a><span class="lineno"> 3938</span>&#160;      }</div><div class="line"><a name="l03939"></a><span class="lineno"> 3939</span>&#160;</div><div class="line"><a name="l03940"></a><span class="lineno"> 3940</span>&#160;      var parent = Dropdown._getParentFromElement(this._element);</div><div class="line"><a name="l03941"></a><span class="lineno"> 3941</span>&#160;</div><div class="line"><a name="l03942"></a><span class="lineno"> 3942</span>&#160;      var isActive = $$$1(this._menu).hasClass(ClassName.SHOW);</div><div class="line"><a name="l03943"></a><span class="lineno"> 3943</span>&#160;</div><div class="line"><a name="l03944"></a><span class="lineno"> 3944</span>&#160;      Dropdown._clearMenus();</div><div class="line"><a name="l03945"></a><span class="lineno"> 3945</span>&#160;</div><div class="line"><a name="l03946"></a><span class="lineno"> 3946</span>&#160;      <span class="keywordflow">if</span> (isActive) {</div><div class="line"><a name="l03947"></a><span class="lineno"> 3947</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l03948"></a><span class="lineno"> 3948</span>&#160;      }</div><div class="line"><a name="l03949"></a><span class="lineno"> 3949</span>&#160;</div><div class="line"><a name="l03950"></a><span class="lineno"> 3950</span>&#160;      var relatedTarget = {</div><div class="line"><a name="l03951"></a><span class="lineno"> 3951</span>&#160;        relatedTarget: this._element</div><div class="line"><a name="l03952"></a><span class="lineno"> 3952</span>&#160;      };</div><div class="line"><a name="l03953"></a><span class="lineno"> 3953</span>&#160;      var showEvent = $$$1.Event(Event.SHOW, relatedTarget);</div><div class="line"><a name="l03954"></a><span class="lineno"> 3954</span>&#160;      $$$1(parent).trigger(showEvent);</div><div class="line"><a name="l03955"></a><span class="lineno"> 3955</span>&#160;</div><div class="line"><a name="l03956"></a><span class="lineno"> 3956</span>&#160;      <span class="keywordflow">if</span> (showEvent.isDefaultPrevented()) {</div><div class="line"><a name="l03957"></a><span class="lineno"> 3957</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l03958"></a><span class="lineno"> 3958</span>&#160;      } <span class="comment">// Disable totally Popper.js for Dropdown in Navbar</span></div><div class="line"><a name="l03959"></a><span class="lineno"> 3959</span>&#160;</div><div class="line"><a name="l03960"></a><span class="lineno"> 3960</span>&#160;</div><div class="line"><a name="l03961"></a><span class="lineno"> 3961</span>&#160;      <span class="keywordflow">if</span> (!this._inNavbar) {</div><div class="line"><a name="l03966"></a><span class="lineno"> 3966</span>&#160;        <span class="keywordflow">if</span> (typeof Popper === <span class="stringliteral">&#39;undefined&#39;</span>) {</div><div class="line"><a name="l03967"></a><span class="lineno"> 3967</span>&#160;          <span class="keywordflow">throw</span> <span class="keyword">new</span> TypeError(<span class="stringliteral">&#39;Bootstrap dropdown require Popper.js (https://popper.js.org)&#39;</span>);</div><div class="line"><a name="l03968"></a><span class="lineno"> 3968</span>&#160;        }</div><div class="line"><a name="l03969"></a><span class="lineno"> 3969</span>&#160;</div><div class="line"><a name="l03970"></a><span class="lineno"> 3970</span>&#160;        var element = this._element; <span class="comment">// For dropup with alignment we use the parent as popper container</span></div><div class="line"><a name="l03971"></a><span class="lineno"> 3971</span>&#160;</div><div class="line"><a name="l03972"></a><span class="lineno"> 3972</span>&#160;        <span class="keywordflow">if</span> ($$$1(parent).hasClass(ClassName.DROPUP)) {</div><div class="line"><a name="l03973"></a><span class="lineno"> 3973</span>&#160;          <span class="keywordflow">if</span> ($$$1(this._menu).hasClass(ClassName.MENULEFT) || $$$1(<span class="keyword">this</span>._menu).hasClass(ClassName.MENURIGHT)) {</div><div class="line"><a name="l03974"></a><span class="lineno"> 3974</span>&#160;            element = parent;</div><div class="line"><a name="l03975"></a><span class="lineno"> 3975</span>&#160;          }</div><div class="line"><a name="l03976"></a><span class="lineno"> 3976</span>&#160;        } <span class="comment">// If boundary is not `scrollParent`, then set position to `static`</span></div><div class="line"><a name="l03977"></a><span class="lineno"> 3977</span>&#160;        <span class="comment">// to allow the menu to &quot;escape&quot; the scroll parent&#39;s boundaries</span></div><div class="line"><a name="l03978"></a><span class="lineno"> 3978</span>&#160;        <span class="comment">// https://github.com/twbs/bootstrap/issues/24251</span></div><div class="line"><a name="l03979"></a><span class="lineno"> 3979</span>&#160;</div><div class="line"><a name="l03980"></a><span class="lineno"> 3980</span>&#160;</div><div class="line"><a name="l03981"></a><span class="lineno"> 3981</span>&#160;        <span class="keywordflow">if</span> (this._config.boundary !== <span class="stringliteral">&#39;scrollParent&#39;</span>) {</div><div class="line"><a name="l03982"></a><span class="lineno"> 3982</span>&#160;          $$$1(parent).addClass(ClassName.POSITION_STATIC);</div><div class="line"><a name="l03983"></a><span class="lineno"> 3983</span>&#160;        }</div><div class="line"><a name="l03984"></a><span class="lineno"> 3984</span>&#160;</div><div class="line"><a name="l03985"></a><span class="lineno"> 3985</span>&#160;        this._popper = <span class="keyword">new</span> <a class="code" href="../../d4/d51/a00017.php#ab34a4e248b9bfbf76de92f866779e0e6">Popper</a>(element, this._menu, this._getPopperConfig());</div><div class="line"><a name="l03986"></a><span class="lineno"> 3986</span>&#160;      } <span class="comment">// If this is a touch-enabled device we add extra</span></div><div class="line"><a name="l03987"></a><span class="lineno"> 3987</span>&#160;      <span class="comment">// empty mouseover listeners to the body&#39;s immediate children;</span></div><div class="line"><a name="l03988"></a><span class="lineno"> 3988</span>&#160;      <span class="comment">// only needed because of broken event delegation on iOS</span></div><div class="line"><a name="l03989"></a><span class="lineno"> 3989</span>&#160;      <span class="comment">// https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html</span></div><div class="line"><a name="l03990"></a><span class="lineno"> 3990</span>&#160;</div><div class="line"><a name="l03991"></a><span class="lineno"> 3991</span>&#160;</div><div class="line"><a name="l03992"></a><span class="lineno"> 3992</span>&#160;      <span class="keywordflow">if</span> (<span class="stringliteral">&#39;ontouchstart&#39;</span> in document.documentElement &amp;&amp; $$$1(parent).closest(Selector.NAVBAR_NAV).length === 0) {</div><div class="line"><a name="l03993"></a><span class="lineno"> 3993</span>&#160;        $$$1(<span class="stringliteral">&#39;body&#39;</span>).children().on(<span class="stringliteral">&#39;mouseover&#39;</span>, null, $$$1.noop);</div><div class="line"><a name="l03994"></a><span class="lineno"> 3994</span>&#160;      }</div><div class="line"><a name="l03995"></a><span class="lineno"> 3995</span>&#160;</div><div class="line"><a name="l03996"></a><span class="lineno"> 3996</span>&#160;      this._element.focus();</div><div class="line"><a name="l03997"></a><span class="lineno"> 3997</span>&#160;</div><div class="line"><a name="l03998"></a><span class="lineno"> 3998</span>&#160;      this._element.setAttribute(<span class="stringliteral">&#39;aria-expanded&#39;</span>, <span class="keyword">true</span>);</div><div class="line"><a name="l03999"></a><span class="lineno"> 3999</span>&#160;</div><div class="line"><a name="l04000"></a><span class="lineno"> 4000</span>&#160;      $$$1(this._menu).toggleClass(ClassName.SHOW);</div><div class="line"><a name="l04001"></a><span class="lineno"> 4001</span>&#160;      $$$1(parent).toggleClass(ClassName.SHOW).trigger($$$1.Event(Event.SHOWN, relatedTarget));</div><div class="line"><a name="l04002"></a><span class="lineno"> 4002</span>&#160;    };</div><div class="line"><a name="l04003"></a><span class="lineno"> 4003</span>&#160;</div><div class="line"><a name="l04004"></a><span class="lineno"> 4004</span>&#160;    _proto.dispose = <span class="keyword">function</span> dispose() {</div><div class="line"><a name="l04005"></a><span class="lineno"> 4005</span>&#160;      $$$1.removeData(this._element, DATA_KEY);</div><div class="line"><a name="l04006"></a><span class="lineno"> 4006</span>&#160;      $$$1(this._element).off(EVENT_KEY);</div><div class="line"><a name="l04007"></a><span class="lineno"> 4007</span>&#160;      this._element = null;</div><div class="line"><a name="l04008"></a><span class="lineno"> 4008</span>&#160;      this._menu = null;</div><div class="line"><a name="l04009"></a><span class="lineno"> 4009</span>&#160;</div><div class="line"><a name="l04010"></a><span class="lineno"> 4010</span>&#160;      <span class="keywordflow">if</span> (this._popper !== null) {</div><div class="line"><a name="l04011"></a><span class="lineno"> 4011</span>&#160;        this._popper.destroy();</div><div class="line"><a name="l04012"></a><span class="lineno"> 4012</span>&#160;</div><div class="line"><a name="l04013"></a><span class="lineno"> 4013</span>&#160;        this._popper = null;</div><div class="line"><a name="l04014"></a><span class="lineno"> 4014</span>&#160;      }</div><div class="line"><a name="l04015"></a><span class="lineno"> 4015</span>&#160;    };</div><div class="line"><a name="l04016"></a><span class="lineno"> 4016</span>&#160;</div><div class="line"><a name="l04017"></a><span class="lineno"> 4017</span>&#160;    _proto.update = <span class="keyword">function</span> update() {</div><div class="line"><a name="l04018"></a><span class="lineno"> 4018</span>&#160;      this._inNavbar = this._detectNavbar();</div><div class="line"><a name="l04019"></a><span class="lineno"> 4019</span>&#160;</div><div class="line"><a name="l04020"></a><span class="lineno"> 4020</span>&#160;      <span class="keywordflow">if</span> (this._popper !== null) {</div><div class="line"><a name="l04021"></a><span class="lineno"> 4021</span>&#160;        this._popper.scheduleUpdate();</div><div class="line"><a name="l04022"></a><span class="lineno"> 4022</span>&#160;      }</div><div class="line"><a name="l04023"></a><span class="lineno"> 4023</span>&#160;    }; <span class="comment">// Private</span></div><div class="line"><a name="l04024"></a><span class="lineno"> 4024</span>&#160;</div><div class="line"><a name="l04025"></a><span class="lineno"> 4025</span>&#160;</div><div class="line"><a name="l04026"></a><span class="lineno"> 4026</span>&#160;    _proto._addEventListeners = <span class="keyword">function</span> _addEventListeners() {</div><div class="line"><a name="l04027"></a><span class="lineno"> 4027</span>&#160;      var _this = <span class="keyword">this</span>;</div><div class="line"><a name="l04028"></a><span class="lineno"> 4028</span>&#160;</div><div class="line"><a name="l04029"></a><span class="lineno"> 4029</span>&#160;      $$$1(this._element).on(Event.CLICK, function (event) {</div><div class="line"><a name="l04030"></a><span class="lineno"> 4030</span>&#160;        <span class="keyword">event</span>.preventDefault();</div><div class="line"><a name="l04031"></a><span class="lineno"> 4031</span>&#160;        <span class="keyword">event</span>.stopPropagation();</div><div class="line"><a name="l04032"></a><span class="lineno"> 4032</span>&#160;</div><div class="line"><a name="l04033"></a><span class="lineno"> 4033</span>&#160;        _this.toggle();</div><div class="line"><a name="l04034"></a><span class="lineno"> 4034</span>&#160;      });</div><div class="line"><a name="l04035"></a><span class="lineno"> 4035</span>&#160;    };</div><div class="line"><a name="l04036"></a><span class="lineno"> 4036</span>&#160;</div><div class="line"><a name="l04037"></a><span class="lineno"> 4037</span>&#160;    _proto._getConfig = <span class="keyword">function</span> _getConfig(config) {</div><div class="line"><a name="l04038"></a><span class="lineno"> 4038</span>&#160;      config = <a class="code" href="../../d4/d51/a00017.php#ac2eea16a19b83a9509e2f9188c0fdc0f">_extends</a>({}, this.constructor.Default, $$$1(this._element).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(), config);</div><div class="line"><a name="l04039"></a><span class="lineno"> 4039</span>&#160;      Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);</div><div class="line"><a name="l04040"></a><span class="lineno"> 4040</span>&#160;      <span class="keywordflow">return</span> config;</div><div class="line"><a name="l04041"></a><span class="lineno"> 4041</span>&#160;    };</div><div class="line"><a name="l04042"></a><span class="lineno"> 4042</span>&#160;</div><div class="line"><a name="l04043"></a><span class="lineno"> 4043</span>&#160;    _proto._getMenuElement = <span class="keyword">function</span> _getMenuElement() {</div><div class="line"><a name="l04044"></a><span class="lineno"> 4044</span>&#160;      <span class="keywordflow">if</span> (!this._menu) {</div><div class="line"><a name="l04045"></a><span class="lineno"> 4045</span>&#160;        var parent = Dropdown._getParentFromElement(this._element);</div><div class="line"><a name="l04046"></a><span class="lineno"> 4046</span>&#160;</div><div class="line"><a name="l04047"></a><span class="lineno"> 4047</span>&#160;        this._menu = $$$1(parent).find(Selector.MENU)[0];</div><div class="line"><a name="l04048"></a><span class="lineno"> 4048</span>&#160;      }</div><div class="line"><a name="l04049"></a><span class="lineno"> 4049</span>&#160;</div><div class="line"><a name="l04050"></a><span class="lineno"> 4050</span>&#160;      <span class="keywordflow">return</span> this._menu;</div><div class="line"><a name="l04051"></a><span class="lineno"> 4051</span>&#160;    };</div><div class="line"><a name="l04052"></a><span class="lineno"> 4052</span>&#160;</div><div class="line"><a name="l04053"></a><span class="lineno"> 4053</span>&#160;    _proto._getPlacement = <span class="keyword">function</span> _getPlacement() {</div><div class="line"><a name="l04054"></a><span class="lineno"> 4054</span>&#160;      var $parentDropdown = $$$1(this._element).parent();</div><div class="line"><a name="l04055"></a><span class="lineno"> 4055</span>&#160;      var placement = AttachmentMap.BOTTOM; <span class="comment">// Handle dropup</span></div><div class="line"><a name="l04056"></a><span class="lineno"> 4056</span>&#160;</div><div class="line"><a name="l04057"></a><span class="lineno"> 4057</span>&#160;      <span class="keywordflow">if</span> ($parentDropdown.hasClass(ClassName.DROPUP)) {</div><div class="line"><a name="l04058"></a><span class="lineno"> 4058</span>&#160;        placement = AttachmentMap.TOP;</div><div class="line"><a name="l04059"></a><span class="lineno"> 4059</span>&#160;</div><div class="line"><a name="l04060"></a><span class="lineno"> 4060</span>&#160;        <span class="keywordflow">if</span> ($$$1(this._menu).hasClass(ClassName.MENURIGHT)) {</div><div class="line"><a name="l04061"></a><span class="lineno"> 4061</span>&#160;          placement = AttachmentMap.TOPEND;</div><div class="line"><a name="l04062"></a><span class="lineno"> 4062</span>&#160;        }</div><div class="line"><a name="l04063"></a><span class="lineno"> 4063</span>&#160;      } <span class="keywordflow">else</span> <span class="keywordflow">if</span> ($parentDropdown.hasClass(ClassName.DROPRIGHT)) {</div><div class="line"><a name="l04064"></a><span class="lineno"> 4064</span>&#160;        placement = AttachmentMap.RIGHT;</div><div class="line"><a name="l04065"></a><span class="lineno"> 4065</span>&#160;      } <span class="keywordflow">else</span> <span class="keywordflow">if</span> ($parentDropdown.hasClass(ClassName.DROPLEFT)) {</div><div class="line"><a name="l04066"></a><span class="lineno"> 4066</span>&#160;        placement = AttachmentMap.LEFT;</div><div class="line"><a name="l04067"></a><span class="lineno"> 4067</span>&#160;      } <span class="keywordflow">else</span> <span class="keywordflow">if</span> ($$$1(this._menu).hasClass(ClassName.MENURIGHT)) {</div><div class="line"><a name="l04068"></a><span class="lineno"> 4068</span>&#160;        placement = AttachmentMap.BOTTOMEND;</div><div class="line"><a name="l04069"></a><span class="lineno"> 4069</span>&#160;      }</div><div class="line"><a name="l04070"></a><span class="lineno"> 4070</span>&#160;</div><div class="line"><a name="l04071"></a><span class="lineno"> 4071</span>&#160;      <span class="keywordflow">return</span> placement;</div><div class="line"><a name="l04072"></a><span class="lineno"> 4072</span>&#160;    };</div><div class="line"><a name="l04073"></a><span class="lineno"> 4073</span>&#160;</div><div class="line"><a name="l04074"></a><span class="lineno"> 4074</span>&#160;    _proto._detectNavbar = <span class="keyword">function</span> _detectNavbar() {</div><div class="line"><a name="l04075"></a><span class="lineno"> 4075</span>&#160;      <span class="keywordflow">return</span> $$$1(this._element).closest(<span class="stringliteral">&#39;.navbar&#39;</span>).length &gt; 0;</div><div class="line"><a name="l04076"></a><span class="lineno"> 4076</span>&#160;    };</div><div class="line"><a name="l04077"></a><span class="lineno"> 4077</span>&#160;</div><div class="line"><a name="l04078"></a><span class="lineno"> 4078</span>&#160;    _proto._getPopperConfig = <span class="keyword">function</span> _getPopperConfig() {</div><div class="line"><a name="l04079"></a><span class="lineno"> 4079</span>&#160;      var _this2 = <span class="keyword">this</span>;</div><div class="line"><a name="l04080"></a><span class="lineno"> 4080</span>&#160;</div><div class="line"><a name="l04081"></a><span class="lineno"> 4081</span>&#160;      var offsetConf = {};</div><div class="line"><a name="l04082"></a><span class="lineno"> 4082</span>&#160;</div><div class="line"><a name="l04083"></a><span class="lineno"> 4083</span>&#160;      <span class="keywordflow">if</span> (typeof this._config.offset === <span class="stringliteral">&#39;function&#39;</span>) {</div><div class="line"><a name="l04084"></a><span class="lineno"> 4084</span>&#160;        offsetConf.fn = <span class="keyword">function</span> (<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>) {</div><div class="line"><a name="l04085"></a><span class="lineno"> 4085</span>&#160;          <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets = <a class="code" href="../../d4/d51/a00017.php#ac2eea16a19b83a9509e2f9188c0fdc0f">_extends</a>({}, <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets, _this2._config.offset(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.offsets) || {});</div><div class="line"><a name="l04086"></a><span class="lineno"> 4086</span>&#160;          <span class="keywordflow">return</span> <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>;</div><div class="line"><a name="l04087"></a><span class="lineno"> 4087</span>&#160;        };</div><div class="line"><a name="l04088"></a><span class="lineno"> 4088</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l04089"></a><span class="lineno"> 4089</span>&#160;        offsetConf.offset = this._config.offset;</div><div class="line"><a name="l04090"></a><span class="lineno"> 4090</span>&#160;      }</div><div class="line"><a name="l04091"></a><span class="lineno"> 4091</span>&#160;</div><div class="line"><a name="l04092"></a><span class="lineno"> 4092</span>&#160;      var popperConfig = {</div><div class="line"><a name="l04093"></a><span class="lineno"> 4093</span>&#160;        placement: this._getPlacement(),</div><div class="line"><a name="l04094"></a><span class="lineno"> 4094</span>&#160;        modifiers: {</div><div class="line"><a name="l04095"></a><span class="lineno"> 4095</span>&#160;          offset: offsetConf,</div><div class="line"><a name="l04096"></a><span class="lineno"> 4096</span>&#160;          flip: {</div><div class="line"><a name="l04097"></a><span class="lineno"> 4097</span>&#160;            enabled: this._config.flip</div><div class="line"><a name="l04098"></a><span class="lineno"> 4098</span>&#160;          },</div><div class="line"><a name="l04099"></a><span class="lineno"> 4099</span>&#160;          preventOverflow: {</div><div class="line"><a name="l04100"></a><span class="lineno"> 4100</span>&#160;            boundariesElement: this._config.boundary</div><div class="line"><a name="l04101"></a><span class="lineno"> 4101</span>&#160;          }</div><div class="line"><a name="l04102"></a><span class="lineno"> 4102</span>&#160;        }</div><div class="line"><a name="l04103"></a><span class="lineno"> 4103</span>&#160;      };</div><div class="line"><a name="l04104"></a><span class="lineno"> 4104</span>&#160;      <span class="keywordflow">return</span> popperConfig;</div><div class="line"><a name="l04105"></a><span class="lineno"> 4105</span>&#160;    }; <span class="comment">// Static</span></div><div class="line"><a name="l04106"></a><span class="lineno"> 4106</span>&#160;</div><div class="line"><a name="l04107"></a><span class="lineno"> 4107</span>&#160;</div><div class="line"><a name="l04108"></a><span class="lineno"> 4108</span>&#160;    Dropdown._jQueryInterface = <span class="keyword">function</span> _jQueryInterface(config) {</div><div class="line"><a name="l04109"></a><span class="lineno"> 4109</span>&#160;      <span class="keywordflow">return</span> this.<a class="code" href="../../d3/dea/a00046.php#a877963eb3bdbe10cffb2337a091a7ff1">each</a>(<span class="keyword">function</span> () {</div><div class="line"><a name="l04110"></a><span class="lineno"> 4110</span>&#160;        var <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a> = $$$1(<span class="keyword">this</span>).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(DATA_KEY);</div><div class="line"><a name="l04111"></a><span class="lineno"> 4111</span>&#160;</div><div class="line"><a name="l04112"></a><span class="lineno"> 4112</span>&#160;        var _config = typeof config === <span class="stringliteral">&#39;object&#39;</span> ? config : null;</div><div class="line"><a name="l04113"></a><span class="lineno"> 4113</span>&#160;</div><div class="line"><a name="l04114"></a><span class="lineno"> 4114</span>&#160;        <span class="keywordflow">if</span> (!data) {</div><div class="line"><a name="l04115"></a><span class="lineno"> 4115</span>&#160;          data = <span class="keyword">new</span> <a class="code" href="../../d4/d51/a00017.php#a1ad233b38aa8a375e2ba938ca959bd15">Dropdown</a>(<span class="keyword">this</span>, _config);</div><div class="line"><a name="l04116"></a><span class="lineno"> 4116</span>&#160;          $$$1(<span class="keyword">this</span>).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(DATA_KEY, data);</div><div class="line"><a name="l04117"></a><span class="lineno"> 4117</span>&#160;        }</div><div class="line"><a name="l04118"></a><span class="lineno"> 4118</span>&#160;</div><div class="line"><a name="l04119"></a><span class="lineno"> 4119</span>&#160;        <span class="keywordflow">if</span> (typeof config === <span class="stringliteral">&#39;string&#39;</span>) {</div><div class="line"><a name="l04120"></a><span class="lineno"> 4120</span>&#160;          <span class="keywordflow">if</span> (typeof data[config] === <span class="stringliteral">&#39;undefined&#39;</span>) {</div><div class="line"><a name="l04121"></a><span class="lineno"> 4121</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> TypeError(<span class="stringliteral">&quot;No method named \&quot;&quot;</span> + config + <span class="stringliteral">&quot;\&quot;&quot;</span>);</div><div class="line"><a name="l04122"></a><span class="lineno"> 4122</span>&#160;          }</div><div class="line"><a name="l04123"></a><span class="lineno"> 4123</span>&#160;</div><div class="line"><a name="l04124"></a><span class="lineno"> 4124</span>&#160;          data[config]();</div><div class="line"><a name="l04125"></a><span class="lineno"> 4125</span>&#160;        }</div><div class="line"><a name="l04126"></a><span class="lineno"> 4126</span>&#160;      });</div><div class="line"><a name="l04127"></a><span class="lineno"> 4127</span>&#160;    };</div><div class="line"><a name="l04128"></a><span class="lineno"> 4128</span>&#160;</div><div class="line"><a name="l04129"></a><span class="lineno"> 4129</span>&#160;    Dropdown._clearMenus = <span class="keyword">function</span> _clearMenus(event) {</div><div class="line"><a name="l04130"></a><span class="lineno"> 4130</span>&#160;      <span class="keywordflow">if</span> (event &amp;&amp; (event.which === RIGHT_MOUSE_BUTTON_WHICH || event.type === <span class="stringliteral">&#39;keyup&#39;</span> &amp;&amp; event.which !== TAB_KEYCODE)) {</div><div class="line"><a name="l04131"></a><span class="lineno"> 4131</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l04132"></a><span class="lineno"> 4132</span>&#160;      }</div><div class="line"><a name="l04133"></a><span class="lineno"> 4133</span>&#160;</div><div class="line"><a name="l04134"></a><span class="lineno"> 4134</span>&#160;      var toggles = $$$1.makeArray($$$1(Selector.DATA_TOGGLE));</div><div class="line"><a name="l04135"></a><span class="lineno"> 4135</span>&#160;</div><div class="line"><a name="l04136"></a><span class="lineno"> 4136</span>&#160;      <span class="keywordflow">for</span> (var <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a> = 0; <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a> &lt; toggles.length; <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>++) {</div><div class="line"><a name="l04137"></a><span class="lineno"> 4137</span>&#160;        var parent = Dropdown._getParentFromElement(toggles[<a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>]);</div><div class="line"><a name="l04138"></a><span class="lineno"> 4138</span>&#160;</div><div class="line"><a name="l04139"></a><span class="lineno"> 4139</span>&#160;        var context = $$$1(toggles[<a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>]).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(DATA_KEY);</div><div class="line"><a name="l04140"></a><span class="lineno"> 4140</span>&#160;        var relatedTarget = {</div><div class="line"><a name="l04141"></a><span class="lineno"> 4141</span>&#160;          relatedTarget: toggles[<a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>]</div><div class="line"><a name="l04142"></a><span class="lineno"> 4142</span>&#160;        };</div><div class="line"><a name="l04143"></a><span class="lineno"> 4143</span>&#160;</div><div class="line"><a name="l04144"></a><span class="lineno"> 4144</span>&#160;        <span class="keywordflow">if</span> (!context) {</div><div class="line"><a name="l04145"></a><span class="lineno"> 4145</span>&#160;          <span class="keywordflow">continue</span>;</div><div class="line"><a name="l04146"></a><span class="lineno"> 4146</span>&#160;        }</div><div class="line"><a name="l04147"></a><span class="lineno"> 4147</span>&#160;</div><div class="line"><a name="l04148"></a><span class="lineno"> 4148</span>&#160;        var dropdownMenu = context._menu;</div><div class="line"><a name="l04149"></a><span class="lineno"> 4149</span>&#160;</div><div class="line"><a name="l04150"></a><span class="lineno"> 4150</span>&#160;        <span class="keywordflow">if</span> (!$$$1(parent).hasClass(ClassName.SHOW)) {</div><div class="line"><a name="l04151"></a><span class="lineno"> 4151</span>&#160;          <span class="keywordflow">continue</span>;</div><div class="line"><a name="l04152"></a><span class="lineno"> 4152</span>&#160;        }</div><div class="line"><a name="l04153"></a><span class="lineno"> 4153</span>&#160;</div><div class="line"><a name="l04154"></a><span class="lineno"> 4154</span>&#160;        <span class="keywordflow">if</span> (event &amp;&amp; (event.type === <span class="stringliteral">&#39;click&#39;</span> &amp;&amp; /<a class="code" href="../../df/d5f/a00064.php#a07a2aabd64594dc36dd810cad2669deb">input</a>|textarea/i.test(event.target.tagName) || <span class="keyword">event</span>.type === <span class="stringliteral">&#39;keyup&#39;</span> &amp;&amp; <span class="keyword">event</span>.which === TAB_KEYCODE) &amp;&amp; $$$1.contains(parent, event.target)) {</div><div class="line"><a name="l04155"></a><span class="lineno"> 4155</span>&#160;          <span class="keywordflow">continue</span>;</div><div class="line"><a name="l04156"></a><span class="lineno"> 4156</span>&#160;        }</div><div class="line"><a name="l04157"></a><span class="lineno"> 4157</span>&#160;</div><div class="line"><a name="l04158"></a><span class="lineno"> 4158</span>&#160;        var hideEvent = $$$1.Event(Event.HIDE, relatedTarget);</div><div class="line"><a name="l04159"></a><span class="lineno"> 4159</span>&#160;        $$$1(parent).trigger(hideEvent);</div><div class="line"><a name="l04160"></a><span class="lineno"> 4160</span>&#160;</div><div class="line"><a name="l04161"></a><span class="lineno"> 4161</span>&#160;        <span class="keywordflow">if</span> (hideEvent.isDefaultPrevented()) {</div><div class="line"><a name="l04162"></a><span class="lineno"> 4162</span>&#160;          <span class="keywordflow">continue</span>;</div><div class="line"><a name="l04163"></a><span class="lineno"> 4163</span>&#160;        } <span class="comment">// If this is a touch-enabled device we remove the extra</span></div><div class="line"><a name="l04164"></a><span class="lineno"> 4164</span>&#160;        <span class="comment">// empty mouseover listeners we added for iOS support</span></div><div class="line"><a name="l04165"></a><span class="lineno"> 4165</span>&#160;</div><div class="line"><a name="l04166"></a><span class="lineno"> 4166</span>&#160;</div><div class="line"><a name="l04167"></a><span class="lineno"> 4167</span>&#160;        <span class="keywordflow">if</span> (<span class="stringliteral">&#39;ontouchstart&#39;</span> in document.documentElement) {</div><div class="line"><a name="l04168"></a><span class="lineno"> 4168</span>&#160;          $$$1(<span class="stringliteral">&#39;body&#39;</span>).children().off(<span class="stringliteral">&#39;mouseover&#39;</span>, null, $$$1.noop);</div><div class="line"><a name="l04169"></a><span class="lineno"> 4169</span>&#160;        }</div><div class="line"><a name="l04170"></a><span class="lineno"> 4170</span>&#160;</div><div class="line"><a name="l04171"></a><span class="lineno"> 4171</span>&#160;        toggles[<a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>].setAttribute(<span class="stringliteral">&#39;aria-expanded&#39;</span>, <span class="stringliteral">&#39;false&#39;</span>);</div><div class="line"><a name="l04172"></a><span class="lineno"> 4172</span>&#160;        $$$1(dropdownMenu).removeClass(ClassName.SHOW);</div><div class="line"><a name="l04173"></a><span class="lineno"> 4173</span>&#160;        $$$1(parent).removeClass(ClassName.SHOW).trigger($$$1.Event(Event.HIDDEN, relatedTarget));</div><div class="line"><a name="l04174"></a><span class="lineno"> 4174</span>&#160;      }</div><div class="line"><a name="l04175"></a><span class="lineno"> 4175</span>&#160;    };</div><div class="line"><a name="l04176"></a><span class="lineno"> 4176</span>&#160;</div><div class="line"><a name="l04177"></a><span class="lineno"> 4177</span>&#160;    Dropdown._getParentFromElement = <span class="keyword">function</span> _getParentFromElement(element) {</div><div class="line"><a name="l04178"></a><span class="lineno"> 4178</span>&#160;      var parent;</div><div class="line"><a name="l04179"></a><span class="lineno"> 4179</span>&#160;      var selector = Util.getSelectorFromElement(element);</div><div class="line"><a name="l04180"></a><span class="lineno"> 4180</span>&#160;</div><div class="line"><a name="l04181"></a><span class="lineno"> 4181</span>&#160;      <span class="keywordflow">if</span> (selector) {</div><div class="line"><a name="l04182"></a><span class="lineno"> 4182</span>&#160;        parent = $$$1(selector)[0];</div><div class="line"><a name="l04183"></a><span class="lineno"> 4183</span>&#160;      }</div><div class="line"><a name="l04184"></a><span class="lineno"> 4184</span>&#160;</div><div class="line"><a name="l04185"></a><span class="lineno"> 4185</span>&#160;      <span class="keywordflow">return</span> parent || element.parentNode;</div><div class="line"><a name="l04186"></a><span class="lineno"> 4186</span>&#160;    }; <span class="comment">// eslint-disable-next-line complexity</span></div><div class="line"><a name="l04187"></a><span class="lineno"> 4187</span>&#160;</div><div class="line"><a name="l04188"></a><span class="lineno"> 4188</span>&#160;</div><div class="line"><a name="l04189"></a><span class="lineno"> 4189</span>&#160;    Dropdown._dataApiKeydownHandler = <span class="keyword">function</span> _dataApiKeydownHandler(event) {</div><div class="line"><a name="l04190"></a><span class="lineno"> 4190</span>&#160;      <span class="comment">// If not input/textarea:</span></div><div class="line"><a name="l04191"></a><span class="lineno"> 4191</span>&#160;      <span class="comment">//  - And not a key in REGEXP_KEYDOWN =&gt; not a dropdown command</span></div><div class="line"><a name="l04192"></a><span class="lineno"> 4192</span>&#160;      <span class="comment">// If input/textarea:</span></div><div class="line"><a name="l04193"></a><span class="lineno"> 4193</span>&#160;      <span class="comment">//  - If space key =&gt; not a dropdown command</span></div><div class="line"><a name="l04194"></a><span class="lineno"> 4194</span>&#160;      <span class="comment">//  - If key is other than escape</span></div><div class="line"><a name="l04195"></a><span class="lineno"> 4195</span>&#160;      <span class="comment">//    - If key is not up or down =&gt; not a dropdown command</span></div><div class="line"><a name="l04196"></a><span class="lineno"> 4196</span>&#160;      <span class="comment">//    - If trigger inside the menu =&gt; not a dropdown command</span></div><div class="line"><a name="l04197"></a><span class="lineno"> 4197</span>&#160;      <span class="keywordflow">if</span> (/<a class="code" href="../../df/d5f/a00064.php#a07a2aabd64594dc36dd810cad2669deb">input</a>|textarea/<a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>.test(event.target.tagName) ? <span class="keyword">event</span>.which === SPACE_KEYCODE || <span class="keyword">event</span>.which !== ESCAPE_KEYCODE &amp;&amp; (<span class="keyword">event</span>.which !== ARROW_DOWN_KEYCODE &amp;&amp; <span class="keyword">event</span>.which !== ARROW_UP_KEYCODE || $$$1(<span class="keyword">event</span>.target).closest(Selector.MENU).length) : !REGEXP_KEYDOWN.test(event.which)) {</div><div class="line"><a name="l04198"></a><span class="lineno"> 4198</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l04199"></a><span class="lineno"> 4199</span>&#160;      }</div><div class="line"><a name="l04200"></a><span class="lineno"> 4200</span>&#160;</div><div class="line"><a name="l04201"></a><span class="lineno"> 4201</span>&#160;      <span class="keyword">event</span>.preventDefault();</div><div class="line"><a name="l04202"></a><span class="lineno"> 4202</span>&#160;      <span class="keyword">event</span>.stopPropagation();</div><div class="line"><a name="l04203"></a><span class="lineno"> 4203</span>&#160;</div><div class="line"><a name="l04204"></a><span class="lineno"> 4204</span>&#160;      <span class="keywordflow">if</span> (this.disabled || $$$1(<span class="keyword">this</span>).hasClass(ClassName.DISABLED)) {</div><div class="line"><a name="l04205"></a><span class="lineno"> 4205</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l04206"></a><span class="lineno"> 4206</span>&#160;      }</div><div class="line"><a name="l04207"></a><span class="lineno"> 4207</span>&#160;</div><div class="line"><a name="l04208"></a><span class="lineno"> 4208</span>&#160;      var parent = Dropdown._getParentFromElement(<span class="keyword">this</span>);</div><div class="line"><a name="l04209"></a><span class="lineno"> 4209</span>&#160;</div><div class="line"><a name="l04210"></a><span class="lineno"> 4210</span>&#160;      var isActive = $$$1(parent).hasClass(ClassName.SHOW);</div><div class="line"><a name="l04211"></a><span class="lineno"> 4211</span>&#160;</div><div class="line"><a name="l04212"></a><span class="lineno"> 4212</span>&#160;      <span class="keywordflow">if</span> (!isActive &amp;&amp; (event.which !== ESCAPE_KEYCODE || event.which !== SPACE_KEYCODE) || isActive &amp;&amp; (<span class="keyword">event</span>.which === ESCAPE_KEYCODE || <span class="keyword">event</span>.which === SPACE_KEYCODE)) {</div><div class="line"><a name="l04213"></a><span class="lineno"> 4213</span>&#160;        <span class="keywordflow">if</span> (event.which === ESCAPE_KEYCODE) {</div><div class="line"><a name="l04214"></a><span class="lineno"> 4214</span>&#160;          var <a class="code" href="../../db/db2/a00020.php#aa8e797a9bda5e7e313be3518054164a3">toggle</a> = $$$1(parent).find(Selector.DATA_TOGGLE)[0];</div><div class="line"><a name="l04215"></a><span class="lineno"> 4215</span>&#160;          $$$1(<a class="code" href="../../db/db2/a00020.php#aa8e797a9bda5e7e313be3518054164a3">toggle</a>).trigger(<span class="stringliteral">&#39;focus&#39;</span>);</div><div class="line"><a name="l04216"></a><span class="lineno"> 4216</span>&#160;        }</div><div class="line"><a name="l04217"></a><span class="lineno"> 4217</span>&#160;</div><div class="line"><a name="l04218"></a><span class="lineno"> 4218</span>&#160;        $$$1(<span class="keyword">this</span>).trigger(<span class="stringliteral">&#39;click&#39;</span>);</div><div class="line"><a name="l04219"></a><span class="lineno"> 4219</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l04220"></a><span class="lineno"> 4220</span>&#160;      }</div><div class="line"><a name="l04221"></a><span class="lineno"> 4221</span>&#160;</div><div class="line"><a name="l04222"></a><span class="lineno"> 4222</span>&#160;      var items = $$$1(parent).find(Selector.VISIBLE_ITEMS).get();</div><div class="line"><a name="l04223"></a><span class="lineno"> 4223</span>&#160;</div><div class="line"><a name="l04224"></a><span class="lineno"> 4224</span>&#160;      <span class="keywordflow">if</span> (items.length === 0) {</div><div class="line"><a name="l04225"></a><span class="lineno"> 4225</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l04226"></a><span class="lineno"> 4226</span>&#160;      }</div><div class="line"><a name="l04227"></a><span class="lineno"> 4227</span>&#160;</div><div class="line"><a name="l04228"></a><span class="lineno"> 4228</span>&#160;      var index = items.indexOf(event.target);</div><div class="line"><a name="l04229"></a><span class="lineno"> 4229</span>&#160;</div><div class="line"><a name="l04230"></a><span class="lineno"> 4230</span>&#160;      <span class="keywordflow">if</span> (event.which === ARROW_UP_KEYCODE &amp;&amp; index &gt; 0) {</div><div class="line"><a name="l04231"></a><span class="lineno"> 4231</span>&#160;        <span class="comment">// Up</span></div><div class="line"><a name="l04232"></a><span class="lineno"> 4232</span>&#160;        index--;</div><div class="line"><a name="l04233"></a><span class="lineno"> 4233</span>&#160;      }</div><div class="line"><a name="l04234"></a><span class="lineno"> 4234</span>&#160;</div><div class="line"><a name="l04235"></a><span class="lineno"> 4235</span>&#160;      <span class="keywordflow">if</span> (event.which === ARROW_DOWN_KEYCODE &amp;&amp; index &lt; items.length - 1) {</div><div class="line"><a name="l04236"></a><span class="lineno"> 4236</span>&#160;        <span class="comment">// Down</span></div><div class="line"><a name="l04237"></a><span class="lineno"> 4237</span>&#160;        index++;</div><div class="line"><a name="l04238"></a><span class="lineno"> 4238</span>&#160;      }</div><div class="line"><a name="l04239"></a><span class="lineno"> 4239</span>&#160;</div><div class="line"><a name="l04240"></a><span class="lineno"> 4240</span>&#160;      <span class="keywordflow">if</span> (index &lt; 0) {</div><div class="line"><a name="l04241"></a><span class="lineno"> 4241</span>&#160;        index = 0;</div><div class="line"><a name="l04242"></a><span class="lineno"> 4242</span>&#160;      }</div><div class="line"><a name="l04243"></a><span class="lineno"> 4243</span>&#160;</div><div class="line"><a name="l04244"></a><span class="lineno"> 4244</span>&#160;      items[index].focus();</div><div class="line"><a name="l04245"></a><span class="lineno"> 4245</span>&#160;    };</div><div class="line"><a name="l04246"></a><span class="lineno"> 4246</span>&#160;</div><div class="line"><a name="l04247"></a><span class="lineno"> 4247</span>&#160;    <a class="code" href="../../d4/d51/a00017.php#a39e10dc3069b4a23aa52bea0bec60e36">_createClass</a>(Dropdown, null, [{</div><div class="line"><a name="l04248"></a><span class="lineno"> 4248</span>&#160;      key: <span class="stringliteral">&quot;VERSION&quot;</span>,</div><div class="line"><a name="l04249"></a><span class="lineno"> 4249</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l04250"></a><span class="lineno"> 4250</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../db/db2/a00020.php#a3635f2df5844f69204b70bf7b3983587">VERSION</a>;</div><div class="line"><a name="l04251"></a><span class="lineno"> 4251</span>&#160;      }</div><div class="line"><a name="l04252"></a><span class="lineno"> 4252</span>&#160;    }, {</div><div class="line"><a name="l04253"></a><span class="lineno"> 4253</span>&#160;      key: <span class="stringliteral">&quot;Default&quot;</span>,</div><div class="line"><a name="l04254"></a><span class="lineno"> 4254</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l04255"></a><span class="lineno"> 4255</span>&#160;        <span class="keywordflow">return</span> Default;</div><div class="line"><a name="l04256"></a><span class="lineno"> 4256</span>&#160;      }</div><div class="line"><a name="l04257"></a><span class="lineno"> 4257</span>&#160;    }, {</div><div class="line"><a name="l04258"></a><span class="lineno"> 4258</span>&#160;      key: <span class="stringliteral">&quot;DefaultType&quot;</span>,</div><div class="line"><a name="l04259"></a><span class="lineno"> 4259</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l04260"></a><span class="lineno"> 4260</span>&#160;        <span class="keywordflow">return</span> DefaultType;</div><div class="line"><a name="l04261"></a><span class="lineno"> 4261</span>&#160;      }</div><div class="line"><a name="l04262"></a><span class="lineno"> 4262</span>&#160;    }]);</div><div class="line"><a name="l04263"></a><span class="lineno"> 4263</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#a1ad233b38aa8a375e2ba938ca959bd15">Dropdown</a>;</div><div class="line"><a name="l04264"></a><span class="lineno"> 4264</span>&#160;  }();</div><div class="line"><a name="l04272"></a><span class="lineno"> 4272</span>&#160;  $$$1(document).on(Event.KEYDOWN_DATA_API, Selector.DATA_TOGGLE, Dropdown._dataApiKeydownHandler).on(Event.KEYDOWN_DATA_API, Selector.MENU, Dropdown._dataApiKeydownHandler).on(Event.CLICK_DATA_API + <span class="stringliteral">&quot; &quot;</span> + Event.KEYUP_DATA_API, Dropdown._clearMenus).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {</div><div class="line"><a name="l04273"></a><span class="lineno"> 4273</span>&#160;    <span class="keyword">event</span>.preventDefault();</div><div class="line"><a name="l04274"></a><span class="lineno"> 4274</span>&#160;    <span class="keyword">event</span>.stopPropagation();</div><div class="line"><a name="l04275"></a><span class="lineno"> 4275</span>&#160;</div><div class="line"><a name="l04276"></a><span class="lineno"> 4276</span>&#160;    Dropdown._jQueryInterface.call($$$1(<span class="keyword">this</span>), <span class="stringliteral">&#39;toggle&#39;</span>);</div><div class="line"><a name="l04277"></a><span class="lineno"> 4277</span>&#160;  }).on(Event.CLICK_DATA_API, Selector.FORM_CHILD, function (<a class="code" href="../../db/db2/a00020.php#ab5902775854a8b8440bcd25e0fe1c120">e</a>) {</div><div class="line"><a name="l04278"></a><span class="lineno"> 4278</span>&#160;    <a class="code" href="../../db/db2/a00020.php#ab5902775854a8b8440bcd25e0fe1c120">e</a>.stopPropagation();</div><div class="line"><a name="l04279"></a><span class="lineno"> 4279</span>&#160;  });</div><div class="line"><a name="l04286"></a><span class="lineno"> 4286</span>&#160;  $$$1.fn[NAME] = Dropdown._jQueryInterface;</div><div class="line"><a name="l04287"></a><span class="lineno"> 4287</span>&#160;  $$$1.fn[NAME].Constructor = <a class="code" href="../../d4/d51/a00017.php#a1ad233b38aa8a375e2ba938ca959bd15">Dropdown</a>;</div><div class="line"><a name="l04288"></a><span class="lineno"> 4288</span>&#160;</div><div class="line"><a name="l04289"></a><span class="lineno"> 4289</span>&#160;  $$$1.fn[NAME].noConflict = <span class="keyword">function</span> () {</div><div class="line"><a name="l04290"></a><span class="lineno"> 4290</span>&#160;    $$$1.fn[NAME] = JQUERY_NO_CONFLICT;</div><div class="line"><a name="l04291"></a><span class="lineno"> 4291</span>&#160;    <span class="keywordflow">return</span> Dropdown._jQueryInterface;</div><div class="line"><a name="l04292"></a><span class="lineno"> 4292</span>&#160;  };</div><div class="line"><a name="l04293"></a><span class="lineno"> 4293</span>&#160;</div><div class="line"><a name="l04294"></a><span class="lineno"> 4294</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#a1ad233b38aa8a375e2ba938ca959bd15">Dropdown</a>;</div><div class="line"><a name="l04295"></a><span class="lineno"> 4295</span>&#160;}($, <a class="code" href="../../d4/d51/a00017.php#ab34a4e248b9bfbf76de92f866779e0e6">Popper</a>);</div><div class="line"><a name="l04296"></a><span class="lineno"> 4296</span>&#160;</div><div class="line"><a name="l04304"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#ac31034cff9cb6db90f2650ab2367c22f"> 4304</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#ac31034cff9cb6db90f2650ab2367c22f">Modal</a> = <span class="keyword">function</span> ($$$1) {</div><div class="line"><a name="l04310"></a><span class="lineno"> 4310</span>&#160;  var NAME = <span class="stringliteral">&#39;modal&#39;</span>;</div><div class="line"><a name="l04311"></a><span class="lineno"> 4311</span>&#160;  var <a class="code" href="../../db/db2/a00020.php#a3635f2df5844f69204b70bf7b3983587">VERSION</a> = <span class="stringliteral">&#39;4.0.0&#39;</span>;</div><div class="line"><a name="l04312"></a><span class="lineno"> 4312</span>&#160;  var DATA_KEY = <span class="stringliteral">&#39;bs.modal&#39;</span>;</div><div class="line"><a name="l04313"></a><span class="lineno"> 4313</span>&#160;  var EVENT_KEY = <span class="stringliteral">&quot;.&quot;</span> + DATA_KEY;</div><div class="line"><a name="l04314"></a><span class="lineno"> 4314</span>&#160;  var DATA_API_KEY = <span class="stringliteral">&#39;.data-api&#39;</span>;</div><div class="line"><a name="l04315"></a><span class="lineno"> 4315</span>&#160;  var JQUERY_NO_CONFLICT = $$$1.fn[NAME];</div><div class="line"><a name="l04316"></a><span class="lineno"> 4316</span>&#160;  var <a class="code" href="../../db/db2/a00020.php#ae4adb159aeacba734c34bd530baf92f6">TRANSITION_DURATION</a> = 300;</div><div class="line"><a name="l04317"></a><span class="lineno"> 4317</span>&#160;  var BACKDROP_TRANSITION_DURATION = 150;</div><div class="line"><a name="l04318"></a><span class="lineno"> 4318</span>&#160;  var ESCAPE_KEYCODE = 27; <span class="comment">// KeyboardEvent.which value for Escape (Esc) key</span></div><div class="line"><a name="l04319"></a><span class="lineno"> 4319</span>&#160;</div><div class="line"><a name="l04320"></a><span class="lineno"> 4320</span>&#160;  var Default = {</div><div class="line"><a name="l04321"></a><span class="lineno"> 4321</span>&#160;    backdrop: <span class="keyword">true</span>,</div><div class="line"><a name="l04322"></a><span class="lineno"> 4322</span>&#160;    keyboard: <span class="keyword">true</span>,</div><div class="line"><a name="l04323"></a><span class="lineno"> 4323</span>&#160;    focus: <span class="keyword">true</span>,</div><div class="line"><a name="l04324"></a><span class="lineno"> 4324</span>&#160;    show: <span class="keyword">true</span></div><div class="line"><a name="l04325"></a><span class="lineno"> 4325</span>&#160;  };</div><div class="line"><a name="l04326"></a><span class="lineno"> 4326</span>&#160;  var DefaultType = {</div><div class="line"><a name="l04327"></a><span class="lineno"> 4327</span>&#160;    backdrop: <span class="stringliteral">&#39;(boolean|string)&#39;</span>,</div><div class="line"><a name="l04328"></a><span class="lineno"> 4328</span>&#160;    keyboard: <span class="stringliteral">&#39;boolean&#39;</span>,</div><div class="line"><a name="l04329"></a><span class="lineno"> 4329</span>&#160;    focus: <span class="stringliteral">&#39;boolean&#39;</span>,</div><div class="line"><a name="l04330"></a><span class="lineno"> 4330</span>&#160;    show: <span class="stringliteral">&#39;boolean&#39;</span></div><div class="line"><a name="l04331"></a><span class="lineno"> 4331</span>&#160;  };</div><div class="line"><a name="l04332"></a><span class="lineno"> 4332</span>&#160;  var Event = {</div><div class="line"><a name="l04333"></a><span class="lineno"> 4333</span>&#160;    HIDE: <span class="stringliteral">&quot;hide&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l04334"></a><span class="lineno"> 4334</span>&#160;    HIDDEN: <span class="stringliteral">&quot;hidden&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l04335"></a><span class="lineno"> 4335</span>&#160;    SHOW: <span class="stringliteral">&quot;show&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l04336"></a><span class="lineno"> 4336</span>&#160;    SHOWN: <span class="stringliteral">&quot;shown&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l04337"></a><span class="lineno"> 4337</span>&#160;    FOCUSIN: <span class="stringliteral">&quot;focusin&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l04338"></a><span class="lineno"> 4338</span>&#160;    RESIZE: <span class="stringliteral">&quot;resize&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l04339"></a><span class="lineno"> 4339</span>&#160;    CLICK_DISMISS: <span class="stringliteral">&quot;click.dismiss&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l04340"></a><span class="lineno"> 4340</span>&#160;    KEYDOWN_DISMISS: <span class="stringliteral">&quot;keydown.dismiss&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l04341"></a><span class="lineno"> 4341</span>&#160;    MOUSEUP_DISMISS: <span class="stringliteral">&quot;mouseup.dismiss&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l04342"></a><span class="lineno"> 4342</span>&#160;    MOUSEDOWN_DISMISS: <span class="stringliteral">&quot;mousedown.dismiss&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l04343"></a><span class="lineno"> 4343</span>&#160;    CLICK_DATA_API: <span class="stringliteral">&quot;click&quot;</span> + EVENT_KEY + DATA_API_KEY</div><div class="line"><a name="l04344"></a><span class="lineno"> 4344</span>&#160;  };</div><div class="line"><a name="l04345"></a><span class="lineno"> 4345</span>&#160;  var ClassName = {</div><div class="line"><a name="l04346"></a><span class="lineno"> 4346</span>&#160;    SCROLLBAR_MEASURER: <span class="stringliteral">&#39;modal-scrollbar-measure&#39;</span>,</div><div class="line"><a name="l04347"></a><span class="lineno"> 4347</span>&#160;    BACKDROP: <span class="stringliteral">&#39;modal-backdrop&#39;</span>,</div><div class="line"><a name="l04348"></a><span class="lineno"> 4348</span>&#160;    OPEN: <span class="stringliteral">&#39;modal-open&#39;</span>,</div><div class="line"><a name="l04349"></a><span class="lineno"> 4349</span>&#160;    FADE: <span class="stringliteral">&#39;fade&#39;</span>,</div><div class="line"><a name="l04350"></a><span class="lineno"> 4350</span>&#160;    SHOW: <span class="stringliteral">&#39;show&#39;</span></div><div class="line"><a name="l04351"></a><span class="lineno"> 4351</span>&#160;  };</div><div class="line"><a name="l04352"></a><span class="lineno"> 4352</span>&#160;  var Selector = {</div><div class="line"><a name="l04353"></a><span class="lineno"> 4353</span>&#160;    DIALOG: <span class="stringliteral">&#39;.modal-dialog&#39;</span>,</div><div class="line"><a name="l04354"></a><span class="lineno"> 4354</span>&#160;    DATA_TOGGLE: <span class="stringliteral">&#39;[data-toggle=&quot;modal&quot;]&#39;</span>,</div><div class="line"><a name="l04355"></a><span class="lineno"> 4355</span>&#160;    DATA_DISMISS: <span class="stringliteral">&#39;[data-dismiss=&quot;modal&quot;]&#39;</span>,</div><div class="line"><a name="l04356"></a><span class="lineno"> 4356</span>&#160;    FIXED_CONTENT: <span class="stringliteral">&#39;.fixed-top, .fixed-bottom, .is-fixed, .sticky-top&#39;</span>,</div><div class="line"><a name="l04357"></a><span class="lineno"> 4357</span>&#160;    STICKY_CONTENT: <span class="stringliteral">&#39;.sticky-top&#39;</span>,</div><div class="line"><a name="l04358"></a><span class="lineno"> 4358</span>&#160;    NAVBAR_TOGGLER: <span class="stringliteral">&#39;.navbar-toggler&#39;</span></div><div class="line"><a name="l04365"></a><span class="lineno"> 4365</span>&#160;  };</div><div class="line"><a name="l04366"></a><span class="lineno"> 4366</span>&#160;</div><div class="line"><a name="l04367"></a><span class="lineno"> 4367</span>&#160;  var Modal =</div><div class="line"><a name="l04368"></a><span class="lineno"> 4368</span>&#160;  <span class="comment">/*#__PURE__*/</span></div><div class="line"><a name="l04369"></a><span class="lineno"> 4369</span>&#160;  <span class="keyword">function</span> () {</div><div class="line"><a name="l04370"></a><span class="lineno"> 4370</span>&#160;    <span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#ac31034cff9cb6db90f2650ab2367c22f">Modal</a>(element, config) {</div><div class="line"><a name="l04371"></a><span class="lineno"> 4371</span>&#160;      this._config = this._getConfig(config);</div><div class="line"><a name="l04372"></a><span class="lineno"> 4372</span>&#160;      this._element = element;</div><div class="line"><a name="l04373"></a><span class="lineno"> 4373</span>&#160;      this._dialog = $$$1(element).find(Selector.DIALOG)[0];</div><div class="line"><a name="l04374"></a><span class="lineno"> 4374</span>&#160;      this._backdrop = null;</div><div class="line"><a name="l04375"></a><span class="lineno"> 4375</span>&#160;      this._isShown = <span class="keyword">false</span>;</div><div class="line"><a name="l04376"></a><span class="lineno"> 4376</span>&#160;      this._isBodyOverflowing = <span class="keyword">false</span>;</div><div class="line"><a name="l04377"></a><span class="lineno"> 4377</span>&#160;      this._ignoreBackdropClick = <span class="keyword">false</span>;</div><div class="line"><a name="l04378"></a><span class="lineno"> 4378</span>&#160;      this._originalBodyPadding = 0;</div><div class="line"><a name="l04379"></a><span class="lineno"> 4379</span>&#160;      this._scrollbarWidth = 0;</div><div class="line"><a name="l04380"></a><span class="lineno"> 4380</span>&#160;    } <span class="comment">// Getters</span></div><div class="line"><a name="l04381"></a><span class="lineno"> 4381</span>&#160;</div><div class="line"><a name="l04382"></a><span class="lineno"> 4382</span>&#160;</div><div class="line"><a name="l04383"></a><span class="lineno"> 4383</span>&#160;    var _proto = Modal.prototype;</div><div class="line"><a name="l04384"></a><span class="lineno"> 4384</span>&#160;</div><div class="line"><a name="l04385"></a><span class="lineno"> 4385</span>&#160;    <span class="comment">// Public</span></div><div class="line"><a name="l04386"></a><span class="lineno"> 4386</span>&#160;    _proto.toggle = <span class="keyword">function</span> <a class="code" href="../../db/db2/a00020.php#aa8e797a9bda5e7e313be3518054164a3">toggle</a>(relatedTarget) {</div><div class="line"><a name="l04387"></a><span class="lineno"> 4387</span>&#160;      <span class="keywordflow">return</span> this._isShown ? this.hide() : this.show(relatedTarget);</div><div class="line"><a name="l04388"></a><span class="lineno"> 4388</span>&#160;    };</div><div class="line"><a name="l04389"></a><span class="lineno"> 4389</span>&#160;</div><div class="line"><a name="l04390"></a><span class="lineno"> 4390</span>&#160;    _proto.show = <span class="keyword">function</span> show(relatedTarget) {</div><div class="line"><a name="l04391"></a><span class="lineno"> 4391</span>&#160;      var _this = <span class="keyword">this</span>;</div><div class="line"><a name="l04392"></a><span class="lineno"> 4392</span>&#160;</div><div class="line"><a name="l04393"></a><span class="lineno"> 4393</span>&#160;      <span class="keywordflow">if</span> (this._isTransitioning || this._isShown) {</div><div class="line"><a name="l04394"></a><span class="lineno"> 4394</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l04395"></a><span class="lineno"> 4395</span>&#160;      }</div><div class="line"><a name="l04396"></a><span class="lineno"> 4396</span>&#160;</div><div class="line"><a name="l04397"></a><span class="lineno"> 4397</span>&#160;      <span class="keywordflow">if</span> (Util.supportsTransitionEnd() &amp;&amp; $$$1(this._element).hasClass(ClassName.FADE)) {</div><div class="line"><a name="l04398"></a><span class="lineno"> 4398</span>&#160;        this._isTransitioning = <span class="keyword">true</span>;</div><div class="line"><a name="l04399"></a><span class="lineno"> 4399</span>&#160;      }</div><div class="line"><a name="l04400"></a><span class="lineno"> 4400</span>&#160;</div><div class="line"><a name="l04401"></a><span class="lineno"> 4401</span>&#160;      var showEvent = $$$1.Event(Event.SHOW, {</div><div class="line"><a name="l04402"></a><span class="lineno"> 4402</span>&#160;        relatedTarget: relatedTarget</div><div class="line"><a name="l04403"></a><span class="lineno"> 4403</span>&#160;      });</div><div class="line"><a name="l04404"></a><span class="lineno"> 4404</span>&#160;      $$$1(this._element).trigger(showEvent);</div><div class="line"><a name="l04405"></a><span class="lineno"> 4405</span>&#160;</div><div class="line"><a name="l04406"></a><span class="lineno"> 4406</span>&#160;      <span class="keywordflow">if</span> (this._isShown || showEvent.isDefaultPrevented()) {</div><div class="line"><a name="l04407"></a><span class="lineno"> 4407</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l04408"></a><span class="lineno"> 4408</span>&#160;      }</div><div class="line"><a name="l04409"></a><span class="lineno"> 4409</span>&#160;</div><div class="line"><a name="l04410"></a><span class="lineno"> 4410</span>&#160;      this._isShown = <span class="keyword">true</span>;</div><div class="line"><a name="l04411"></a><span class="lineno"> 4411</span>&#160;</div><div class="line"><a name="l04412"></a><span class="lineno"> 4412</span>&#160;      this._checkScrollbar();</div><div class="line"><a name="l04413"></a><span class="lineno"> 4413</span>&#160;</div><div class="line"><a name="l04414"></a><span class="lineno"> 4414</span>&#160;      this._setScrollbar();</div><div class="line"><a name="l04415"></a><span class="lineno"> 4415</span>&#160;</div><div class="line"><a name="l04416"></a><span class="lineno"> 4416</span>&#160;      this._adjustDialog();</div><div class="line"><a name="l04417"></a><span class="lineno"> 4417</span>&#160;</div><div class="line"><a name="l04418"></a><span class="lineno"> 4418</span>&#160;      $$$1(document.body).addClass(ClassName.OPEN);</div><div class="line"><a name="l04419"></a><span class="lineno"> 4419</span>&#160;</div><div class="line"><a name="l04420"></a><span class="lineno"> 4420</span>&#160;      this._setEscapeEvent();</div><div class="line"><a name="l04421"></a><span class="lineno"> 4421</span>&#160;</div><div class="line"><a name="l04422"></a><span class="lineno"> 4422</span>&#160;      this._setResizeEvent();</div><div class="line"><a name="l04423"></a><span class="lineno"> 4423</span>&#160;</div><div class="line"><a name="l04424"></a><span class="lineno"> 4424</span>&#160;      $$$1(this._element).on(Event.CLICK_DISMISS, Selector.DATA_DISMISS, function (event) {</div><div class="line"><a name="l04425"></a><span class="lineno"> 4425</span>&#160;        <span class="keywordflow">return</span> _this.hide(event);</div><div class="line"><a name="l04426"></a><span class="lineno"> 4426</span>&#160;      });</div><div class="line"><a name="l04427"></a><span class="lineno"> 4427</span>&#160;      $$$1(this._dialog).on(Event.MOUSEDOWN_DISMISS, function () {</div><div class="line"><a name="l04428"></a><span class="lineno"> 4428</span>&#160;        $$$1(_this._element).one(Event.MOUSEUP_DISMISS, function (event) {</div><div class="line"><a name="l04429"></a><span class="lineno"> 4429</span>&#160;          <span class="keywordflow">if</span> ($$$1(event.target).is(_this._element)) {</div><div class="line"><a name="l04430"></a><span class="lineno"> 4430</span>&#160;            _this._ignoreBackdropClick = <span class="keyword">true</span>;</div><div class="line"><a name="l04431"></a><span class="lineno"> 4431</span>&#160;          }</div><div class="line"><a name="l04432"></a><span class="lineno"> 4432</span>&#160;        });</div><div class="line"><a name="l04433"></a><span class="lineno"> 4433</span>&#160;      });</div><div class="line"><a name="l04434"></a><span class="lineno"> 4434</span>&#160;</div><div class="line"><a name="l04435"></a><span class="lineno"> 4435</span>&#160;      this._showBackdrop(<span class="keyword">function</span> () {</div><div class="line"><a name="l04436"></a><span class="lineno"> 4436</span>&#160;        <span class="keywordflow">return</span> _this._showElement(relatedTarget);</div><div class="line"><a name="l04437"></a><span class="lineno"> 4437</span>&#160;      });</div><div class="line"><a name="l04438"></a><span class="lineno"> 4438</span>&#160;    };</div><div class="line"><a name="l04439"></a><span class="lineno"> 4439</span>&#160;</div><div class="line"><a name="l04440"></a><span class="lineno"> 4440</span>&#160;    _proto.hide = <span class="keyword">function</span> hide(event) {</div><div class="line"><a name="l04441"></a><span class="lineno"> 4441</span>&#160;      var _this2 = <span class="keyword">this</span>;</div><div class="line"><a name="l04442"></a><span class="lineno"> 4442</span>&#160;</div><div class="line"><a name="l04443"></a><span class="lineno"> 4443</span>&#160;      <span class="keywordflow">if</span> (event) {</div><div class="line"><a name="l04444"></a><span class="lineno"> 4444</span>&#160;        <span class="keyword">event</span>.preventDefault();</div><div class="line"><a name="l04445"></a><span class="lineno"> 4445</span>&#160;      }</div><div class="line"><a name="l04446"></a><span class="lineno"> 4446</span>&#160;</div><div class="line"><a name="l04447"></a><span class="lineno"> 4447</span>&#160;      <span class="keywordflow">if</span> (this._isTransitioning || !this._isShown) {</div><div class="line"><a name="l04448"></a><span class="lineno"> 4448</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l04449"></a><span class="lineno"> 4449</span>&#160;      }</div><div class="line"><a name="l04450"></a><span class="lineno"> 4450</span>&#160;</div><div class="line"><a name="l04451"></a><span class="lineno"> 4451</span>&#160;      var hideEvent = $$$1.Event(Event.HIDE);</div><div class="line"><a name="l04452"></a><span class="lineno"> 4452</span>&#160;      $$$1(this._element).trigger(hideEvent);</div><div class="line"><a name="l04453"></a><span class="lineno"> 4453</span>&#160;</div><div class="line"><a name="l04454"></a><span class="lineno"> 4454</span>&#160;      <span class="keywordflow">if</span> (!this._isShown || hideEvent.isDefaultPrevented()) {</div><div class="line"><a name="l04455"></a><span class="lineno"> 4455</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l04456"></a><span class="lineno"> 4456</span>&#160;      }</div><div class="line"><a name="l04457"></a><span class="lineno"> 4457</span>&#160;</div><div class="line"><a name="l04458"></a><span class="lineno"> 4458</span>&#160;      this._isShown = <span class="keyword">false</span>;</div><div class="line"><a name="l04459"></a><span class="lineno"> 4459</span>&#160;      var transition = Util.supportsTransitionEnd() &amp;&amp; $$$1(this._element).hasClass(ClassName.FADE);</div><div class="line"><a name="l04460"></a><span class="lineno"> 4460</span>&#160;</div><div class="line"><a name="l04461"></a><span class="lineno"> 4461</span>&#160;      <span class="keywordflow">if</span> (transition) {</div><div class="line"><a name="l04462"></a><span class="lineno"> 4462</span>&#160;        this._isTransitioning = <span class="keyword">true</span>;</div><div class="line"><a name="l04463"></a><span class="lineno"> 4463</span>&#160;      }</div><div class="line"><a name="l04464"></a><span class="lineno"> 4464</span>&#160;</div><div class="line"><a name="l04465"></a><span class="lineno"> 4465</span>&#160;      this._setEscapeEvent();</div><div class="line"><a name="l04466"></a><span class="lineno"> 4466</span>&#160;</div><div class="line"><a name="l04467"></a><span class="lineno"> 4467</span>&#160;      this._setResizeEvent();</div><div class="line"><a name="l04468"></a><span class="lineno"> 4468</span>&#160;</div><div class="line"><a name="l04469"></a><span class="lineno"> 4469</span>&#160;      $$$1(document).off(Event.FOCUSIN);</div><div class="line"><a name="l04470"></a><span class="lineno"> 4470</span>&#160;      $$$1(this._element).removeClass(ClassName.SHOW);</div><div class="line"><a name="l04471"></a><span class="lineno"> 4471</span>&#160;      $$$1(this._element).off(Event.CLICK_DISMISS);</div><div class="line"><a name="l04472"></a><span class="lineno"> 4472</span>&#160;      $$$1(this._dialog).off(Event.MOUSEDOWN_DISMISS);</div><div class="line"><a name="l04473"></a><span class="lineno"> 4473</span>&#160;</div><div class="line"><a name="l04474"></a><span class="lineno"> 4474</span>&#160;      <span class="keywordflow">if</span> (transition) {</div><div class="line"><a name="l04475"></a><span class="lineno"> 4475</span>&#160;        $$$1(this._element).one(Util.TRANSITION_END, function (event) {</div><div class="line"><a name="l04476"></a><span class="lineno"> 4476</span>&#160;          <span class="keywordflow">return</span> _this2._hideModal(event);</div><div class="line"><a name="l04477"></a><span class="lineno"> 4477</span>&#160;        }).<a class="code" href="../../db/db2/a00020.php#a006fe6a2a254572b367123c6db401ff3">emulateTransitionEnd</a>(TRANSITION_DURATION);</div><div class="line"><a name="l04478"></a><span class="lineno"> 4478</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l04479"></a><span class="lineno"> 4479</span>&#160;        this._hideModal();</div><div class="line"><a name="l04480"></a><span class="lineno"> 4480</span>&#160;      }</div><div class="line"><a name="l04481"></a><span class="lineno"> 4481</span>&#160;    };</div><div class="line"><a name="l04482"></a><span class="lineno"> 4482</span>&#160;</div><div class="line"><a name="l04483"></a><span class="lineno"> 4483</span>&#160;    _proto.dispose = <span class="keyword">function</span> dispose() {</div><div class="line"><a name="l04484"></a><span class="lineno"> 4484</span>&#160;      $$$1.removeData(this._element, DATA_KEY);</div><div class="line"><a name="l04485"></a><span class="lineno"> 4485</span>&#160;      $$$1(window, document, this._element, this._backdrop).off(EVENT_KEY);</div><div class="line"><a name="l04486"></a><span class="lineno"> 4486</span>&#160;      this._config = null;</div><div class="line"><a name="l04487"></a><span class="lineno"> 4487</span>&#160;      this._element = null;</div><div class="line"><a name="l04488"></a><span class="lineno"> 4488</span>&#160;      this._dialog = null;</div><div class="line"><a name="l04489"></a><span class="lineno"> 4489</span>&#160;      this._backdrop = null;</div><div class="line"><a name="l04490"></a><span class="lineno"> 4490</span>&#160;      this._isShown = null;</div><div class="line"><a name="l04491"></a><span class="lineno"> 4491</span>&#160;      this._isBodyOverflowing = null;</div><div class="line"><a name="l04492"></a><span class="lineno"> 4492</span>&#160;      this._ignoreBackdropClick = null;</div><div class="line"><a name="l04493"></a><span class="lineno"> 4493</span>&#160;      this._scrollbarWidth = null;</div><div class="line"><a name="l04494"></a><span class="lineno"> 4494</span>&#160;    };</div><div class="line"><a name="l04495"></a><span class="lineno"> 4495</span>&#160;</div><div class="line"><a name="l04496"></a><span class="lineno"> 4496</span>&#160;    _proto.handleUpdate = <span class="keyword">function</span> handleUpdate() {</div><div class="line"><a name="l04497"></a><span class="lineno"> 4497</span>&#160;      this._adjustDialog();</div><div class="line"><a name="l04498"></a><span class="lineno"> 4498</span>&#160;    }; <span class="comment">// Private</span></div><div class="line"><a name="l04499"></a><span class="lineno"> 4499</span>&#160;</div><div class="line"><a name="l04500"></a><span class="lineno"> 4500</span>&#160;</div><div class="line"><a name="l04501"></a><span class="lineno"> 4501</span>&#160;    _proto._getConfig = <span class="keyword">function</span> _getConfig(config) {</div><div class="line"><a name="l04502"></a><span class="lineno"> 4502</span>&#160;      config = <a class="code" href="../../d4/d51/a00017.php#ac2eea16a19b83a9509e2f9188c0fdc0f">_extends</a>({}, Default, config);</div><div class="line"><a name="l04503"></a><span class="lineno"> 4503</span>&#160;      Util.typeCheckConfig(NAME, config, DefaultType);</div><div class="line"><a name="l04504"></a><span class="lineno"> 4504</span>&#160;      <span class="keywordflow">return</span> config;</div><div class="line"><a name="l04505"></a><span class="lineno"> 4505</span>&#160;    };</div><div class="line"><a name="l04506"></a><span class="lineno"> 4506</span>&#160;</div><div class="line"><a name="l04507"></a><span class="lineno"> 4507</span>&#160;    _proto._showElement = <span class="keyword">function</span> _showElement(relatedTarget) {</div><div class="line"><a name="l04508"></a><span class="lineno"> 4508</span>&#160;      var _this3 = <span class="keyword">this</span>;</div><div class="line"><a name="l04509"></a><span class="lineno"> 4509</span>&#160;</div><div class="line"><a name="l04510"></a><span class="lineno"> 4510</span>&#160;      var transition = Util.supportsTransitionEnd() &amp;&amp; $$$1(this._element).hasClass(ClassName.FADE);</div><div class="line"><a name="l04511"></a><span class="lineno"> 4511</span>&#160;</div><div class="line"><a name="l04512"></a><span class="lineno"> 4512</span>&#160;      <span class="keywordflow">if</span> (!this._element.parentNode || <span class="keyword">this</span>._element.parentNode.nodeType !== Node.ELEMENT_NODE) {</div><div class="line"><a name="l04513"></a><span class="lineno"> 4513</span>&#160;        <span class="comment">// Don&#39;t move modal&#39;s DOM position</span></div><div class="line"><a name="l04514"></a><span class="lineno"> 4514</span>&#160;        document.body.appendChild(this._element);</div><div class="line"><a name="l04515"></a><span class="lineno"> 4515</span>&#160;      }</div><div class="line"><a name="l04516"></a><span class="lineno"> 4516</span>&#160;</div><div class="line"><a name="l04517"></a><span class="lineno"> 4517</span>&#160;      this._element.style.display = <span class="stringliteral">&#39;block&#39;</span>;</div><div class="line"><a name="l04518"></a><span class="lineno"> 4518</span>&#160;</div><div class="line"><a name="l04519"></a><span class="lineno"> 4519</span>&#160;      this._element.removeAttribute(<span class="stringliteral">&#39;aria-hidden&#39;</span>);</div><div class="line"><a name="l04520"></a><span class="lineno"> 4520</span>&#160;</div><div class="line"><a name="l04521"></a><span class="lineno"> 4521</span>&#160;      this._element.scrollTop = 0;</div><div class="line"><a name="l04522"></a><span class="lineno"> 4522</span>&#160;</div><div class="line"><a name="l04523"></a><span class="lineno"> 4523</span>&#160;      <span class="keywordflow">if</span> (transition) {</div><div class="line"><a name="l04524"></a><span class="lineno"> 4524</span>&#160;        Util.reflow(this._element);</div><div class="line"><a name="l04525"></a><span class="lineno"> 4525</span>&#160;      }</div><div class="line"><a name="l04526"></a><span class="lineno"> 4526</span>&#160;</div><div class="line"><a name="l04527"></a><span class="lineno"> 4527</span>&#160;      $$$1(this._element).addClass(ClassName.SHOW);</div><div class="line"><a name="l04528"></a><span class="lineno"> 4528</span>&#160;</div><div class="line"><a name="l04529"></a><span class="lineno"> 4529</span>&#160;      <span class="keywordflow">if</span> (this._config.focus) {</div><div class="line"><a name="l04530"></a><span class="lineno"> 4530</span>&#160;        this._enforceFocus();</div><div class="line"><a name="l04531"></a><span class="lineno"> 4531</span>&#160;      }</div><div class="line"><a name="l04532"></a><span class="lineno"> 4532</span>&#160;</div><div class="line"><a name="l04533"></a><span class="lineno"> 4533</span>&#160;      var shownEvent = $$$1.Event(Event.SHOWN, {</div><div class="line"><a name="l04534"></a><span class="lineno"> 4534</span>&#160;        relatedTarget: relatedTarget</div><div class="line"><a name="l04535"></a><span class="lineno"> 4535</span>&#160;      });</div><div class="line"><a name="l04536"></a><span class="lineno"> 4536</span>&#160;</div><div class="line"><a name="l04537"></a><span class="lineno"> 4537</span>&#160;      var transitionComplete = <span class="keyword">function</span> transitionComplete() {</div><div class="line"><a name="l04538"></a><span class="lineno"> 4538</span>&#160;        <span class="keywordflow">if</span> (_this3._config.focus) {</div><div class="line"><a name="l04539"></a><span class="lineno"> 4539</span>&#160;          _this3._element.focus();</div><div class="line"><a name="l04540"></a><span class="lineno"> 4540</span>&#160;        }</div><div class="line"><a name="l04541"></a><span class="lineno"> 4541</span>&#160;</div><div class="line"><a name="l04542"></a><span class="lineno"> 4542</span>&#160;        _this3._isTransitioning = <span class="keyword">false</span>;</div><div class="line"><a name="l04543"></a><span class="lineno"> 4543</span>&#160;        $$$1(_this3._element).trigger(shownEvent);</div><div class="line"><a name="l04544"></a><span class="lineno"> 4544</span>&#160;      };</div><div class="line"><a name="l04545"></a><span class="lineno"> 4545</span>&#160;</div><div class="line"><a name="l04546"></a><span class="lineno"> 4546</span>&#160;      <span class="keywordflow">if</span> (transition) {</div><div class="line"><a name="l04547"></a><span class="lineno"> 4547</span>&#160;        $$$1(this._dialog).one(Util.TRANSITION_END, transitionComplete).emulateTransitionEnd(TRANSITION_DURATION);</div><div class="line"><a name="l04548"></a><span class="lineno"> 4548</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l04549"></a><span class="lineno"> 4549</span>&#160;        transitionComplete();</div><div class="line"><a name="l04550"></a><span class="lineno"> 4550</span>&#160;      }</div><div class="line"><a name="l04551"></a><span class="lineno"> 4551</span>&#160;    };</div><div class="line"><a name="l04552"></a><span class="lineno"> 4552</span>&#160;</div><div class="line"><a name="l04553"></a><span class="lineno"> 4553</span>&#160;    _proto._enforceFocus = <span class="keyword">function</span> _enforceFocus() {</div><div class="line"><a name="l04554"></a><span class="lineno"> 4554</span>&#160;      var _this4 = <span class="keyword">this</span>;</div><div class="line"><a name="l04555"></a><span class="lineno"> 4555</span>&#160;</div><div class="line"><a name="l04556"></a><span class="lineno"> 4556</span>&#160;      $$$1(document).off(Event.FOCUSIN) <span class="comment">// Guard against infinite focus loop</span></div><div class="line"><a name="l04557"></a><span class="lineno"> 4557</span>&#160;      .on(Event.FOCUSIN, function (event) {</div><div class="line"><a name="l04558"></a><span class="lineno"> 4558</span>&#160;        <span class="keywordflow">if</span> (document !== event.target &amp;&amp; _this4._element !== event.target &amp;&amp; $$$1(_this4._element).has(event.target).length === 0) {</div><div class="line"><a name="l04559"></a><span class="lineno"> 4559</span>&#160;          _this4._element.focus();</div><div class="line"><a name="l04560"></a><span class="lineno"> 4560</span>&#160;        }</div><div class="line"><a name="l04561"></a><span class="lineno"> 4561</span>&#160;      });</div><div class="line"><a name="l04562"></a><span class="lineno"> 4562</span>&#160;    };</div><div class="line"><a name="l04563"></a><span class="lineno"> 4563</span>&#160;</div><div class="line"><a name="l04564"></a><span class="lineno"> 4564</span>&#160;    _proto._setEscapeEvent = <span class="keyword">function</span> _setEscapeEvent() {</div><div class="line"><a name="l04565"></a><span class="lineno"> 4565</span>&#160;      var _this5 = <span class="keyword">this</span>;</div><div class="line"><a name="l04566"></a><span class="lineno"> 4566</span>&#160;</div><div class="line"><a name="l04567"></a><span class="lineno"> 4567</span>&#160;      <span class="keywordflow">if</span> (this._isShown &amp;&amp; this._config.keyboard) {</div><div class="line"><a name="l04568"></a><span class="lineno"> 4568</span>&#160;        $$$1(this._element).on(Event.KEYDOWN_DISMISS, function (event) {</div><div class="line"><a name="l04569"></a><span class="lineno"> 4569</span>&#160;          <span class="keywordflow">if</span> (event.which === ESCAPE_KEYCODE) {</div><div class="line"><a name="l04570"></a><span class="lineno"> 4570</span>&#160;            <span class="keyword">event</span>.preventDefault();</div><div class="line"><a name="l04571"></a><span class="lineno"> 4571</span>&#160;</div><div class="line"><a name="l04572"></a><span class="lineno"> 4572</span>&#160;            _this5.hide();</div><div class="line"><a name="l04573"></a><span class="lineno"> 4573</span>&#160;          }</div><div class="line"><a name="l04574"></a><span class="lineno"> 4574</span>&#160;        });</div><div class="line"><a name="l04575"></a><span class="lineno"> 4575</span>&#160;      } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (!this._isShown) {</div><div class="line"><a name="l04576"></a><span class="lineno"> 4576</span>&#160;        $$$1(this._element).off(Event.KEYDOWN_DISMISS);</div><div class="line"><a name="l04577"></a><span class="lineno"> 4577</span>&#160;      }</div><div class="line"><a name="l04578"></a><span class="lineno"> 4578</span>&#160;    };</div><div class="line"><a name="l04579"></a><span class="lineno"> 4579</span>&#160;</div><div class="line"><a name="l04580"></a><span class="lineno"> 4580</span>&#160;    _proto._setResizeEvent = <span class="keyword">function</span> _setResizeEvent() {</div><div class="line"><a name="l04581"></a><span class="lineno"> 4581</span>&#160;      var _this6 = <span class="keyword">this</span>;</div><div class="line"><a name="l04582"></a><span class="lineno"> 4582</span>&#160;</div><div class="line"><a name="l04583"></a><span class="lineno"> 4583</span>&#160;      <span class="keywordflow">if</span> (this._isShown) {</div><div class="line"><a name="l04584"></a><span class="lineno"> 4584</span>&#160;        $$$1(window).on(Event.RESIZE, function (event) {</div><div class="line"><a name="l04585"></a><span class="lineno"> 4585</span>&#160;          <span class="keywordflow">return</span> _this6.handleUpdate(event);</div><div class="line"><a name="l04586"></a><span class="lineno"> 4586</span>&#160;        });</div><div class="line"><a name="l04587"></a><span class="lineno"> 4587</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l04588"></a><span class="lineno"> 4588</span>&#160;        $$$1(window).off(Event.RESIZE);</div><div class="line"><a name="l04589"></a><span class="lineno"> 4589</span>&#160;      }</div><div class="line"><a name="l04590"></a><span class="lineno"> 4590</span>&#160;    };</div><div class="line"><a name="l04591"></a><span class="lineno"> 4591</span>&#160;</div><div class="line"><a name="l04592"></a><span class="lineno"> 4592</span>&#160;    _proto._hideModal = <span class="keyword">function</span> _hideModal() {</div><div class="line"><a name="l04593"></a><span class="lineno"> 4593</span>&#160;      var _this7 = <span class="keyword">this</span>;</div><div class="line"><a name="l04594"></a><span class="lineno"> 4594</span>&#160;</div><div class="line"><a name="l04595"></a><span class="lineno"> 4595</span>&#160;      this._element.style.display = <span class="stringliteral">&#39;none&#39;</span>;</div><div class="line"><a name="l04596"></a><span class="lineno"> 4596</span>&#160;</div><div class="line"><a name="l04597"></a><span class="lineno"> 4597</span>&#160;      this._element.setAttribute(<span class="stringliteral">&#39;aria-hidden&#39;</span>, <span class="keyword">true</span>);</div><div class="line"><a name="l04598"></a><span class="lineno"> 4598</span>&#160;</div><div class="line"><a name="l04599"></a><span class="lineno"> 4599</span>&#160;      this._isTransitioning = <span class="keyword">false</span>;</div><div class="line"><a name="l04600"></a><span class="lineno"> 4600</span>&#160;</div><div class="line"><a name="l04601"></a><span class="lineno"> 4601</span>&#160;      this._showBackdrop(<span class="keyword">function</span> () {</div><div class="line"><a name="l04602"></a><span class="lineno"> 4602</span>&#160;        $$$1(document.body).removeClass(ClassName.OPEN);</div><div class="line"><a name="l04603"></a><span class="lineno"> 4603</span>&#160;</div><div class="line"><a name="l04604"></a><span class="lineno"> 4604</span>&#160;        _this7._resetAdjustments();</div><div class="line"><a name="l04605"></a><span class="lineno"> 4605</span>&#160;</div><div class="line"><a name="l04606"></a><span class="lineno"> 4606</span>&#160;        _this7._resetScrollbar();</div><div class="line"><a name="l04607"></a><span class="lineno"> 4607</span>&#160;</div><div class="line"><a name="l04608"></a><span class="lineno"> 4608</span>&#160;        $$$1(_this7._element).trigger(Event.HIDDEN);</div><div class="line"><a name="l04609"></a><span class="lineno"> 4609</span>&#160;      });</div><div class="line"><a name="l04610"></a><span class="lineno"> 4610</span>&#160;    };</div><div class="line"><a name="l04611"></a><span class="lineno"> 4611</span>&#160;</div><div class="line"><a name="l04612"></a><span class="lineno"> 4612</span>&#160;    _proto._removeBackdrop = <span class="keyword">function</span> _removeBackdrop() {</div><div class="line"><a name="l04613"></a><span class="lineno"> 4613</span>&#160;      <span class="keywordflow">if</span> (this._backdrop) {</div><div class="line"><a name="l04614"></a><span class="lineno"> 4614</span>&#160;        $$$1(this._backdrop).<span class="keyword">remove</span>();</div><div class="line"><a name="l04615"></a><span class="lineno"> 4615</span>&#160;        this._backdrop = null;</div><div class="line"><a name="l04616"></a><span class="lineno"> 4616</span>&#160;      }</div><div class="line"><a name="l04617"></a><span class="lineno"> 4617</span>&#160;    };</div><div class="line"><a name="l04618"></a><span class="lineno"> 4618</span>&#160;</div><div class="line"><a name="l04619"></a><span class="lineno"> 4619</span>&#160;    _proto._showBackdrop = <span class="keyword">function</span> _showBackdrop(callback) {</div><div class="line"><a name="l04620"></a><span class="lineno"> 4620</span>&#160;      var _this8 = <span class="keyword">this</span>;</div><div class="line"><a name="l04621"></a><span class="lineno"> 4621</span>&#160;</div><div class="line"><a name="l04622"></a><span class="lineno"> 4622</span>&#160;      var animate = $$$1(this._element).hasClass(ClassName.FADE) ? ClassName.FADE : <span class="stringliteral">&#39;&#39;</span>;</div><div class="line"><a name="l04623"></a><span class="lineno"> 4623</span>&#160;</div><div class="line"><a name="l04624"></a><span class="lineno"> 4624</span>&#160;      <span class="keywordflow">if</span> (this._isShown &amp;&amp; this._config.backdrop) {</div><div class="line"><a name="l04625"></a><span class="lineno"> 4625</span>&#160;        var doAnimate = Util.supportsTransitionEnd() &amp;&amp; animate;</div><div class="line"><a name="l04626"></a><span class="lineno"> 4626</span>&#160;        this._backdrop = document.createElement(<span class="stringliteral">&#39;div&#39;</span>);</div><div class="line"><a name="l04627"></a><span class="lineno"> 4627</span>&#160;        this._backdrop.className = ClassName.BACKDROP;</div><div class="line"><a name="l04628"></a><span class="lineno"> 4628</span>&#160;</div><div class="line"><a name="l04629"></a><span class="lineno"> 4629</span>&#160;        <span class="keywordflow">if</span> (animate) {</div><div class="line"><a name="l04630"></a><span class="lineno"> 4630</span>&#160;          $$$1(this._backdrop).addClass(animate);</div><div class="line"><a name="l04631"></a><span class="lineno"> 4631</span>&#160;        }</div><div class="line"><a name="l04632"></a><span class="lineno"> 4632</span>&#160;</div><div class="line"><a name="l04633"></a><span class="lineno"> 4633</span>&#160;        $$$1(this._backdrop).appendTo(document.body);</div><div class="line"><a name="l04634"></a><span class="lineno"> 4634</span>&#160;        $$$1(this._element).on(Event.CLICK_DISMISS, function (event) {</div><div class="line"><a name="l04635"></a><span class="lineno"> 4635</span>&#160;          <span class="keywordflow">if</span> (_this8._ignoreBackdropClick) {</div><div class="line"><a name="l04636"></a><span class="lineno"> 4636</span>&#160;            _this8._ignoreBackdropClick = <span class="keyword">false</span>;</div><div class="line"><a name="l04637"></a><span class="lineno"> 4637</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l04638"></a><span class="lineno"> 4638</span>&#160;          }</div><div class="line"><a name="l04639"></a><span class="lineno"> 4639</span>&#160;</div><div class="line"><a name="l04640"></a><span class="lineno"> 4640</span>&#160;          <span class="keywordflow">if</span> (event.target !== event.currentTarget) {</div><div class="line"><a name="l04641"></a><span class="lineno"> 4641</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l04642"></a><span class="lineno"> 4642</span>&#160;          }</div><div class="line"><a name="l04643"></a><span class="lineno"> 4643</span>&#160;</div><div class="line"><a name="l04644"></a><span class="lineno"> 4644</span>&#160;          <span class="keywordflow">if</span> (_this8._config.backdrop === <span class="stringliteral">&#39;static&#39;</span>) {</div><div class="line"><a name="l04645"></a><span class="lineno"> 4645</span>&#160;            _this8._element.focus();</div><div class="line"><a name="l04646"></a><span class="lineno"> 4646</span>&#160;          } <span class="keywordflow">else</span> {</div><div class="line"><a name="l04647"></a><span class="lineno"> 4647</span>&#160;            _this8.hide();</div><div class="line"><a name="l04648"></a><span class="lineno"> 4648</span>&#160;          }</div><div class="line"><a name="l04649"></a><span class="lineno"> 4649</span>&#160;        });</div><div class="line"><a name="l04650"></a><span class="lineno"> 4650</span>&#160;</div><div class="line"><a name="l04651"></a><span class="lineno"> 4651</span>&#160;        <span class="keywordflow">if</span> (doAnimate) {</div><div class="line"><a name="l04652"></a><span class="lineno"> 4652</span>&#160;          Util.reflow(this._backdrop);</div><div class="line"><a name="l04653"></a><span class="lineno"> 4653</span>&#160;        }</div><div class="line"><a name="l04654"></a><span class="lineno"> 4654</span>&#160;</div><div class="line"><a name="l04655"></a><span class="lineno"> 4655</span>&#160;        $$$1(this._backdrop).addClass(ClassName.SHOW);</div><div class="line"><a name="l04656"></a><span class="lineno"> 4656</span>&#160;</div><div class="line"><a name="l04657"></a><span class="lineno"> 4657</span>&#160;        <span class="keywordflow">if</span> (!callback) {</div><div class="line"><a name="l04658"></a><span class="lineno"> 4658</span>&#160;          <span class="keywordflow">return</span>;</div><div class="line"><a name="l04659"></a><span class="lineno"> 4659</span>&#160;        }</div><div class="line"><a name="l04660"></a><span class="lineno"> 4660</span>&#160;</div><div class="line"><a name="l04661"></a><span class="lineno"> 4661</span>&#160;        <span class="keywordflow">if</span> (!doAnimate) {</div><div class="line"><a name="l04662"></a><span class="lineno"> 4662</span>&#160;          callback();</div><div class="line"><a name="l04663"></a><span class="lineno"> 4663</span>&#160;          <span class="keywordflow">return</span>;</div><div class="line"><a name="l04664"></a><span class="lineno"> 4664</span>&#160;        }</div><div class="line"><a name="l04665"></a><span class="lineno"> 4665</span>&#160;</div><div class="line"><a name="l04666"></a><span class="lineno"> 4666</span>&#160;        $$$1(this._backdrop).one(Util.TRANSITION_END, callback).emulateTransitionEnd(BACKDROP_TRANSITION_DURATION);</div><div class="line"><a name="l04667"></a><span class="lineno"> 4667</span>&#160;      } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (!this._isShown &amp;&amp; this._backdrop) {</div><div class="line"><a name="l04668"></a><span class="lineno"> 4668</span>&#160;        $$$1(this._backdrop).removeClass(ClassName.SHOW);</div><div class="line"><a name="l04669"></a><span class="lineno"> 4669</span>&#160;</div><div class="line"><a name="l04670"></a><span class="lineno"> 4670</span>&#160;        var callbackRemove = <span class="keyword">function</span> callbackRemove() {</div><div class="line"><a name="l04671"></a><span class="lineno"> 4671</span>&#160;          _this8._removeBackdrop();</div><div class="line"><a name="l04672"></a><span class="lineno"> 4672</span>&#160;</div><div class="line"><a name="l04673"></a><span class="lineno"> 4673</span>&#160;          <span class="keywordflow">if</span> (callback) {</div><div class="line"><a name="l04674"></a><span class="lineno"> 4674</span>&#160;            callback();</div><div class="line"><a name="l04675"></a><span class="lineno"> 4675</span>&#160;          }</div><div class="line"><a name="l04676"></a><span class="lineno"> 4676</span>&#160;        };</div><div class="line"><a name="l04677"></a><span class="lineno"> 4677</span>&#160;</div><div class="line"><a name="l04678"></a><span class="lineno"> 4678</span>&#160;        <span class="keywordflow">if</span> (Util.supportsTransitionEnd() &amp;&amp; $$$1(this._element).hasClass(ClassName.FADE)) {</div><div class="line"><a name="l04679"></a><span class="lineno"> 4679</span>&#160;          $$$1(this._backdrop).one(Util.TRANSITION_END, callbackRemove).emulateTransitionEnd(BACKDROP_TRANSITION_DURATION);</div><div class="line"><a name="l04680"></a><span class="lineno"> 4680</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l04681"></a><span class="lineno"> 4681</span>&#160;          callbackRemove();</div><div class="line"><a name="l04682"></a><span class="lineno"> 4682</span>&#160;        }</div><div class="line"><a name="l04683"></a><span class="lineno"> 4683</span>&#160;      } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (callback) {</div><div class="line"><a name="l04684"></a><span class="lineno"> 4684</span>&#160;        callback();</div><div class="line"><a name="l04685"></a><span class="lineno"> 4685</span>&#160;      }</div><div class="line"><a name="l04686"></a><span class="lineno"> 4686</span>&#160;    }; <span class="comment">// ----------------------------------------------------------------------</span></div><div class="line"><a name="l04687"></a><span class="lineno"> 4687</span>&#160;    <span class="comment">// the following methods are used to handle overflowing modals</span></div><div class="line"><a name="l04688"></a><span class="lineno"> 4688</span>&#160;    <span class="comment">// todo (fat): these should probably be refactored out of modal.js</span></div><div class="line"><a name="l04689"></a><span class="lineno"> 4689</span>&#160;    <span class="comment">// ----------------------------------------------------------------------</span></div><div class="line"><a name="l04690"></a><span class="lineno"> 4690</span>&#160;</div><div class="line"><a name="l04691"></a><span class="lineno"> 4691</span>&#160;</div><div class="line"><a name="l04692"></a><span class="lineno"> 4692</span>&#160;    _proto._adjustDialog = <span class="keyword">function</span> _adjustDialog() {</div><div class="line"><a name="l04693"></a><span class="lineno"> 4693</span>&#160;      var isModalOverflowing = this._element.scrollHeight &gt; document.documentElement.clientHeight;</div><div class="line"><a name="l04694"></a><span class="lineno"> 4694</span>&#160;</div><div class="line"><a name="l04695"></a><span class="lineno"> 4695</span>&#160;      <span class="keywordflow">if</span> (!this._isBodyOverflowing &amp;&amp; isModalOverflowing) {</div><div class="line"><a name="l04696"></a><span class="lineno"> 4696</span>&#160;        this._element.style.paddingLeft = this._scrollbarWidth + <span class="stringliteral">&quot;px&quot;</span>;</div><div class="line"><a name="l04697"></a><span class="lineno"> 4697</span>&#160;      }</div><div class="line"><a name="l04698"></a><span class="lineno"> 4698</span>&#160;</div><div class="line"><a name="l04699"></a><span class="lineno"> 4699</span>&#160;      <span class="keywordflow">if</span> (this._isBodyOverflowing &amp;&amp; !isModalOverflowing) {</div><div class="line"><a name="l04700"></a><span class="lineno"> 4700</span>&#160;        this._element.style.paddingRight = this._scrollbarWidth + <span class="stringliteral">&quot;px&quot;</span>;</div><div class="line"><a name="l04701"></a><span class="lineno"> 4701</span>&#160;      }</div><div class="line"><a name="l04702"></a><span class="lineno"> 4702</span>&#160;    };</div><div class="line"><a name="l04703"></a><span class="lineno"> 4703</span>&#160;</div><div class="line"><a name="l04704"></a><span class="lineno"> 4704</span>&#160;    _proto._resetAdjustments = <span class="keyword">function</span> _resetAdjustments() {</div><div class="line"><a name="l04705"></a><span class="lineno"> 4705</span>&#160;      this._element.style.paddingLeft = <span class="stringliteral">&#39;&#39;</span>;</div><div class="line"><a name="l04706"></a><span class="lineno"> 4706</span>&#160;      this._element.style.paddingRight = <span class="stringliteral">&#39;&#39;</span>;</div><div class="line"><a name="l04707"></a><span class="lineno"> 4707</span>&#160;    };</div><div class="line"><a name="l04708"></a><span class="lineno"> 4708</span>&#160;</div><div class="line"><a name="l04709"></a><span class="lineno"> 4709</span>&#160;    _proto._checkScrollbar = <span class="keyword">function</span> _checkScrollbar() {</div><div class="line"><a name="l04710"></a><span class="lineno"> 4710</span>&#160;      var rect = document.body.getBoundingClientRect();</div><div class="line"><a name="l04711"></a><span class="lineno"> 4711</span>&#160;      this._isBodyOverflowing = rect.left + rect.right &lt; window.innerWidth;</div><div class="line"><a name="l04712"></a><span class="lineno"> 4712</span>&#160;      this._scrollbarWidth = this._getScrollbarWidth();</div><div class="line"><a name="l04713"></a><span class="lineno"> 4713</span>&#160;    };</div><div class="line"><a name="l04714"></a><span class="lineno"> 4714</span>&#160;</div><div class="line"><a name="l04715"></a><span class="lineno"> 4715</span>&#160;    _proto._setScrollbar = <span class="keyword">function</span> _setScrollbar() {</div><div class="line"><a name="l04716"></a><span class="lineno"> 4716</span>&#160;      var _this9 = <span class="keyword">this</span>;</div><div class="line"><a name="l04717"></a><span class="lineno"> 4717</span>&#160;</div><div class="line"><a name="l04718"></a><span class="lineno"> 4718</span>&#160;      <span class="keywordflow">if</span> (this._isBodyOverflowing) {</div><div class="line"><a name="l04719"></a><span class="lineno"> 4719</span>&#160;        <span class="comment">// Note: DOMNode.style.paddingRight returns the actual value or &#39;&#39; if not set</span></div><div class="line"><a name="l04720"></a><span class="lineno"> 4720</span>&#160;        <span class="comment">//   while $(DOMNode).css(&#39;padding-right&#39;) returns the calculated value or 0 if not set</span></div><div class="line"><a name="l04721"></a><span class="lineno"> 4721</span>&#160;        <span class="comment">// Adjust fixed content padding</span></div><div class="line"><a name="l04722"></a><span class="lineno"> 4722</span>&#160;        $$$1(Selector.FIXED_CONTENT).<a class="code" href="../../d3/dea/a00046.php#a877963eb3bdbe10cffb2337a091a7ff1">each</a>(<span class="keyword">function</span> (index, element) {</div><div class="line"><a name="l04723"></a><span class="lineno"> 4723</span>&#160;          var actualPadding = $$$1(element)[0].style.paddingRight;</div><div class="line"><a name="l04724"></a><span class="lineno"> 4724</span>&#160;          var calculatedPadding = $$$1(element).css(<span class="stringliteral">&#39;padding-right&#39;</span>);</div><div class="line"><a name="l04725"></a><span class="lineno"> 4725</span>&#160;          $$$1(element).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(<span class="stringliteral">&#39;padding-right&#39;</span>, actualPadding).css(<span class="stringliteral">&#39;padding-right&#39;</span>, parseFloat(calculatedPadding) + _this9._scrollbarWidth + <span class="stringliteral">&quot;px&quot;</span>);</div><div class="line"><a name="l04726"></a><span class="lineno"> 4726</span>&#160;        }); <span class="comment">// Adjust sticky content margin</span></div><div class="line"><a name="l04727"></a><span class="lineno"> 4727</span>&#160;</div><div class="line"><a name="l04728"></a><span class="lineno"> 4728</span>&#160;        $$$1(Selector.STICKY_CONTENT).<a class="code" href="../../d3/dea/a00046.php#a877963eb3bdbe10cffb2337a091a7ff1">each</a>(<span class="keyword">function</span> (index, element) {</div><div class="line"><a name="l04729"></a><span class="lineno"> 4729</span>&#160;          var actualMargin = $$$1(element)[0].style.marginRight;</div><div class="line"><a name="l04730"></a><span class="lineno"> 4730</span>&#160;          var calculatedMargin = $$$1(element).css(<span class="stringliteral">&#39;margin-right&#39;</span>);</div><div class="line"><a name="l04731"></a><span class="lineno"> 4731</span>&#160;          $$$1(element).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(<span class="stringliteral">&#39;margin-right&#39;</span>, actualMargin).css(<span class="stringliteral">&#39;margin-right&#39;</span>, parseFloat(calculatedMargin) - _this9._scrollbarWidth + <span class="stringliteral">&quot;px&quot;</span>);</div><div class="line"><a name="l04732"></a><span class="lineno"> 4732</span>&#160;        }); <span class="comment">// Adjust navbar-toggler margin</span></div><div class="line"><a name="l04733"></a><span class="lineno"> 4733</span>&#160;</div><div class="line"><a name="l04734"></a><span class="lineno"> 4734</span>&#160;        $$$1(Selector.NAVBAR_TOGGLER).<a class="code" href="../../d3/dea/a00046.php#a877963eb3bdbe10cffb2337a091a7ff1">each</a>(<span class="keyword">function</span> (index, element) {</div><div class="line"><a name="l04735"></a><span class="lineno"> 4735</span>&#160;          var actualMargin = $$$1(element)[0].style.marginRight;</div><div class="line"><a name="l04736"></a><span class="lineno"> 4736</span>&#160;          var calculatedMargin = $$$1(element).css(<span class="stringliteral">&#39;margin-right&#39;</span>);</div><div class="line"><a name="l04737"></a><span class="lineno"> 4737</span>&#160;          $$$1(element).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(<span class="stringliteral">&#39;margin-right&#39;</span>, actualMargin).css(<span class="stringliteral">&#39;margin-right&#39;</span>, parseFloat(calculatedMargin) + _this9._scrollbarWidth + <span class="stringliteral">&quot;px&quot;</span>);</div><div class="line"><a name="l04738"></a><span class="lineno"> 4738</span>&#160;        }); <span class="comment">// Adjust body padding</span></div><div class="line"><a name="l04739"></a><span class="lineno"> 4739</span>&#160;</div><div class="line"><a name="l04740"></a><span class="lineno"> 4740</span>&#160;        var actualPadding = document.body.style.paddingRight;</div><div class="line"><a name="l04741"></a><span class="lineno"> 4741</span>&#160;        var calculatedPadding = $$$1(<span class="stringliteral">&#39;body&#39;</span>).css(<span class="stringliteral">&#39;padding-right&#39;</span>);</div><div class="line"><a name="l04742"></a><span class="lineno"> 4742</span>&#160;        $$$1(<span class="stringliteral">&#39;body&#39;</span>).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(<span class="stringliteral">&#39;padding-right&#39;</span>, actualPadding).css(<span class="stringliteral">&#39;padding-right&#39;</span>, parseFloat(calculatedPadding) + this._scrollbarWidth + <span class="stringliteral">&quot;px&quot;</span>);</div><div class="line"><a name="l04743"></a><span class="lineno"> 4743</span>&#160;      }</div><div class="line"><a name="l04744"></a><span class="lineno"> 4744</span>&#160;    };</div><div class="line"><a name="l04745"></a><span class="lineno"> 4745</span>&#160;</div><div class="line"><a name="l04746"></a><span class="lineno"> 4746</span>&#160;    _proto._resetScrollbar = <span class="keyword">function</span> _resetScrollbar() {</div><div class="line"><a name="l04747"></a><span class="lineno"> 4747</span>&#160;      <span class="comment">// Restore fixed content padding</span></div><div class="line"><a name="l04748"></a><span class="lineno"> 4748</span>&#160;      $$$1(Selector.FIXED_CONTENT).<a class="code" href="../../d3/dea/a00046.php#a877963eb3bdbe10cffb2337a091a7ff1">each</a>(<span class="keyword">function</span> (index, element) {</div><div class="line"><a name="l04749"></a><span class="lineno"> 4749</span>&#160;        var padding = $$$1(element).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(<span class="stringliteral">&#39;padding-right&#39;</span>);</div><div class="line"><a name="l04750"></a><span class="lineno"> 4750</span>&#160;</div><div class="line"><a name="l04751"></a><span class="lineno"> 4751</span>&#160;        <span class="keywordflow">if</span> (typeof padding !== <span class="stringliteral">&#39;undefined&#39;</span>) {</div><div class="line"><a name="l04752"></a><span class="lineno"> 4752</span>&#160;          $$$1(element).css(<span class="stringliteral">&#39;padding-right&#39;</span>, padding).removeData(<span class="stringliteral">&#39;padding-right&#39;</span>);</div><div class="line"><a name="l04753"></a><span class="lineno"> 4753</span>&#160;        }</div><div class="line"><a name="l04754"></a><span class="lineno"> 4754</span>&#160;      }); <span class="comment">// Restore sticky content and navbar-toggler margin</span></div><div class="line"><a name="l04755"></a><span class="lineno"> 4755</span>&#160;</div><div class="line"><a name="l04756"></a><span class="lineno"> 4756</span>&#160;      $$$1(Selector.STICKY_CONTENT + <span class="stringliteral">&quot;, &quot;</span> + Selector.NAVBAR_TOGGLER).<a class="code" href="../../d3/dea/a00046.php#a877963eb3bdbe10cffb2337a091a7ff1">each</a>(<span class="keyword">function</span> (index, element) {</div><div class="line"><a name="l04757"></a><span class="lineno"> 4757</span>&#160;        var margin = $$$1(element).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(<span class="stringliteral">&#39;margin-right&#39;</span>);</div><div class="line"><a name="l04758"></a><span class="lineno"> 4758</span>&#160;</div><div class="line"><a name="l04759"></a><span class="lineno"> 4759</span>&#160;        <span class="keywordflow">if</span> (typeof margin !== <span class="stringliteral">&#39;undefined&#39;</span>) {</div><div class="line"><a name="l04760"></a><span class="lineno"> 4760</span>&#160;          $$$1(element).css(<span class="stringliteral">&#39;margin-right&#39;</span>, margin).removeData(<span class="stringliteral">&#39;margin-right&#39;</span>);</div><div class="line"><a name="l04761"></a><span class="lineno"> 4761</span>&#160;        }</div><div class="line"><a name="l04762"></a><span class="lineno"> 4762</span>&#160;      }); <span class="comment">// Restore body padding</span></div><div class="line"><a name="l04763"></a><span class="lineno"> 4763</span>&#160;</div><div class="line"><a name="l04764"></a><span class="lineno"> 4764</span>&#160;      var padding = $$$1(<span class="stringliteral">&#39;body&#39;</span>).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(<span class="stringliteral">&#39;padding-right&#39;</span>);</div><div class="line"><a name="l04765"></a><span class="lineno"> 4765</span>&#160;</div><div class="line"><a name="l04766"></a><span class="lineno"> 4766</span>&#160;      <span class="keywordflow">if</span> (typeof padding !== <span class="stringliteral">&#39;undefined&#39;</span>) {</div><div class="line"><a name="l04767"></a><span class="lineno"> 4767</span>&#160;        $$$1(<span class="stringliteral">&#39;body&#39;</span>).css(<span class="stringliteral">&#39;padding-right&#39;</span>, padding).removeData(<span class="stringliteral">&#39;padding-right&#39;</span>);</div><div class="line"><a name="l04768"></a><span class="lineno"> 4768</span>&#160;      }</div><div class="line"><a name="l04769"></a><span class="lineno"> 4769</span>&#160;    };</div><div class="line"><a name="l04770"></a><span class="lineno"> 4770</span>&#160;</div><div class="line"><a name="l04771"></a><span class="lineno"> 4771</span>&#160;    _proto._getScrollbarWidth = <span class="keyword">function</span> _getScrollbarWidth() {</div><div class="line"><a name="l04772"></a><span class="lineno"> 4772</span>&#160;      <span class="comment">// thx d.walsh</span></div><div class="line"><a name="l04773"></a><span class="lineno"> 4773</span>&#160;      var scrollDiv = document.createElement(<span class="stringliteral">&#39;div&#39;</span>);</div><div class="line"><a name="l04774"></a><span class="lineno"> 4774</span>&#160;      scrollDiv.className = ClassName.SCROLLBAR_MEASURER;</div><div class="line"><a name="l04775"></a><span class="lineno"> 4775</span>&#160;      document.body.appendChild(scrollDiv);</div><div class="line"><a name="l04776"></a><span class="lineno"> 4776</span>&#160;      var scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;</div><div class="line"><a name="l04777"></a><span class="lineno"> 4777</span>&#160;      document.body.removeChild(scrollDiv);</div><div class="line"><a name="l04778"></a><span class="lineno"> 4778</span>&#160;      <span class="keywordflow">return</span> scrollbarWidth;</div><div class="line"><a name="l04779"></a><span class="lineno"> 4779</span>&#160;    }; <span class="comment">// Static</span></div><div class="line"><a name="l04780"></a><span class="lineno"> 4780</span>&#160;</div><div class="line"><a name="l04781"></a><span class="lineno"> 4781</span>&#160;</div><div class="line"><a name="l04782"></a><span class="lineno"> 4782</span>&#160;    Modal._jQueryInterface = <span class="keyword">function</span> _jQueryInterface(config, relatedTarget) {</div><div class="line"><a name="l04783"></a><span class="lineno"> 4783</span>&#160;      <span class="keywordflow">return</span> this.<a class="code" href="../../d3/dea/a00046.php#a877963eb3bdbe10cffb2337a091a7ff1">each</a>(<span class="keyword">function</span> () {</div><div class="line"><a name="l04784"></a><span class="lineno"> 4784</span>&#160;        var <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a> = $$$1(<span class="keyword">this</span>).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(DATA_KEY);</div><div class="line"><a name="l04785"></a><span class="lineno"> 4785</span>&#160;</div><div class="line"><a name="l04786"></a><span class="lineno"> 4786</span>&#160;        var _config = <a class="code" href="../../d4/d51/a00017.php#ac2eea16a19b83a9509e2f9188c0fdc0f">_extends</a>({}, Modal.Default, $$$1(<span class="keyword">this</span>).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(), typeof config === <span class="stringliteral">&#39;object&#39;</span> &amp;&amp; config);</div><div class="line"><a name="l04787"></a><span class="lineno"> 4787</span>&#160;</div><div class="line"><a name="l04788"></a><span class="lineno"> 4788</span>&#160;        <span class="keywordflow">if</span> (!data) {</div><div class="line"><a name="l04789"></a><span class="lineno"> 4789</span>&#160;          data = <span class="keyword">new</span> <a class="code" href="../../d4/d51/a00017.php#ac31034cff9cb6db90f2650ab2367c22f">Modal</a>(<span class="keyword">this</span>, _config);</div><div class="line"><a name="l04790"></a><span class="lineno"> 4790</span>&#160;          $$$1(<span class="keyword">this</span>).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(DATA_KEY, data);</div><div class="line"><a name="l04791"></a><span class="lineno"> 4791</span>&#160;        }</div><div class="line"><a name="l04792"></a><span class="lineno"> 4792</span>&#160;</div><div class="line"><a name="l04793"></a><span class="lineno"> 4793</span>&#160;        <span class="keywordflow">if</span> (typeof config === <span class="stringliteral">&#39;string&#39;</span>) {</div><div class="line"><a name="l04794"></a><span class="lineno"> 4794</span>&#160;          <span class="keywordflow">if</span> (typeof data[config] === <span class="stringliteral">&#39;undefined&#39;</span>) {</div><div class="line"><a name="l04795"></a><span class="lineno"> 4795</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> TypeError(<span class="stringliteral">&quot;No method named \&quot;&quot;</span> + config + <span class="stringliteral">&quot;\&quot;&quot;</span>);</div><div class="line"><a name="l04796"></a><span class="lineno"> 4796</span>&#160;          }</div><div class="line"><a name="l04797"></a><span class="lineno"> 4797</span>&#160;</div><div class="line"><a name="l04798"></a><span class="lineno"> 4798</span>&#160;          data[config](relatedTarget);</div><div class="line"><a name="l04799"></a><span class="lineno"> 4799</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (_config.show) {</div><div class="line"><a name="l04800"></a><span class="lineno"> 4800</span>&#160;          data.show(relatedTarget);</div><div class="line"><a name="l04801"></a><span class="lineno"> 4801</span>&#160;        }</div><div class="line"><a name="l04802"></a><span class="lineno"> 4802</span>&#160;      });</div><div class="line"><a name="l04803"></a><span class="lineno"> 4803</span>&#160;    };</div><div class="line"><a name="l04804"></a><span class="lineno"> 4804</span>&#160;</div><div class="line"><a name="l04805"></a><span class="lineno"> 4805</span>&#160;    <a class="code" href="../../d4/d51/a00017.php#a39e10dc3069b4a23aa52bea0bec60e36">_createClass</a>(Modal, null, [{</div><div class="line"><a name="l04806"></a><span class="lineno"> 4806</span>&#160;      key: <span class="stringliteral">&quot;VERSION&quot;</span>,</div><div class="line"><a name="l04807"></a><span class="lineno"> 4807</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l04808"></a><span class="lineno"> 4808</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../db/db2/a00020.php#a3635f2df5844f69204b70bf7b3983587">VERSION</a>;</div><div class="line"><a name="l04809"></a><span class="lineno"> 4809</span>&#160;      }</div><div class="line"><a name="l04810"></a><span class="lineno"> 4810</span>&#160;    }, {</div><div class="line"><a name="l04811"></a><span class="lineno"> 4811</span>&#160;      key: <span class="stringliteral">&quot;Default&quot;</span>,</div><div class="line"><a name="l04812"></a><span class="lineno"> 4812</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l04813"></a><span class="lineno"> 4813</span>&#160;        <span class="keywordflow">return</span> Default;</div><div class="line"><a name="l04814"></a><span class="lineno"> 4814</span>&#160;      }</div><div class="line"><a name="l04815"></a><span class="lineno"> 4815</span>&#160;    }]);</div><div class="line"><a name="l04816"></a><span class="lineno"> 4816</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#ac31034cff9cb6db90f2650ab2367c22f">Modal</a>;</div><div class="line"><a name="l04817"></a><span class="lineno"> 4817</span>&#160;  }();</div><div class="line"><a name="l04825"></a><span class="lineno"> 4825</span>&#160;  $$$1(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {</div><div class="line"><a name="l04826"></a><span class="lineno"> 4826</span>&#160;    var _this10 = <span class="keyword">this</span>;</div><div class="line"><a name="l04827"></a><span class="lineno"> 4827</span>&#160;</div><div class="line"><a name="l04828"></a><span class="lineno"> 4828</span>&#160;    var target;</div><div class="line"><a name="l04829"></a><span class="lineno"> 4829</span>&#160;    var selector = Util.getSelectorFromElement(<span class="keyword">this</span>);</div><div class="line"><a name="l04830"></a><span class="lineno"> 4830</span>&#160;</div><div class="line"><a name="l04831"></a><span class="lineno"> 4831</span>&#160;    <span class="keywordflow">if</span> (selector) {</div><div class="line"><a name="l04832"></a><span class="lineno"> 4832</span>&#160;      target = $$$1(selector)[0];</div><div class="line"><a name="l04833"></a><span class="lineno"> 4833</span>&#160;    }</div><div class="line"><a name="l04834"></a><span class="lineno"> 4834</span>&#160;</div><div class="line"><a name="l04835"></a><span class="lineno"> 4835</span>&#160;    var config = $$$1(target).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(DATA_KEY) ? <span class="stringliteral">&#39;toggle&#39;</span> : <a class="code" href="../../d4/d51/a00017.php#ac2eea16a19b83a9509e2f9188c0fdc0f">_extends</a>({}, $$$1(target).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(), $$$1(<span class="keyword">this</span>).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>());</div><div class="line"><a name="l04836"></a><span class="lineno"> 4836</span>&#160;</div><div class="line"><a name="l04837"></a><span class="lineno"> 4837</span>&#160;    <span class="keywordflow">if</span> (this.tagName === <span class="charliteral">&#39;A&#39;</span> || this.tagName === <span class="stringliteral">&#39;AREA&#39;</span>) {</div><div class="line"><a name="l04838"></a><span class="lineno"> 4838</span>&#160;      <span class="keyword">event</span>.preventDefault();</div><div class="line"><a name="l04839"></a><span class="lineno"> 4839</span>&#160;    }</div><div class="line"><a name="l04840"></a><span class="lineno"> 4840</span>&#160;</div><div class="line"><a name="l04841"></a><span class="lineno"> 4841</span>&#160;    var $target = $$$1(target).one(Event.SHOW, function (showEvent) {</div><div class="line"><a name="l04842"></a><span class="lineno"> 4842</span>&#160;      <span class="keywordflow">if</span> (showEvent.isDefaultPrevented()) {</div><div class="line"><a name="l04843"></a><span class="lineno"> 4843</span>&#160;        <span class="comment">// Only register focus restorer if modal will actually get shown</span></div><div class="line"><a name="l04844"></a><span class="lineno"> 4844</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l04845"></a><span class="lineno"> 4845</span>&#160;      }</div><div class="line"><a name="l04846"></a><span class="lineno"> 4846</span>&#160;</div><div class="line"><a name="l04847"></a><span class="lineno"> 4847</span>&#160;      $target.one(Event.HIDDEN, function () {</div><div class="line"><a name="l04848"></a><span class="lineno"> 4848</span>&#160;        <span class="keywordflow">if</span> ($$$1(_this10).is(<span class="stringliteral">&#39;:visible&#39;</span>)) {</div><div class="line"><a name="l04849"></a><span class="lineno"> 4849</span>&#160;          _this10.focus();</div><div class="line"><a name="l04850"></a><span class="lineno"> 4850</span>&#160;        }</div><div class="line"><a name="l04851"></a><span class="lineno"> 4851</span>&#160;      });</div><div class="line"><a name="l04852"></a><span class="lineno"> 4852</span>&#160;    });</div><div class="line"><a name="l04853"></a><span class="lineno"> 4853</span>&#160;</div><div class="line"><a name="l04854"></a><span class="lineno"> 4854</span>&#160;    Modal._jQueryInterface.call($$$1(target), config, <span class="keyword">this</span>);</div><div class="line"><a name="l04855"></a><span class="lineno"> 4855</span>&#160;  });</div><div class="line"><a name="l04862"></a><span class="lineno"> 4862</span>&#160;  $$$1.fn[NAME] = Modal._jQueryInterface;</div><div class="line"><a name="l04863"></a><span class="lineno"> 4863</span>&#160;  $$$1.fn[NAME].Constructor = <a class="code" href="../../d4/d51/a00017.php#ac31034cff9cb6db90f2650ab2367c22f">Modal</a>;</div><div class="line"><a name="l04864"></a><span class="lineno"> 4864</span>&#160;</div><div class="line"><a name="l04865"></a><span class="lineno"> 4865</span>&#160;  $$$1.fn[NAME].noConflict = <span class="keyword">function</span> () {</div><div class="line"><a name="l04866"></a><span class="lineno"> 4866</span>&#160;    $$$1.fn[NAME] = JQUERY_NO_CONFLICT;</div><div class="line"><a name="l04867"></a><span class="lineno"> 4867</span>&#160;    <span class="keywordflow">return</span> Modal._jQueryInterface;</div><div class="line"><a name="l04868"></a><span class="lineno"> 4868</span>&#160;  };</div><div class="line"><a name="l04869"></a><span class="lineno"> 4869</span>&#160;</div><div class="line"><a name="l04870"></a><span class="lineno"> 4870</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#ac31034cff9cb6db90f2650ab2367c22f">Modal</a>;</div><div class="line"><a name="l04871"></a><span class="lineno"> 4871</span>&#160;}($);</div><div class="line"><a name="l04872"></a><span class="lineno"> 4872</span>&#160;</div><div class="line"><a name="l04880"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a8bc91fbc10ac1566135a747b9c84dd3d"> 4880</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#a8bc91fbc10ac1566135a747b9c84dd3d">Tooltip</a> = <span class="keyword">function</span> ($$$1) {</div><div class="line"><a name="l04886"></a><span class="lineno"> 4886</span>&#160;  var NAME = <span class="stringliteral">&#39;tooltip&#39;</span>;</div><div class="line"><a name="l04887"></a><span class="lineno"> 4887</span>&#160;  var <a class="code" href="../../db/db2/a00020.php#a3635f2df5844f69204b70bf7b3983587">VERSION</a> = <span class="stringliteral">&#39;4.0.0&#39;</span>;</div><div class="line"><a name="l04888"></a><span class="lineno"> 4888</span>&#160;  var DATA_KEY = <span class="stringliteral">&#39;bs.tooltip&#39;</span>;</div><div class="line"><a name="l04889"></a><span class="lineno"> 4889</span>&#160;  var EVENT_KEY = <span class="stringliteral">&quot;.&quot;</span> + DATA_KEY;</div><div class="line"><a name="l04890"></a><span class="lineno"> 4890</span>&#160;  var JQUERY_NO_CONFLICT = $$$1.fn[NAME];</div><div class="line"><a name="l04891"></a><span class="lineno"> 4891</span>&#160;  var <a class="code" href="../../db/db2/a00020.php#ae4adb159aeacba734c34bd530baf92f6">TRANSITION_DURATION</a> = 150;</div><div class="line"><a name="l04892"></a><span class="lineno"> 4892</span>&#160;  var CLASS_PREFIX = <span class="stringliteral">&#39;bs-tooltip&#39;</span>;</div><div class="line"><a name="l04893"></a><span class="lineno"> 4893</span>&#160;  var BSCLS_PREFIX_REGEX = <span class="keyword">new</span> RegExp(<span class="stringliteral">&quot;(^|\\s)&quot;</span> + CLASS_PREFIX + <span class="stringliteral">&quot;\\S+&quot;</span>, <span class="charliteral">&#39;g&#39;</span>);</div><div class="line"><a name="l04894"></a><span class="lineno"> 4894</span>&#160;  var DefaultType = {</div><div class="line"><a name="l04895"></a><span class="lineno"> 4895</span>&#160;    animation: <span class="stringliteral">&#39;boolean&#39;</span>,</div><div class="line"><a name="l04896"></a><span class="lineno"> 4896</span>&#160;    <span class="keyword">template</span>: <span class="stringliteral">&#39;string&#39;</span>,</div><div class="line"><a name="l04897"></a><span class="lineno"> 4897</span>&#160;    title: <span class="stringliteral">&#39;(string|element|function)&#39;</span>,</div><div class="line"><a name="l04898"></a><span class="lineno"> 4898</span>&#160;    trigger: <span class="stringliteral">&#39;string&#39;</span>,</div><div class="line"><a name="l04899"></a><span class="lineno"> 4899</span>&#160;    delay: <span class="stringliteral">&#39;(number|object)&#39;</span>,</div><div class="line"><a name="l04900"></a><span class="lineno"> 4900</span>&#160;    html: <span class="stringliteral">&#39;boolean&#39;</span>,</div><div class="line"><a name="l04901"></a><span class="lineno"> 4901</span>&#160;    selector: <span class="stringliteral">&#39;(string|boolean)&#39;</span>,</div><div class="line"><a name="l04902"></a><span class="lineno"> 4902</span>&#160;    placement: <span class="stringliteral">&#39;(string|function)&#39;</span>,</div><div class="line"><a name="l04903"></a><span class="lineno"> 4903</span>&#160;    offset: <span class="stringliteral">&#39;(number|string)&#39;</span>,</div><div class="line"><a name="l04904"></a><span class="lineno"> 4904</span>&#160;    container: <span class="stringliteral">&#39;(string|element|boolean)&#39;</span>,</div><div class="line"><a name="l04905"></a><span class="lineno"> 4905</span>&#160;    fallbackPlacement: <span class="stringliteral">&#39;(string|array)&#39;</span>,</div><div class="line"><a name="l04906"></a><span class="lineno"> 4906</span>&#160;    boundary: <span class="stringliteral">&#39;(string|element)&#39;</span></div><div class="line"><a name="l04907"></a><span class="lineno"> 4907</span>&#160;  };</div><div class="line"><a name="l04908"></a><span class="lineno"> 4908</span>&#160;  var AttachmentMap = {</div><div class="line"><a name="l04909"></a><span class="lineno"> 4909</span>&#160;    AUTO: <span class="stringliteral">&#39;auto&#39;</span>,</div><div class="line"><a name="l04910"></a><span class="lineno"> 4910</span>&#160;    TOP: <span class="stringliteral">&#39;top&#39;</span>,</div><div class="line"><a name="l04911"></a><span class="lineno"> 4911</span>&#160;    RIGHT: <span class="stringliteral">&#39;right&#39;</span>,</div><div class="line"><a name="l04912"></a><span class="lineno"> 4912</span>&#160;    BOTTOM: <span class="stringliteral">&#39;bottom&#39;</span>,</div><div class="line"><a name="l04913"></a><span class="lineno"> 4913</span>&#160;    LEFT: <span class="stringliteral">&#39;left&#39;</span></div><div class="line"><a name="l04914"></a><span class="lineno"> 4914</span>&#160;  };</div><div class="line"><a name="l04915"></a><span class="lineno"> 4915</span>&#160;  var Default = {</div><div class="line"><a name="l04916"></a><span class="lineno"> 4916</span>&#160;    animation: <span class="keyword">true</span>,</div><div class="line"><a name="l04917"></a><span class="lineno"> 4917</span>&#160;    <span class="keyword">template</span>: <span class="stringliteral">&#39;&lt;div class=&quot;tooltip&quot; role=&quot;tooltip&quot;&gt;&#39;</span> + <span class="stringliteral">&#39;&lt;div class=&quot;arrow&quot;&gt;&lt;/div&gt;&#39;</span> + <span class="stringliteral">&#39;&lt;div class=&quot;tooltip-inner&quot;&gt;&lt;/div&gt;&lt;/div&gt;&#39;</span>,</div><div class="line"><a name="l04918"></a><span class="lineno"> 4918</span>&#160;    trigger: <span class="stringliteral">&#39;hover focus&#39;</span>,</div><div class="line"><a name="l04919"></a><span class="lineno"> 4919</span>&#160;    title: <span class="stringliteral">&#39;&#39;</span>,</div><div class="line"><a name="l04920"></a><span class="lineno"> 4920</span>&#160;    delay: 0,</div><div class="line"><a name="l04921"></a><span class="lineno"> 4921</span>&#160;    html: <span class="keyword">false</span>,</div><div class="line"><a name="l04922"></a><span class="lineno"> 4922</span>&#160;    selector: <span class="keyword">false</span>,</div><div class="line"><a name="l04923"></a><span class="lineno"> 4923</span>&#160;    placement: <span class="stringliteral">&#39;top&#39;</span>,</div><div class="line"><a name="l04924"></a><span class="lineno"> 4924</span>&#160;    offset: 0,</div><div class="line"><a name="l04925"></a><span class="lineno"> 4925</span>&#160;    container: <span class="keyword">false</span>,</div><div class="line"><a name="l04926"></a><span class="lineno"> 4926</span>&#160;    fallbackPlacement: <span class="stringliteral">&#39;flip&#39;</span>,</div><div class="line"><a name="l04927"></a><span class="lineno"> 4927</span>&#160;    boundary: <span class="stringliteral">&#39;scrollParent&#39;</span></div><div class="line"><a name="l04928"></a><span class="lineno"> 4928</span>&#160;  };</div><div class="line"><a name="l04929"></a><span class="lineno"> 4929</span>&#160;  var HoverState = {</div><div class="line"><a name="l04930"></a><span class="lineno"> 4930</span>&#160;    SHOW: <span class="stringliteral">&#39;show&#39;</span>,</div><div class="line"><a name="l04931"></a><span class="lineno"> 4931</span>&#160;    OUT: <span class="stringliteral">&#39;out&#39;</span></div><div class="line"><a name="l04932"></a><span class="lineno"> 4932</span>&#160;  };</div><div class="line"><a name="l04933"></a><span class="lineno"> 4933</span>&#160;  var Event = {</div><div class="line"><a name="l04934"></a><span class="lineno"> 4934</span>&#160;    HIDE: <span class="stringliteral">&quot;hide&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l04935"></a><span class="lineno"> 4935</span>&#160;    HIDDEN: <span class="stringliteral">&quot;hidden&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l04936"></a><span class="lineno"> 4936</span>&#160;    SHOW: <span class="stringliteral">&quot;show&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l04937"></a><span class="lineno"> 4937</span>&#160;    SHOWN: <span class="stringliteral">&quot;shown&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l04938"></a><span class="lineno"> 4938</span>&#160;    INSERTED: <span class="stringliteral">&quot;inserted&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l04939"></a><span class="lineno"> 4939</span>&#160;    CLICK: <span class="stringliteral">&quot;click&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l04940"></a><span class="lineno"> 4940</span>&#160;    FOCUSIN: <span class="stringliteral">&quot;focusin&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l04941"></a><span class="lineno"> 4941</span>&#160;    FOCUSOUT: <span class="stringliteral">&quot;focusout&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l04942"></a><span class="lineno"> 4942</span>&#160;    MOUSEENTER: <span class="stringliteral">&quot;mouseenter&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l04943"></a><span class="lineno"> 4943</span>&#160;    MOUSELEAVE: <span class="stringliteral">&quot;mouseleave&quot;</span> + EVENT_KEY</div><div class="line"><a name="l04944"></a><span class="lineno"> 4944</span>&#160;  };</div><div class="line"><a name="l04945"></a><span class="lineno"> 4945</span>&#160;  var ClassName = {</div><div class="line"><a name="l04946"></a><span class="lineno"> 4946</span>&#160;    FADE: <span class="stringliteral">&#39;fade&#39;</span>,</div><div class="line"><a name="l04947"></a><span class="lineno"> 4947</span>&#160;    SHOW: <span class="stringliteral">&#39;show&#39;</span></div><div class="line"><a name="l04948"></a><span class="lineno"> 4948</span>&#160;  };</div><div class="line"><a name="l04949"></a><span class="lineno"> 4949</span>&#160;  var Selector = {</div><div class="line"><a name="l04950"></a><span class="lineno"> 4950</span>&#160;    TOOLTIP: <span class="stringliteral">&#39;.tooltip&#39;</span>,</div><div class="line"><a name="l04951"></a><span class="lineno"> 4951</span>&#160;    TOOLTIP_INNER: <span class="stringliteral">&#39;.tooltip-inner&#39;</span>,</div><div class="line"><a name="l04952"></a><span class="lineno"> 4952</span>&#160;    ARROW: <span class="stringliteral">&#39;.arrow&#39;</span></div><div class="line"><a name="l04953"></a><span class="lineno"> 4953</span>&#160;  };</div><div class="line"><a name="l04954"></a><span class="lineno"> 4954</span>&#160;  var Trigger = {</div><div class="line"><a name="l04955"></a><span class="lineno"> 4955</span>&#160;    HOVER: <span class="stringliteral">&#39;hover&#39;</span>,</div><div class="line"><a name="l04956"></a><span class="lineno"> 4956</span>&#160;    FOCUS: <span class="stringliteral">&#39;focus&#39;</span>,</div><div class="line"><a name="l04957"></a><span class="lineno"> 4957</span>&#160;    CLICK: <span class="stringliteral">&#39;click&#39;</span>,</div><div class="line"><a name="l04958"></a><span class="lineno"> 4958</span>&#160;    MANUAL: <span class="stringliteral">&#39;manual&#39;</span></div><div class="line"><a name="l04965"></a><span class="lineno"> 4965</span>&#160;  };</div><div class="line"><a name="l04966"></a><span class="lineno"> 4966</span>&#160;</div><div class="line"><a name="l04967"></a><span class="lineno"> 4967</span>&#160;  var Tooltip =</div><div class="line"><a name="l04968"></a><span class="lineno"> 4968</span>&#160;  <span class="comment">/*#__PURE__*/</span></div><div class="line"><a name="l04969"></a><span class="lineno"> 4969</span>&#160;  <span class="keyword">function</span> () {</div><div class="line"><a name="l04970"></a><span class="lineno"> 4970</span>&#160;    <span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#a8bc91fbc10ac1566135a747b9c84dd3d">Tooltip</a>(element, config) {</div><div class="line"><a name="l04975"></a><span class="lineno"> 4975</span>&#160;      <span class="keywordflow">if</span> (typeof Popper === <span class="stringliteral">&#39;undefined&#39;</span>) {</div><div class="line"><a name="l04976"></a><span class="lineno"> 4976</span>&#160;        <span class="keywordflow">throw</span> <span class="keyword">new</span> TypeError(<span class="stringliteral">&#39;Bootstrap tooltips require Popper.js (https://popper.js.org)&#39;</span>);</div><div class="line"><a name="l04977"></a><span class="lineno"> 4977</span>&#160;      } <span class="comment">// private</span></div><div class="line"><a name="l04978"></a><span class="lineno"> 4978</span>&#160;</div><div class="line"><a name="l04979"></a><span class="lineno"> 4979</span>&#160;</div><div class="line"><a name="l04980"></a><span class="lineno"> 4980</span>&#160;      this._isEnabled = <span class="keyword">true</span>;</div><div class="line"><a name="l04981"></a><span class="lineno"> 4981</span>&#160;      this._timeout = 0;</div><div class="line"><a name="l04982"></a><span class="lineno"> 4982</span>&#160;      this._hoverState = <span class="stringliteral">&#39;&#39;</span>;</div><div class="line"><a name="l04983"></a><span class="lineno"> 4983</span>&#160;      this._activeTrigger = {};</div><div class="line"><a name="l04984"></a><span class="lineno"> 4984</span>&#160;      this._popper = null; <span class="comment">// Protected</span></div><div class="line"><a name="l04985"></a><span class="lineno"> 4985</span>&#160;</div><div class="line"><a name="l04986"></a><span class="lineno"> 4986</span>&#160;      this.element = element;</div><div class="line"><a name="l04987"></a><span class="lineno"> 4987</span>&#160;      this.config = this._getConfig(config);</div><div class="line"><a name="l04988"></a><span class="lineno"> 4988</span>&#160;      this.tip = null;</div><div class="line"><a name="l04989"></a><span class="lineno"> 4989</span>&#160;</div><div class="line"><a name="l04990"></a><span class="lineno"> 4990</span>&#160;      this._setListeners();</div><div class="line"><a name="l04991"></a><span class="lineno"> 4991</span>&#160;    } <span class="comment">// Getters</span></div><div class="line"><a name="l04992"></a><span class="lineno"> 4992</span>&#160;</div><div class="line"><a name="l04993"></a><span class="lineno"> 4993</span>&#160;</div><div class="line"><a name="l04994"></a><span class="lineno"> 4994</span>&#160;    var _proto = Tooltip.prototype;</div><div class="line"><a name="l04995"></a><span class="lineno"> 4995</span>&#160;</div><div class="line"><a name="l04996"></a><span class="lineno"> 4996</span>&#160;    <span class="comment">// Public</span></div><div class="line"><a name="l04997"></a><span class="lineno"> 4997</span>&#160;    _proto.enable = <span class="keyword">function</span> <a class="code" href="../../d7/dec/a00010.php#ae20e0427fb5ca9cd0a2d6a2789758220">enable</a>() {</div><div class="line"><a name="l04998"></a><span class="lineno"> 4998</span>&#160;      this._isEnabled = <span class="keyword">true</span>;</div><div class="line"><a name="l04999"></a><span class="lineno"> 4999</span>&#160;    };</div><div class="line"><a name="l05000"></a><span class="lineno"> 5000</span>&#160;</div><div class="line"><a name="l05001"></a><span class="lineno"> 5001</span>&#160;    _proto.disable = <span class="keyword">function</span> <a class="code" href="../../d7/dec/a00010.php#a6667c3e0f03757bf309b971ac3b7baa2">disable</a>() {</div><div class="line"><a name="l05002"></a><span class="lineno"> 5002</span>&#160;      this._isEnabled = <span class="keyword">false</span>;</div><div class="line"><a name="l05003"></a><span class="lineno"> 5003</span>&#160;    };</div><div class="line"><a name="l05004"></a><span class="lineno"> 5004</span>&#160;</div><div class="line"><a name="l05005"></a><span class="lineno"> 5005</span>&#160;    _proto.toggleEnabled = <span class="keyword">function</span> toggleEnabled() {</div><div class="line"><a name="l05006"></a><span class="lineno"> 5006</span>&#160;      this._isEnabled = !this._isEnabled;</div><div class="line"><a name="l05007"></a><span class="lineno"> 5007</span>&#160;    };</div><div class="line"><a name="l05008"></a><span class="lineno"> 5008</span>&#160;</div><div class="line"><a name="l05009"></a><span class="lineno"> 5009</span>&#160;    _proto.toggle = <span class="keyword">function</span> <a class="code" href="../../db/db2/a00020.php#aa8e797a9bda5e7e313be3518054164a3">toggle</a>(event) {</div><div class="line"><a name="l05010"></a><span class="lineno"> 5010</span>&#160;      <span class="keywordflow">if</span> (!this._isEnabled) {</div><div class="line"><a name="l05011"></a><span class="lineno"> 5011</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l05012"></a><span class="lineno"> 5012</span>&#160;      }</div><div class="line"><a name="l05013"></a><span class="lineno"> 5013</span>&#160;</div><div class="line"><a name="l05014"></a><span class="lineno"> 5014</span>&#160;      <span class="keywordflow">if</span> (event) {</div><div class="line"><a name="l05015"></a><span class="lineno"> 5015</span>&#160;        var dataKey = this.constructor.DATA_KEY;</div><div class="line"><a name="l05016"></a><span class="lineno"> 5016</span>&#160;        var context = $$$1(event.currentTarget).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(dataKey);</div><div class="line"><a name="l05017"></a><span class="lineno"> 5017</span>&#160;</div><div class="line"><a name="l05018"></a><span class="lineno"> 5018</span>&#160;        <span class="keywordflow">if</span> (!context) {</div><div class="line"><a name="l05019"></a><span class="lineno"> 5019</span>&#160;          context = <span class="keyword">new</span> this.constructor(event.currentTarget, <span class="keyword">this</span>._getDelegateConfig());</div><div class="line"><a name="l05020"></a><span class="lineno"> 5020</span>&#160;          $$$1(event.currentTarget).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(dataKey, context);</div><div class="line"><a name="l05021"></a><span class="lineno"> 5021</span>&#160;        }</div><div class="line"><a name="l05022"></a><span class="lineno"> 5022</span>&#160;</div><div class="line"><a name="l05023"></a><span class="lineno"> 5023</span>&#160;        context._activeTrigger.click = !context._activeTrigger.click;</div><div class="line"><a name="l05024"></a><span class="lineno"> 5024</span>&#160;</div><div class="line"><a name="l05025"></a><span class="lineno"> 5025</span>&#160;        <span class="keywordflow">if</span> (context._isWithActiveTrigger()) {</div><div class="line"><a name="l05026"></a><span class="lineno"> 5026</span>&#160;          context._enter(null, context);</div><div class="line"><a name="l05027"></a><span class="lineno"> 5027</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l05028"></a><span class="lineno"> 5028</span>&#160;          context._leave(null, context);</div><div class="line"><a name="l05029"></a><span class="lineno"> 5029</span>&#160;        }</div><div class="line"><a name="l05030"></a><span class="lineno"> 5030</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l05031"></a><span class="lineno"> 5031</span>&#160;        <span class="keywordflow">if</span> ($$$1(this.getTipElement()).hasClass(ClassName.SHOW)) {</div><div class="line"><a name="l05032"></a><span class="lineno"> 5032</span>&#160;          this._leave(null, <span class="keyword">this</span>);</div><div class="line"><a name="l05033"></a><span class="lineno"> 5033</span>&#160;</div><div class="line"><a name="l05034"></a><span class="lineno"> 5034</span>&#160;          <span class="keywordflow">return</span>;</div><div class="line"><a name="l05035"></a><span class="lineno"> 5035</span>&#160;        }</div><div class="line"><a name="l05036"></a><span class="lineno"> 5036</span>&#160;</div><div class="line"><a name="l05037"></a><span class="lineno"> 5037</span>&#160;        this._enter(null, <span class="keyword">this</span>);</div><div class="line"><a name="l05038"></a><span class="lineno"> 5038</span>&#160;      }</div><div class="line"><a name="l05039"></a><span class="lineno"> 5039</span>&#160;    };</div><div class="line"><a name="l05040"></a><span class="lineno"> 5040</span>&#160;</div><div class="line"><a name="l05041"></a><span class="lineno"> 5041</span>&#160;    _proto.dispose = <span class="keyword">function</span> dispose() {</div><div class="line"><a name="l05042"></a><span class="lineno"> 5042</span>&#160;      clearTimeout(this._timeout);</div><div class="line"><a name="l05043"></a><span class="lineno"> 5043</span>&#160;      $$$1.removeData(this.element, this.constructor.DATA_KEY);</div><div class="line"><a name="l05044"></a><span class="lineno"> 5044</span>&#160;      $$$1(this.element).off(this.constructor.EVENT_KEY);</div><div class="line"><a name="l05045"></a><span class="lineno"> 5045</span>&#160;      $$$1(this.element).closest(<span class="stringliteral">&#39;.modal&#39;</span>).off(<span class="stringliteral">&#39;hide.bs.modal&#39;</span>);</div><div class="line"><a name="l05046"></a><span class="lineno"> 5046</span>&#160;</div><div class="line"><a name="l05047"></a><span class="lineno"> 5047</span>&#160;      <span class="keywordflow">if</span> (this.tip) {</div><div class="line"><a name="l05048"></a><span class="lineno"> 5048</span>&#160;        $$$1(this.tip).<span class="keyword">remove</span>();</div><div class="line"><a name="l05049"></a><span class="lineno"> 5049</span>&#160;      }</div><div class="line"><a name="l05050"></a><span class="lineno"> 5050</span>&#160;</div><div class="line"><a name="l05051"></a><span class="lineno"> 5051</span>&#160;      this._isEnabled = null;</div><div class="line"><a name="l05052"></a><span class="lineno"> 5052</span>&#160;      this._timeout = null;</div><div class="line"><a name="l05053"></a><span class="lineno"> 5053</span>&#160;      this._hoverState = null;</div><div class="line"><a name="l05054"></a><span class="lineno"> 5054</span>&#160;      this._activeTrigger = null;</div><div class="line"><a name="l05055"></a><span class="lineno"> 5055</span>&#160;</div><div class="line"><a name="l05056"></a><span class="lineno"> 5056</span>&#160;      <span class="keywordflow">if</span> (this._popper !== null) {</div><div class="line"><a name="l05057"></a><span class="lineno"> 5057</span>&#160;        this._popper.destroy();</div><div class="line"><a name="l05058"></a><span class="lineno"> 5058</span>&#160;      }</div><div class="line"><a name="l05059"></a><span class="lineno"> 5059</span>&#160;</div><div class="line"><a name="l05060"></a><span class="lineno"> 5060</span>&#160;      this._popper = null;</div><div class="line"><a name="l05061"></a><span class="lineno"> 5061</span>&#160;      this.element = null;</div><div class="line"><a name="l05062"></a><span class="lineno"> 5062</span>&#160;      this.config = null;</div><div class="line"><a name="l05063"></a><span class="lineno"> 5063</span>&#160;      this.tip = null;</div><div class="line"><a name="l05064"></a><span class="lineno"> 5064</span>&#160;    };</div><div class="line"><a name="l05065"></a><span class="lineno"> 5065</span>&#160;</div><div class="line"><a name="l05066"></a><span class="lineno"> 5066</span>&#160;    _proto.show = <span class="keyword">function</span> show() {</div><div class="line"><a name="l05067"></a><span class="lineno"> 5067</span>&#160;      var _this = <span class="keyword">this</span>;</div><div class="line"><a name="l05068"></a><span class="lineno"> 5068</span>&#160;</div><div class="line"><a name="l05069"></a><span class="lineno"> 5069</span>&#160;      <span class="keywordflow">if</span> ($$$1(this.element).css(<span class="stringliteral">&#39;display&#39;</span>) === <span class="stringliteral">&#39;none&#39;</span>) {</div><div class="line"><a name="l05070"></a><span class="lineno"> 5070</span>&#160;        <span class="keywordflow">throw</span> <span class="keyword">new</span> Error(<span class="stringliteral">&#39;Please use show on visible elements&#39;</span>);</div><div class="line"><a name="l05071"></a><span class="lineno"> 5071</span>&#160;      }</div><div class="line"><a name="l05072"></a><span class="lineno"> 5072</span>&#160;</div><div class="line"><a name="l05073"></a><span class="lineno"> 5073</span>&#160;      var showEvent = $$$1.Event(this.constructor.Event.SHOW);</div><div class="line"><a name="l05074"></a><span class="lineno"> 5074</span>&#160;</div><div class="line"><a name="l05075"></a><span class="lineno"> 5075</span>&#160;      <span class="keywordflow">if</span> (this.isWithContent() &amp;&amp; this._isEnabled) {</div><div class="line"><a name="l05076"></a><span class="lineno"> 5076</span>&#160;        $$$1(this.element).trigger(showEvent);</div><div class="line"><a name="l05077"></a><span class="lineno"> 5077</span>&#160;        var isInTheDom = $$$1.contains(this.element.ownerDocument.documentElement, <span class="keyword">this</span>.element);</div><div class="line"><a name="l05078"></a><span class="lineno"> 5078</span>&#160;</div><div class="line"><a name="l05079"></a><span class="lineno"> 5079</span>&#160;        <span class="keywordflow">if</span> (showEvent.isDefaultPrevented() || !isInTheDom) {</div><div class="line"><a name="l05080"></a><span class="lineno"> 5080</span>&#160;          <span class="keywordflow">return</span>;</div><div class="line"><a name="l05081"></a><span class="lineno"> 5081</span>&#160;        }</div><div class="line"><a name="l05082"></a><span class="lineno"> 5082</span>&#160;</div><div class="line"><a name="l05083"></a><span class="lineno"> 5083</span>&#160;        var tip = this.getTipElement();</div><div class="line"><a name="l05084"></a><span class="lineno"> 5084</span>&#160;        var tipId = Util.getUID(this.constructor.NAME);</div><div class="line"><a name="l05085"></a><span class="lineno"> 5085</span>&#160;        tip.setAttribute(<span class="stringliteral">&#39;id&#39;</span>, tipId);</div><div class="line"><a name="l05086"></a><span class="lineno"> 5086</span>&#160;        this.element.setAttribute(<span class="stringliteral">&#39;aria-describedby&#39;</span>, tipId);</div><div class="line"><a name="l05087"></a><span class="lineno"> 5087</span>&#160;        this.setContent();</div><div class="line"><a name="l05088"></a><span class="lineno"> 5088</span>&#160;</div><div class="line"><a name="l05089"></a><span class="lineno"> 5089</span>&#160;        <span class="keywordflow">if</span> (this.config.animation) {</div><div class="line"><a name="l05090"></a><span class="lineno"> 5090</span>&#160;          $$$1(tip).addClass(ClassName.FADE);</div><div class="line"><a name="l05091"></a><span class="lineno"> 5091</span>&#160;        }</div><div class="line"><a name="l05092"></a><span class="lineno"> 5092</span>&#160;</div><div class="line"><a name="l05093"></a><span class="lineno"> 5093</span>&#160;        var placement = typeof this.config.placement === <span class="stringliteral">&#39;function&#39;</span> ? this.config.placement.call(<span class="keyword">this</span>, tip, this.element) : this.config.placement;</div><div class="line"><a name="l05094"></a><span class="lineno"> 5094</span>&#160;</div><div class="line"><a name="l05095"></a><span class="lineno"> 5095</span>&#160;        var attachment = this._getAttachment(placement);</div><div class="line"><a name="l05096"></a><span class="lineno"> 5096</span>&#160;</div><div class="line"><a name="l05097"></a><span class="lineno"> 5097</span>&#160;        this.addAttachmentClass(attachment);</div><div class="line"><a name="l05098"></a><span class="lineno"> 5098</span>&#160;        var container = this.config.container === <span class="keyword">false</span> ? document.body : $$$1(this.config.container);</div><div class="line"><a name="l05099"></a><span class="lineno"> 5099</span>&#160;        $$$1(tip).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(this.constructor.DATA_KEY, <span class="keyword">this</span>);</div><div class="line"><a name="l05100"></a><span class="lineno"> 5100</span>&#160;</div><div class="line"><a name="l05101"></a><span class="lineno"> 5101</span>&#160;        <span class="keywordflow">if</span> (!$$$1.contains(this.element.ownerDocument.documentElement, <span class="keyword">this</span>.tip)) {</div><div class="line"><a name="l05102"></a><span class="lineno"> 5102</span>&#160;          $$$1(tip).appendTo(container);</div><div class="line"><a name="l05103"></a><span class="lineno"> 5103</span>&#160;        }</div><div class="line"><a name="l05104"></a><span class="lineno"> 5104</span>&#160;</div><div class="line"><a name="l05105"></a><span class="lineno"> 5105</span>&#160;        $$$1(this.element).trigger(this.constructor.Event.INSERTED);</div><div class="line"><a name="l05106"></a><span class="lineno"> 5106</span>&#160;        this._popper = <span class="keyword">new</span> <a class="code" href="../../d4/d51/a00017.php#ab34a4e248b9bfbf76de92f866779e0e6">Popper</a>(this.element, tip, {</div><div class="line"><a name="l05107"></a><span class="lineno"> 5107</span>&#160;          placement: attachment,</div><div class="line"><a name="l05108"></a><span class="lineno"> 5108</span>&#160;          modifiers: {</div><div class="line"><a name="l05109"></a><span class="lineno"> 5109</span>&#160;            offset: {</div><div class="line"><a name="l05110"></a><span class="lineno"> 5110</span>&#160;              offset: this.config.offset</div><div class="line"><a name="l05111"></a><span class="lineno"> 5111</span>&#160;            },</div><div class="line"><a name="l05112"></a><span class="lineno"> 5112</span>&#160;            flip: {</div><div class="line"><a name="l05113"></a><span class="lineno"> 5113</span>&#160;              behavior: this.config.fallbackPlacement</div><div class="line"><a name="l05114"></a><span class="lineno"> 5114</span>&#160;            },</div><div class="line"><a name="l05115"></a><span class="lineno"> 5115</span>&#160;            arrow: {</div><div class="line"><a name="l05116"></a><span class="lineno"> 5116</span>&#160;              element: Selector.ARROW</div><div class="line"><a name="l05117"></a><span class="lineno"> 5117</span>&#160;            },</div><div class="line"><a name="l05118"></a><span class="lineno"> 5118</span>&#160;            preventOverflow: {</div><div class="line"><a name="l05119"></a><span class="lineno"> 5119</span>&#160;              boundariesElement: this.config.boundary</div><div class="line"><a name="l05120"></a><span class="lineno"> 5120</span>&#160;            }</div><div class="line"><a name="l05121"></a><span class="lineno"> 5121</span>&#160;          },</div><div class="line"><a name="l05122"></a><span class="lineno"> 5122</span>&#160;          onCreate: <span class="keyword">function</span> onCreate(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>) {</div><div class="line"><a name="l05123"></a><span class="lineno"> 5123</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.originalPlacement !== <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.placement) {</div><div class="line"><a name="l05124"></a><span class="lineno"> 5124</span>&#160;              _this._handlePopperPlacementChange(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>);</div><div class="line"><a name="l05125"></a><span class="lineno"> 5125</span>&#160;            }</div><div class="line"><a name="l05126"></a><span class="lineno"> 5126</span>&#160;          },</div><div class="line"><a name="l05127"></a><span class="lineno"> 5127</span>&#160;          onUpdate: <span class="keyword">function</span> onUpdate(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>) {</div><div class="line"><a name="l05128"></a><span class="lineno"> 5128</span>&#160;            _this._handlePopperPlacementChange(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>);</div><div class="line"><a name="l05129"></a><span class="lineno"> 5129</span>&#160;          }</div><div class="line"><a name="l05130"></a><span class="lineno"> 5130</span>&#160;        });</div><div class="line"><a name="l05131"></a><span class="lineno"> 5131</span>&#160;        $$$1(tip).addClass(ClassName.SHOW); <span class="comment">// If this is a touch-enabled device we add extra</span></div><div class="line"><a name="l05132"></a><span class="lineno"> 5132</span>&#160;        <span class="comment">// empty mouseover listeners to the body&#39;s immediate children;</span></div><div class="line"><a name="l05133"></a><span class="lineno"> 5133</span>&#160;        <span class="comment">// only needed because of broken event delegation on iOS</span></div><div class="line"><a name="l05134"></a><span class="lineno"> 5134</span>&#160;        <span class="comment">// https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html</span></div><div class="line"><a name="l05135"></a><span class="lineno"> 5135</span>&#160;</div><div class="line"><a name="l05136"></a><span class="lineno"> 5136</span>&#160;        <span class="keywordflow">if</span> (<span class="stringliteral">&#39;ontouchstart&#39;</span> in document.documentElement) {</div><div class="line"><a name="l05137"></a><span class="lineno"> 5137</span>&#160;          $$$1(<span class="stringliteral">&#39;body&#39;</span>).children().on(<span class="stringliteral">&#39;mouseover&#39;</span>, null, $$$1.noop);</div><div class="line"><a name="l05138"></a><span class="lineno"> 5138</span>&#160;        }</div><div class="line"><a name="l05139"></a><span class="lineno"> 5139</span>&#160;</div><div class="line"><a name="l05140"></a><span class="lineno"> 5140</span>&#160;        var complete = <span class="keyword">function</span> complete() {</div><div class="line"><a name="l05141"></a><span class="lineno"> 5141</span>&#160;          <span class="keywordflow">if</span> (_this.config.animation) {</div><div class="line"><a name="l05142"></a><span class="lineno"> 5142</span>&#160;            _this._fixTransition();</div><div class="line"><a name="l05143"></a><span class="lineno"> 5143</span>&#160;          }</div><div class="line"><a name="l05144"></a><span class="lineno"> 5144</span>&#160;</div><div class="line"><a name="l05145"></a><span class="lineno"> 5145</span>&#160;          var prevHoverState = _this._hoverState;</div><div class="line"><a name="l05146"></a><span class="lineno"> 5146</span>&#160;          _this._hoverState = null;</div><div class="line"><a name="l05147"></a><span class="lineno"> 5147</span>&#160;          $$$1(_this.element).trigger(_this.constructor.Event.SHOWN);</div><div class="line"><a name="l05148"></a><span class="lineno"> 5148</span>&#160;</div><div class="line"><a name="l05149"></a><span class="lineno"> 5149</span>&#160;          <span class="keywordflow">if</span> (prevHoverState === HoverState.OUT) {</div><div class="line"><a name="l05150"></a><span class="lineno"> 5150</span>&#160;            _this._leave(null, _this);</div><div class="line"><a name="l05151"></a><span class="lineno"> 5151</span>&#160;          }</div><div class="line"><a name="l05152"></a><span class="lineno"> 5152</span>&#160;        };</div><div class="line"><a name="l05153"></a><span class="lineno"> 5153</span>&#160;</div><div class="line"><a name="l05154"></a><span class="lineno"> 5154</span>&#160;        <span class="keywordflow">if</span> (Util.supportsTransitionEnd() &amp;&amp; $$$1(this.tip).hasClass(ClassName.FADE)) {</div><div class="line"><a name="l05155"></a><span class="lineno"> 5155</span>&#160;          $$$1(this.tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(Tooltip._TRANSITION_DURATION);</div><div class="line"><a name="l05156"></a><span class="lineno"> 5156</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l05157"></a><span class="lineno"> 5157</span>&#160;          complete();</div><div class="line"><a name="l05158"></a><span class="lineno"> 5158</span>&#160;        }</div><div class="line"><a name="l05159"></a><span class="lineno"> 5159</span>&#160;      }</div><div class="line"><a name="l05160"></a><span class="lineno"> 5160</span>&#160;    };</div><div class="line"><a name="l05161"></a><span class="lineno"> 5161</span>&#160;</div><div class="line"><a name="l05162"></a><span class="lineno"> 5162</span>&#160;    _proto.hide = <span class="keyword">function</span> hide(callback) {</div><div class="line"><a name="l05163"></a><span class="lineno"> 5163</span>&#160;      var _this2 = <span class="keyword">this</span>;</div><div class="line"><a name="l05164"></a><span class="lineno"> 5164</span>&#160;</div><div class="line"><a name="l05165"></a><span class="lineno"> 5165</span>&#160;      var tip = this.getTipElement();</div><div class="line"><a name="l05166"></a><span class="lineno"> 5166</span>&#160;      var hideEvent = $$$1.Event(this.constructor.Event.HIDE);</div><div class="line"><a name="l05167"></a><span class="lineno"> 5167</span>&#160;</div><div class="line"><a name="l05168"></a><span class="lineno"> 5168</span>&#160;      var complete = <span class="keyword">function</span> complete() {</div><div class="line"><a name="l05169"></a><span class="lineno"> 5169</span>&#160;        <span class="keywordflow">if</span> (_this2._hoverState !== HoverState.SHOW &amp;&amp; tip.parentNode) {</div><div class="line"><a name="l05170"></a><span class="lineno"> 5170</span>&#160;          tip.parentNode.removeChild(tip);</div><div class="line"><a name="l05171"></a><span class="lineno"> 5171</span>&#160;        }</div><div class="line"><a name="l05172"></a><span class="lineno"> 5172</span>&#160;</div><div class="line"><a name="l05173"></a><span class="lineno"> 5173</span>&#160;        _this2._cleanTipClass();</div><div class="line"><a name="l05174"></a><span class="lineno"> 5174</span>&#160;</div><div class="line"><a name="l05175"></a><span class="lineno"> 5175</span>&#160;        _this2.element.removeAttribute(<span class="stringliteral">&#39;aria-describedby&#39;</span>);</div><div class="line"><a name="l05176"></a><span class="lineno"> 5176</span>&#160;</div><div class="line"><a name="l05177"></a><span class="lineno"> 5177</span>&#160;        $$$1(_this2.element).trigger(_this2.constructor.Event.HIDDEN);</div><div class="line"><a name="l05178"></a><span class="lineno"> 5178</span>&#160;</div><div class="line"><a name="l05179"></a><span class="lineno"> 5179</span>&#160;        <span class="keywordflow">if</span> (_this2._popper !== null) {</div><div class="line"><a name="l05180"></a><span class="lineno"> 5180</span>&#160;          _this2._popper.destroy();</div><div class="line"><a name="l05181"></a><span class="lineno"> 5181</span>&#160;        }</div><div class="line"><a name="l05182"></a><span class="lineno"> 5182</span>&#160;</div><div class="line"><a name="l05183"></a><span class="lineno"> 5183</span>&#160;        <span class="keywordflow">if</span> (callback) {</div><div class="line"><a name="l05184"></a><span class="lineno"> 5184</span>&#160;          callback();</div><div class="line"><a name="l05185"></a><span class="lineno"> 5185</span>&#160;        }</div><div class="line"><a name="l05186"></a><span class="lineno"> 5186</span>&#160;      };</div><div class="line"><a name="l05187"></a><span class="lineno"> 5187</span>&#160;</div><div class="line"><a name="l05188"></a><span class="lineno"> 5188</span>&#160;      $$$1(this.element).trigger(hideEvent);</div><div class="line"><a name="l05189"></a><span class="lineno"> 5189</span>&#160;</div><div class="line"><a name="l05190"></a><span class="lineno"> 5190</span>&#160;      <span class="keywordflow">if</span> (hideEvent.isDefaultPrevented()) {</div><div class="line"><a name="l05191"></a><span class="lineno"> 5191</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l05192"></a><span class="lineno"> 5192</span>&#160;      }</div><div class="line"><a name="l05193"></a><span class="lineno"> 5193</span>&#160;</div><div class="line"><a name="l05194"></a><span class="lineno"> 5194</span>&#160;      $$$1(tip).removeClass(ClassName.SHOW); <span class="comment">// If this is a touch-enabled device we remove the extra</span></div><div class="line"><a name="l05195"></a><span class="lineno"> 5195</span>&#160;      <span class="comment">// empty mouseover listeners we added for iOS support</span></div><div class="line"><a name="l05196"></a><span class="lineno"> 5196</span>&#160;</div><div class="line"><a name="l05197"></a><span class="lineno"> 5197</span>&#160;      <span class="keywordflow">if</span> (<span class="stringliteral">&#39;ontouchstart&#39;</span> in document.documentElement) {</div><div class="line"><a name="l05198"></a><span class="lineno"> 5198</span>&#160;        $$$1(<span class="stringliteral">&#39;body&#39;</span>).children().off(<span class="stringliteral">&#39;mouseover&#39;</span>, null, $$$1.noop);</div><div class="line"><a name="l05199"></a><span class="lineno"> 5199</span>&#160;      }</div><div class="line"><a name="l05200"></a><span class="lineno"> 5200</span>&#160;</div><div class="line"><a name="l05201"></a><span class="lineno"> 5201</span>&#160;      this._activeTrigger[Trigger.CLICK] = <span class="keyword">false</span>;</div><div class="line"><a name="l05202"></a><span class="lineno"> 5202</span>&#160;      this._activeTrigger[Trigger.FOCUS] = <span class="keyword">false</span>;</div><div class="line"><a name="l05203"></a><span class="lineno"> 5203</span>&#160;      this._activeTrigger[Trigger.HOVER] = <span class="keyword">false</span>;</div><div class="line"><a name="l05204"></a><span class="lineno"> 5204</span>&#160;</div><div class="line"><a name="l05205"></a><span class="lineno"> 5205</span>&#160;      <span class="keywordflow">if</span> (Util.supportsTransitionEnd() &amp;&amp; $$$1(this.tip).hasClass(ClassName.FADE)) {</div><div class="line"><a name="l05206"></a><span class="lineno"> 5206</span>&#160;        $$$1(tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);</div><div class="line"><a name="l05207"></a><span class="lineno"> 5207</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l05208"></a><span class="lineno"> 5208</span>&#160;        complete();</div><div class="line"><a name="l05209"></a><span class="lineno"> 5209</span>&#160;      }</div><div class="line"><a name="l05210"></a><span class="lineno"> 5210</span>&#160;</div><div class="line"><a name="l05211"></a><span class="lineno"> 5211</span>&#160;      this._hoverState = <span class="stringliteral">&#39;&#39;</span>;</div><div class="line"><a name="l05212"></a><span class="lineno"> 5212</span>&#160;    };</div><div class="line"><a name="l05213"></a><span class="lineno"> 5213</span>&#160;</div><div class="line"><a name="l05214"></a><span class="lineno"> 5214</span>&#160;    _proto.update = <span class="keyword">function</span> update() {</div><div class="line"><a name="l05215"></a><span class="lineno"> 5215</span>&#160;      <span class="keywordflow">if</span> (this._popper !== null) {</div><div class="line"><a name="l05216"></a><span class="lineno"> 5216</span>&#160;        this._popper.scheduleUpdate();</div><div class="line"><a name="l05217"></a><span class="lineno"> 5217</span>&#160;      }</div><div class="line"><a name="l05218"></a><span class="lineno"> 5218</span>&#160;    }; <span class="comment">// Protected</span></div><div class="line"><a name="l05219"></a><span class="lineno"> 5219</span>&#160;</div><div class="line"><a name="l05220"></a><span class="lineno"> 5220</span>&#160;</div><div class="line"><a name="l05221"></a><span class="lineno"> 5221</span>&#160;    _proto.isWithContent = <span class="keyword">function</span> isWithContent() {</div><div class="line"><a name="l05222"></a><span class="lineno"> 5222</span>&#160;      <span class="keywordflow">return</span> Boolean(this.getTitle());</div><div class="line"><a name="l05223"></a><span class="lineno"> 5223</span>&#160;    };</div><div class="line"><a name="l05224"></a><span class="lineno"> 5224</span>&#160;</div><div class="line"><a name="l05225"></a><span class="lineno"> 5225</span>&#160;    _proto.addAttachmentClass = <span class="keyword">function</span> addAttachmentClass(attachment) {</div><div class="line"><a name="l05226"></a><span class="lineno"> 5226</span>&#160;      $$$1(this.getTipElement()).addClass(CLASS_PREFIX + <span class="stringliteral">&quot;-&quot;</span> + attachment);</div><div class="line"><a name="l05227"></a><span class="lineno"> 5227</span>&#160;    };</div><div class="line"><a name="l05228"></a><span class="lineno"> 5228</span>&#160;</div><div class="line"><a name="l05229"></a><span class="lineno"> 5229</span>&#160;    _proto.getTipElement = <span class="keyword">function</span> getTipElement() {</div><div class="line"><a name="l05230"></a><span class="lineno"> 5230</span>&#160;      this.tip = this.tip || $$$1(this.config.template)[0];</div><div class="line"><a name="l05231"></a><span class="lineno"> 5231</span>&#160;      <span class="keywordflow">return</span> this.tip;</div><div class="line"><a name="l05232"></a><span class="lineno"> 5232</span>&#160;    };</div><div class="line"><a name="l05233"></a><span class="lineno"> 5233</span>&#160;</div><div class="line"><a name="l05234"></a><span class="lineno"> 5234</span>&#160;    _proto.setContent = <span class="keyword">function</span> setContent() {</div><div class="line"><a name="l05235"></a><span class="lineno"> 5235</span>&#160;      var $tip = $$$1(this.getTipElement());</div><div class="line"><a name="l05236"></a><span class="lineno"> 5236</span>&#160;      this.setElementContent($tip.find(Selector.TOOLTIP_INNER), this.getTitle());</div><div class="line"><a name="l05237"></a><span class="lineno"> 5237</span>&#160;      $tip.removeClass(ClassName.FADE + <span class="stringliteral">&quot; &quot;</span> + ClassName.SHOW);</div><div class="line"><a name="l05238"></a><span class="lineno"> 5238</span>&#160;    };</div><div class="line"><a name="l05239"></a><span class="lineno"> 5239</span>&#160;</div><div class="line"><a name="l05240"></a><span class="lineno"> 5240</span>&#160;    _proto.setElementContent = <span class="keyword">function</span> setElementContent($element, content) {</div><div class="line"><a name="l05241"></a><span class="lineno"> 5241</span>&#160;      var html = this.config.html;</div><div class="line"><a name="l05242"></a><span class="lineno"> 5242</span>&#160;</div><div class="line"><a name="l05243"></a><span class="lineno"> 5243</span>&#160;      <span class="keywordflow">if</span> (typeof content === <span class="stringliteral">&#39;object&#39;</span> &amp;&amp; (content.nodeType || content.jquery)) {</div><div class="line"><a name="l05244"></a><span class="lineno"> 5244</span>&#160;        <span class="comment">// Content is a DOM node or a jQuery</span></div><div class="line"><a name="l05245"></a><span class="lineno"> 5245</span>&#160;        <span class="keywordflow">if</span> (html) {</div><div class="line"><a name="l05246"></a><span class="lineno"> 5246</span>&#160;          <span class="keywordflow">if</span> (!$$$1(content).parent().is($element)) {</div><div class="line"><a name="l05247"></a><span class="lineno"> 5247</span>&#160;            $element.empty().append(content);</div><div class="line"><a name="l05248"></a><span class="lineno"> 5248</span>&#160;          }</div><div class="line"><a name="l05249"></a><span class="lineno"> 5249</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l05250"></a><span class="lineno"> 5250</span>&#160;          $element.text($$$1(content).text());</div><div class="line"><a name="l05251"></a><span class="lineno"> 5251</span>&#160;        }</div><div class="line"><a name="l05252"></a><span class="lineno"> 5252</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l05253"></a><span class="lineno"> 5253</span>&#160;        $element[html ? <span class="stringliteral">&#39;html&#39;</span> : <span class="stringliteral">&#39;text&#39;</span>](content);</div><div class="line"><a name="l05254"></a><span class="lineno"> 5254</span>&#160;      }</div><div class="line"><a name="l05255"></a><span class="lineno"> 5255</span>&#160;    };</div><div class="line"><a name="l05256"></a><span class="lineno"> 5256</span>&#160;</div><div class="line"><a name="l05257"></a><span class="lineno"> 5257</span>&#160;    _proto.getTitle = <span class="keyword">function</span> getTitle() {</div><div class="line"><a name="l05258"></a><span class="lineno"> 5258</span>&#160;      var title = this.element.getAttribute(<span class="stringliteral">&#39;data-original-title&#39;</span>);</div><div class="line"><a name="l05259"></a><span class="lineno"> 5259</span>&#160;</div><div class="line"><a name="l05260"></a><span class="lineno"> 5260</span>&#160;      <span class="keywordflow">if</span> (!title) {</div><div class="line"><a name="l05261"></a><span class="lineno"> 5261</span>&#160;        title = typeof this.config.title === <span class="stringliteral">&#39;function&#39;</span> ? this.config.title.call(this.element) : this.config.title;</div><div class="line"><a name="l05262"></a><span class="lineno"> 5262</span>&#160;      }</div><div class="line"><a name="l05263"></a><span class="lineno"> 5263</span>&#160;</div><div class="line"><a name="l05264"></a><span class="lineno"> 5264</span>&#160;      <span class="keywordflow">return</span> title;</div><div class="line"><a name="l05265"></a><span class="lineno"> 5265</span>&#160;    }; <span class="comment">// Private</span></div><div class="line"><a name="l05266"></a><span class="lineno"> 5266</span>&#160;</div><div class="line"><a name="l05267"></a><span class="lineno"> 5267</span>&#160;</div><div class="line"><a name="l05268"></a><span class="lineno"> 5268</span>&#160;    _proto._getAttachment = <span class="keyword">function</span> _getAttachment(placement) {</div><div class="line"><a name="l05269"></a><span class="lineno"> 5269</span>&#160;      <span class="keywordflow">return</span> AttachmentMap[placement.toUpperCase()];</div><div class="line"><a name="l05270"></a><span class="lineno"> 5270</span>&#160;    };</div><div class="line"><a name="l05271"></a><span class="lineno"> 5271</span>&#160;</div><div class="line"><a name="l05272"></a><span class="lineno"> 5272</span>&#160;    _proto._setListeners = <span class="keyword">function</span> _setListeners() {</div><div class="line"><a name="l05273"></a><span class="lineno"> 5273</span>&#160;      var _this3 = <span class="keyword">this</span>;</div><div class="line"><a name="l05274"></a><span class="lineno"> 5274</span>&#160;</div><div class="line"><a name="l05275"></a><span class="lineno"> 5275</span>&#160;      var triggers = this.config.trigger.split(<span class="charliteral">&#39; &#39;</span>);</div><div class="line"><a name="l05276"></a><span class="lineno"> 5276</span>&#160;      triggers.forEach(<span class="keyword">function</span> (trigger) {</div><div class="line"><a name="l05277"></a><span class="lineno"> 5277</span>&#160;        <span class="keywordflow">if</span> (trigger === <span class="stringliteral">&#39;click&#39;</span>) {</div><div class="line"><a name="l05278"></a><span class="lineno"> 5278</span>&#160;          $$$1(_this3.element).on(_this3.constructor.Event.CLICK, _this3.config.selector, function (event) {</div><div class="line"><a name="l05279"></a><span class="lineno"> 5279</span>&#160;            <span class="keywordflow">return</span> _this3.toggle(event);</div><div class="line"><a name="l05280"></a><span class="lineno"> 5280</span>&#160;          });</div><div class="line"><a name="l05281"></a><span class="lineno"> 5281</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (trigger !== Trigger.MANUAL) {</div><div class="line"><a name="l05282"></a><span class="lineno"> 5282</span>&#160;          var eventIn = trigger === Trigger.HOVER ? _this3.constructor.Event.MOUSEENTER : _this3.constructor.Event.FOCUSIN;</div><div class="line"><a name="l05283"></a><span class="lineno"> 5283</span>&#160;          var eventOut = trigger === Trigger.HOVER ? _this3.constructor.Event.MOUSELEAVE : _this3.constructor.Event.FOCUSOUT;</div><div class="line"><a name="l05284"></a><span class="lineno"> 5284</span>&#160;          $$$1(_this3.element).on(eventIn, _this3.config.selector, function (event) {</div><div class="line"><a name="l05285"></a><span class="lineno"> 5285</span>&#160;            <span class="keywordflow">return</span> _this3._enter(event);</div><div class="line"><a name="l05286"></a><span class="lineno"> 5286</span>&#160;          }).on(eventOut, _this3.config.selector, function (event) {</div><div class="line"><a name="l05287"></a><span class="lineno"> 5287</span>&#160;            <span class="keywordflow">return</span> _this3._leave(event);</div><div class="line"><a name="l05288"></a><span class="lineno"> 5288</span>&#160;          });</div><div class="line"><a name="l05289"></a><span class="lineno"> 5289</span>&#160;        }</div><div class="line"><a name="l05290"></a><span class="lineno"> 5290</span>&#160;</div><div class="line"><a name="l05291"></a><span class="lineno"> 5291</span>&#160;        $$$1(_this3.element).closest(<span class="stringliteral">&#39;.modal&#39;</span>).on(<span class="stringliteral">&#39;hide.bs.modal&#39;</span>, <span class="keyword">function</span> () {</div><div class="line"><a name="l05292"></a><span class="lineno"> 5292</span>&#160;          <span class="keywordflow">return</span> _this3.hide();</div><div class="line"><a name="l05293"></a><span class="lineno"> 5293</span>&#160;        });</div><div class="line"><a name="l05294"></a><span class="lineno"> 5294</span>&#160;      });</div><div class="line"><a name="l05295"></a><span class="lineno"> 5295</span>&#160;</div><div class="line"><a name="l05296"></a><span class="lineno"> 5296</span>&#160;      <span class="keywordflow">if</span> (this.config.selector) {</div><div class="line"><a name="l05297"></a><span class="lineno"> 5297</span>&#160;        this.config = <a class="code" href="../../d4/d51/a00017.php#ac2eea16a19b83a9509e2f9188c0fdc0f">_extends</a>({}, this.config, {</div><div class="line"><a name="l05298"></a><span class="lineno"> 5298</span>&#160;          trigger: <span class="stringliteral">&#39;manual&#39;</span>,</div><div class="line"><a name="l05299"></a><span class="lineno"> 5299</span>&#160;          selector: <span class="stringliteral">&#39;&#39;</span></div><div class="line"><a name="l05300"></a><span class="lineno"> 5300</span>&#160;        });</div><div class="line"><a name="l05301"></a><span class="lineno"> 5301</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l05302"></a><span class="lineno"> 5302</span>&#160;        this._fixTitle();</div><div class="line"><a name="l05303"></a><span class="lineno"> 5303</span>&#160;      }</div><div class="line"><a name="l05304"></a><span class="lineno"> 5304</span>&#160;    };</div><div class="line"><a name="l05305"></a><span class="lineno"> 5305</span>&#160;</div><div class="line"><a name="l05306"></a><span class="lineno"> 5306</span>&#160;    _proto._fixTitle = <span class="keyword">function</span> _fixTitle() {</div><div class="line"><a name="l05307"></a><span class="lineno"> 5307</span>&#160;      var titleType = typeof this.element.getAttribute(<span class="stringliteral">&#39;data-original-title&#39;</span>);</div><div class="line"><a name="l05308"></a><span class="lineno"> 5308</span>&#160;</div><div class="line"><a name="l05309"></a><span class="lineno"> 5309</span>&#160;      <span class="keywordflow">if</span> (this.element.getAttribute(<span class="stringliteral">&#39;title&#39;</span>) || titleType !== <span class="stringliteral">&#39;string&#39;</span>) {</div><div class="line"><a name="l05310"></a><span class="lineno"> 5310</span>&#160;        this.element.setAttribute(<span class="stringliteral">&#39;data-original-title&#39;</span>, this.element.getAttribute(<span class="stringliteral">&#39;title&#39;</span>) || <span class="stringliteral">&#39;&#39;</span>);</div><div class="line"><a name="l05311"></a><span class="lineno"> 5311</span>&#160;        this.element.setAttribute(<span class="stringliteral">&#39;title&#39;</span>, <span class="stringliteral">&#39;&#39;</span>);</div><div class="line"><a name="l05312"></a><span class="lineno"> 5312</span>&#160;      }</div><div class="line"><a name="l05313"></a><span class="lineno"> 5313</span>&#160;    };</div><div class="line"><a name="l05314"></a><span class="lineno"> 5314</span>&#160;</div><div class="line"><a name="l05315"></a><span class="lineno"> 5315</span>&#160;    _proto._enter = <span class="keyword">function</span> _enter(event, context) {</div><div class="line"><a name="l05316"></a><span class="lineno"> 5316</span>&#160;      var dataKey = this.constructor.DATA_KEY;</div><div class="line"><a name="l05317"></a><span class="lineno"> 5317</span>&#160;      context = context || $$$1(event.currentTarget).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(dataKey);</div><div class="line"><a name="l05318"></a><span class="lineno"> 5318</span>&#160;</div><div class="line"><a name="l05319"></a><span class="lineno"> 5319</span>&#160;      <span class="keywordflow">if</span> (!context) {</div><div class="line"><a name="l05320"></a><span class="lineno"> 5320</span>&#160;        context = <span class="keyword">new</span> this.constructor(event.currentTarget, <span class="keyword">this</span>._getDelegateConfig());</div><div class="line"><a name="l05321"></a><span class="lineno"> 5321</span>&#160;        $$$1(event.currentTarget).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(dataKey, context);</div><div class="line"><a name="l05322"></a><span class="lineno"> 5322</span>&#160;      }</div><div class="line"><a name="l05323"></a><span class="lineno"> 5323</span>&#160;</div><div class="line"><a name="l05324"></a><span class="lineno"> 5324</span>&#160;      <span class="keywordflow">if</span> (event) {</div><div class="line"><a name="l05325"></a><span class="lineno"> 5325</span>&#160;        context._activeTrigger[event.type === <span class="stringliteral">&#39;focusin&#39;</span> ? Trigger.FOCUS : Trigger.HOVER] = <span class="keyword">true</span>;</div><div class="line"><a name="l05326"></a><span class="lineno"> 5326</span>&#160;      }</div><div class="line"><a name="l05327"></a><span class="lineno"> 5327</span>&#160;</div><div class="line"><a name="l05328"></a><span class="lineno"> 5328</span>&#160;      <span class="keywordflow">if</span> ($$$1(context.getTipElement()).hasClass(ClassName.SHOW) || context._hoverState === HoverState.SHOW) {</div><div class="line"><a name="l05329"></a><span class="lineno"> 5329</span>&#160;        context._hoverState = HoverState.SHOW;</div><div class="line"><a name="l05330"></a><span class="lineno"> 5330</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l05331"></a><span class="lineno"> 5331</span>&#160;      }</div><div class="line"><a name="l05332"></a><span class="lineno"> 5332</span>&#160;</div><div class="line"><a name="l05333"></a><span class="lineno"> 5333</span>&#160;      clearTimeout(context._timeout);</div><div class="line"><a name="l05334"></a><span class="lineno"> 5334</span>&#160;      context._hoverState = HoverState.SHOW;</div><div class="line"><a name="l05335"></a><span class="lineno"> 5335</span>&#160;</div><div class="line"><a name="l05336"></a><span class="lineno"> 5336</span>&#160;      <span class="keywordflow">if</span> (!context.config.delay || !context.config.delay.show) {</div><div class="line"><a name="l05337"></a><span class="lineno"> 5337</span>&#160;        context.show();</div><div class="line"><a name="l05338"></a><span class="lineno"> 5338</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l05339"></a><span class="lineno"> 5339</span>&#160;      }</div><div class="line"><a name="l05340"></a><span class="lineno"> 5340</span>&#160;</div><div class="line"><a name="l05341"></a><span class="lineno"> 5341</span>&#160;      context._timeout = setTimeout(<span class="keyword">function</span> () {</div><div class="line"><a name="l05342"></a><span class="lineno"> 5342</span>&#160;        <span class="keywordflow">if</span> (context._hoverState === HoverState.SHOW) {</div><div class="line"><a name="l05343"></a><span class="lineno"> 5343</span>&#160;          context.show();</div><div class="line"><a name="l05344"></a><span class="lineno"> 5344</span>&#160;        }</div><div class="line"><a name="l05345"></a><span class="lineno"> 5345</span>&#160;      }, context.config.delay.show);</div><div class="line"><a name="l05346"></a><span class="lineno"> 5346</span>&#160;    };</div><div class="line"><a name="l05347"></a><span class="lineno"> 5347</span>&#160;</div><div class="line"><a name="l05348"></a><span class="lineno"> 5348</span>&#160;    _proto._leave = <span class="keyword">function</span> _leave(event, context) {</div><div class="line"><a name="l05349"></a><span class="lineno"> 5349</span>&#160;      var dataKey = this.constructor.DATA_KEY;</div><div class="line"><a name="l05350"></a><span class="lineno"> 5350</span>&#160;      context = context || $$$1(event.currentTarget).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(dataKey);</div><div class="line"><a name="l05351"></a><span class="lineno"> 5351</span>&#160;</div><div class="line"><a name="l05352"></a><span class="lineno"> 5352</span>&#160;      <span class="keywordflow">if</span> (!context) {</div><div class="line"><a name="l05353"></a><span class="lineno"> 5353</span>&#160;        context = <span class="keyword">new</span> this.constructor(event.currentTarget, <span class="keyword">this</span>._getDelegateConfig());</div><div class="line"><a name="l05354"></a><span class="lineno"> 5354</span>&#160;        $$$1(event.currentTarget).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(dataKey, context);</div><div class="line"><a name="l05355"></a><span class="lineno"> 5355</span>&#160;      }</div><div class="line"><a name="l05356"></a><span class="lineno"> 5356</span>&#160;</div><div class="line"><a name="l05357"></a><span class="lineno"> 5357</span>&#160;      <span class="keywordflow">if</span> (event) {</div><div class="line"><a name="l05358"></a><span class="lineno"> 5358</span>&#160;        context._activeTrigger[event.type === <span class="stringliteral">&#39;focusout&#39;</span> ? Trigger.FOCUS : Trigger.HOVER] = <span class="keyword">false</span>;</div><div class="line"><a name="l05359"></a><span class="lineno"> 5359</span>&#160;      }</div><div class="line"><a name="l05360"></a><span class="lineno"> 5360</span>&#160;</div><div class="line"><a name="l05361"></a><span class="lineno"> 5361</span>&#160;      <span class="keywordflow">if</span> (context._isWithActiveTrigger()) {</div><div class="line"><a name="l05362"></a><span class="lineno"> 5362</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l05363"></a><span class="lineno"> 5363</span>&#160;      }</div><div class="line"><a name="l05364"></a><span class="lineno"> 5364</span>&#160;</div><div class="line"><a name="l05365"></a><span class="lineno"> 5365</span>&#160;      clearTimeout(context._timeout);</div><div class="line"><a name="l05366"></a><span class="lineno"> 5366</span>&#160;      context._hoverState = HoverState.OUT;</div><div class="line"><a name="l05367"></a><span class="lineno"> 5367</span>&#160;</div><div class="line"><a name="l05368"></a><span class="lineno"> 5368</span>&#160;      <span class="keywordflow">if</span> (!context.config.delay || !context.config.delay.hide) {</div><div class="line"><a name="l05369"></a><span class="lineno"> 5369</span>&#160;        context.hide();</div><div class="line"><a name="l05370"></a><span class="lineno"> 5370</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l05371"></a><span class="lineno"> 5371</span>&#160;      }</div><div class="line"><a name="l05372"></a><span class="lineno"> 5372</span>&#160;</div><div class="line"><a name="l05373"></a><span class="lineno"> 5373</span>&#160;      context._timeout = setTimeout(<span class="keyword">function</span> () {</div><div class="line"><a name="l05374"></a><span class="lineno"> 5374</span>&#160;        <span class="keywordflow">if</span> (context._hoverState === HoverState.OUT) {</div><div class="line"><a name="l05375"></a><span class="lineno"> 5375</span>&#160;          context.hide();</div><div class="line"><a name="l05376"></a><span class="lineno"> 5376</span>&#160;        }</div><div class="line"><a name="l05377"></a><span class="lineno"> 5377</span>&#160;      }, context.config.delay.hide);</div><div class="line"><a name="l05378"></a><span class="lineno"> 5378</span>&#160;    };</div><div class="line"><a name="l05379"></a><span class="lineno"> 5379</span>&#160;</div><div class="line"><a name="l05380"></a><span class="lineno"> 5380</span>&#160;    _proto._isWithActiveTrigger = <span class="keyword">function</span> _isWithActiveTrigger() {</div><div class="line"><a name="l05381"></a><span class="lineno"> 5381</span>&#160;      <span class="keywordflow">for</span> (var trigger in this._activeTrigger) {</div><div class="line"><a name="l05382"></a><span class="lineno"> 5382</span>&#160;        <span class="keywordflow">if</span> (this._activeTrigger[trigger]) {</div><div class="line"><a name="l05383"></a><span class="lineno"> 5383</span>&#160;          <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l05384"></a><span class="lineno"> 5384</span>&#160;        }</div><div class="line"><a name="l05385"></a><span class="lineno"> 5385</span>&#160;      }</div><div class="line"><a name="l05386"></a><span class="lineno"> 5386</span>&#160;</div><div class="line"><a name="l05387"></a><span class="lineno"> 5387</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l05388"></a><span class="lineno"> 5388</span>&#160;    };</div><div class="line"><a name="l05389"></a><span class="lineno"> 5389</span>&#160;</div><div class="line"><a name="l05390"></a><span class="lineno"> 5390</span>&#160;    _proto._getConfig = <span class="keyword">function</span> _getConfig(config) {</div><div class="line"><a name="l05391"></a><span class="lineno"> 5391</span>&#160;      config = <a class="code" href="../../d4/d51/a00017.php#ac2eea16a19b83a9509e2f9188c0fdc0f">_extends</a>({}, this.constructor.Default, $$$1(this.element).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(), config);</div><div class="line"><a name="l05392"></a><span class="lineno"> 5392</span>&#160;</div><div class="line"><a name="l05393"></a><span class="lineno"> 5393</span>&#160;      <span class="keywordflow">if</span> (typeof config.delay === <span class="stringliteral">&#39;number&#39;</span>) {</div><div class="line"><a name="l05394"></a><span class="lineno"> 5394</span>&#160;        config.delay = {</div><div class="line"><a name="l05395"></a><span class="lineno"> 5395</span>&#160;          show: config.delay,</div><div class="line"><a name="l05396"></a><span class="lineno"> 5396</span>&#160;          hide: config.delay</div><div class="line"><a name="l05397"></a><span class="lineno"> 5397</span>&#160;        };</div><div class="line"><a name="l05398"></a><span class="lineno"> 5398</span>&#160;      }</div><div class="line"><a name="l05399"></a><span class="lineno"> 5399</span>&#160;</div><div class="line"><a name="l05400"></a><span class="lineno"> 5400</span>&#160;      <span class="keywordflow">if</span> (typeof config.title === <span class="stringliteral">&#39;number&#39;</span>) {</div><div class="line"><a name="l05401"></a><span class="lineno"> 5401</span>&#160;        config.title = config.title.toString();</div><div class="line"><a name="l05402"></a><span class="lineno"> 5402</span>&#160;      }</div><div class="line"><a name="l05403"></a><span class="lineno"> 5403</span>&#160;</div><div class="line"><a name="l05404"></a><span class="lineno"> 5404</span>&#160;      <span class="keywordflow">if</span> (typeof config.content === <span class="stringliteral">&#39;number&#39;</span>) {</div><div class="line"><a name="l05405"></a><span class="lineno"> 5405</span>&#160;        config.content = config.content.toString();</div><div class="line"><a name="l05406"></a><span class="lineno"> 5406</span>&#160;      }</div><div class="line"><a name="l05407"></a><span class="lineno"> 5407</span>&#160;</div><div class="line"><a name="l05408"></a><span class="lineno"> 5408</span>&#160;      Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);</div><div class="line"><a name="l05409"></a><span class="lineno"> 5409</span>&#160;      <span class="keywordflow">return</span> config;</div><div class="line"><a name="l05410"></a><span class="lineno"> 5410</span>&#160;    };</div><div class="line"><a name="l05411"></a><span class="lineno"> 5411</span>&#160;</div><div class="line"><a name="l05412"></a><span class="lineno"> 5412</span>&#160;    _proto._getDelegateConfig = <span class="keyword">function</span> _getDelegateConfig() {</div><div class="line"><a name="l05413"></a><span class="lineno"> 5413</span>&#160;      var config = {};</div><div class="line"><a name="l05414"></a><span class="lineno"> 5414</span>&#160;</div><div class="line"><a name="l05415"></a><span class="lineno"> 5415</span>&#160;      <span class="keywordflow">if</span> (this.config) {</div><div class="line"><a name="l05416"></a><span class="lineno"> 5416</span>&#160;        <span class="keywordflow">for</span> (var key in this.config) {</div><div class="line"><a name="l05417"></a><span class="lineno"> 5417</span>&#160;          <span class="keywordflow">if</span> (this.constructor.Default[key] !== <span class="keyword">this</span>.config[key]) {</div><div class="line"><a name="l05418"></a><span class="lineno"> 5418</span>&#160;            config[key] = this.config[key];</div><div class="line"><a name="l05419"></a><span class="lineno"> 5419</span>&#160;          }</div><div class="line"><a name="l05420"></a><span class="lineno"> 5420</span>&#160;        }</div><div class="line"><a name="l05421"></a><span class="lineno"> 5421</span>&#160;      }</div><div class="line"><a name="l05422"></a><span class="lineno"> 5422</span>&#160;</div><div class="line"><a name="l05423"></a><span class="lineno"> 5423</span>&#160;      <span class="keywordflow">return</span> config;</div><div class="line"><a name="l05424"></a><span class="lineno"> 5424</span>&#160;    };</div><div class="line"><a name="l05425"></a><span class="lineno"> 5425</span>&#160;</div><div class="line"><a name="l05426"></a><span class="lineno"> 5426</span>&#160;    _proto._cleanTipClass = <span class="keyword">function</span> _cleanTipClass() {</div><div class="line"><a name="l05427"></a><span class="lineno"> 5427</span>&#160;      var $tip = $$$1(this.getTipElement());</div><div class="line"><a name="l05428"></a><span class="lineno"> 5428</span>&#160;      var tabClass = $tip.attr(<span class="stringliteral">&#39;class&#39;</span>).match(BSCLS_PREFIX_REGEX);</div><div class="line"><a name="l05429"></a><span class="lineno"> 5429</span>&#160;</div><div class="line"><a name="l05430"></a><span class="lineno"> 5430</span>&#160;      <span class="keywordflow">if</span> (tabClass !== null &amp;&amp; tabClass.length &gt; 0) {</div><div class="line"><a name="l05431"></a><span class="lineno"> 5431</span>&#160;        $tip.removeClass(tabClass.join(<span class="stringliteral">&#39;&#39;</span>));</div><div class="line"><a name="l05432"></a><span class="lineno"> 5432</span>&#160;      }</div><div class="line"><a name="l05433"></a><span class="lineno"> 5433</span>&#160;    };</div><div class="line"><a name="l05434"></a><span class="lineno"> 5434</span>&#160;</div><div class="line"><a name="l05435"></a><span class="lineno"> 5435</span>&#160;    _proto._handlePopperPlacementChange = <span class="keyword">function</span> _handlePopperPlacementChange(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>) {</div><div class="line"><a name="l05436"></a><span class="lineno"> 5436</span>&#160;      this._cleanTipClass();</div><div class="line"><a name="l05437"></a><span class="lineno"> 5437</span>&#160;</div><div class="line"><a name="l05438"></a><span class="lineno"> 5438</span>&#160;      this.addAttachmentClass(this._getAttachment(<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>.placement));</div><div class="line"><a name="l05439"></a><span class="lineno"> 5439</span>&#160;    };</div><div class="line"><a name="l05440"></a><span class="lineno"> 5440</span>&#160;</div><div class="line"><a name="l05441"></a><span class="lineno"> 5441</span>&#160;    _proto._fixTransition = <span class="keyword">function</span> _fixTransition() {</div><div class="line"><a name="l05442"></a><span class="lineno"> 5442</span>&#160;      var tip = this.getTipElement();</div><div class="line"><a name="l05443"></a><span class="lineno"> 5443</span>&#160;      var initConfigAnimation = this.config.animation;</div><div class="line"><a name="l05444"></a><span class="lineno"> 5444</span>&#160;</div><div class="line"><a name="l05445"></a><span class="lineno"> 5445</span>&#160;      <span class="keywordflow">if</span> (tip.getAttribute(<span class="stringliteral">&#39;x-placement&#39;</span>) !== null) {</div><div class="line"><a name="l05446"></a><span class="lineno"> 5446</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l05447"></a><span class="lineno"> 5447</span>&#160;      }</div><div class="line"><a name="l05448"></a><span class="lineno"> 5448</span>&#160;</div><div class="line"><a name="l05449"></a><span class="lineno"> 5449</span>&#160;      $$$1(tip).removeClass(ClassName.FADE);</div><div class="line"><a name="l05450"></a><span class="lineno"> 5450</span>&#160;      this.config.animation = <span class="keyword">false</span>;</div><div class="line"><a name="l05451"></a><span class="lineno"> 5451</span>&#160;      this.hide();</div><div class="line"><a name="l05452"></a><span class="lineno"> 5452</span>&#160;      this.show();</div><div class="line"><a name="l05453"></a><span class="lineno"> 5453</span>&#160;      this.config.animation = initConfigAnimation;</div><div class="line"><a name="l05454"></a><span class="lineno"> 5454</span>&#160;    }; <span class="comment">// Static</span></div><div class="line"><a name="l05455"></a><span class="lineno"> 5455</span>&#160;</div><div class="line"><a name="l05456"></a><span class="lineno"> 5456</span>&#160;</div><div class="line"><a name="l05457"></a><span class="lineno"> 5457</span>&#160;    Tooltip._jQueryInterface = <span class="keyword">function</span> _jQueryInterface(config) {</div><div class="line"><a name="l05458"></a><span class="lineno"> 5458</span>&#160;      <span class="keywordflow">return</span> this.<a class="code" href="../../d3/dea/a00046.php#a877963eb3bdbe10cffb2337a091a7ff1">each</a>(<span class="keyword">function</span> () {</div><div class="line"><a name="l05459"></a><span class="lineno"> 5459</span>&#160;        var <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a> = $$$1(<span class="keyword">this</span>).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(DATA_KEY);</div><div class="line"><a name="l05460"></a><span class="lineno"> 5460</span>&#160;</div><div class="line"><a name="l05461"></a><span class="lineno"> 5461</span>&#160;        var _config = typeof config === <span class="stringliteral">&#39;object&#39;</span> &amp;&amp; config;</div><div class="line"><a name="l05462"></a><span class="lineno"> 5462</span>&#160;</div><div class="line"><a name="l05463"></a><span class="lineno"> 5463</span>&#160;        <span class="keywordflow">if</span> (!data &amp;&amp; /dispose|hide/.test(config)) {</div><div class="line"><a name="l05464"></a><span class="lineno"> 5464</span>&#160;          <span class="keywordflow">return</span>;</div><div class="line"><a name="l05465"></a><span class="lineno"> 5465</span>&#160;        }</div><div class="line"><a name="l05466"></a><span class="lineno"> 5466</span>&#160;</div><div class="line"><a name="l05467"></a><span class="lineno"> 5467</span>&#160;        <span class="keywordflow">if</span> (!data) {</div><div class="line"><a name="l05468"></a><span class="lineno"> 5468</span>&#160;          data = <span class="keyword">new</span> <a class="code" href="../../d4/d51/a00017.php#a8bc91fbc10ac1566135a747b9c84dd3d">Tooltip</a>(<span class="keyword">this</span>, _config);</div><div class="line"><a name="l05469"></a><span class="lineno"> 5469</span>&#160;          $$$1(<span class="keyword">this</span>).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(DATA_KEY, data);</div><div class="line"><a name="l05470"></a><span class="lineno"> 5470</span>&#160;        }</div><div class="line"><a name="l05471"></a><span class="lineno"> 5471</span>&#160;</div><div class="line"><a name="l05472"></a><span class="lineno"> 5472</span>&#160;        <span class="keywordflow">if</span> (typeof config === <span class="stringliteral">&#39;string&#39;</span>) {</div><div class="line"><a name="l05473"></a><span class="lineno"> 5473</span>&#160;          <span class="keywordflow">if</span> (typeof data[config] === <span class="stringliteral">&#39;undefined&#39;</span>) {</div><div class="line"><a name="l05474"></a><span class="lineno"> 5474</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> TypeError(<span class="stringliteral">&quot;No method named \&quot;&quot;</span> + config + <span class="stringliteral">&quot;\&quot;&quot;</span>);</div><div class="line"><a name="l05475"></a><span class="lineno"> 5475</span>&#160;          }</div><div class="line"><a name="l05476"></a><span class="lineno"> 5476</span>&#160;</div><div class="line"><a name="l05477"></a><span class="lineno"> 5477</span>&#160;          data[config]();</div><div class="line"><a name="l05478"></a><span class="lineno"> 5478</span>&#160;        }</div><div class="line"><a name="l05479"></a><span class="lineno"> 5479</span>&#160;      });</div><div class="line"><a name="l05480"></a><span class="lineno"> 5480</span>&#160;    };</div><div class="line"><a name="l05481"></a><span class="lineno"> 5481</span>&#160;</div><div class="line"><a name="l05482"></a><span class="lineno"> 5482</span>&#160;    <a class="code" href="../../d4/d51/a00017.php#a39e10dc3069b4a23aa52bea0bec60e36">_createClass</a>(Tooltip, null, [{</div><div class="line"><a name="l05483"></a><span class="lineno"> 5483</span>&#160;      key: <span class="stringliteral">&quot;VERSION&quot;</span>,</div><div class="line"><a name="l05484"></a><span class="lineno"> 5484</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l05485"></a><span class="lineno"> 5485</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../db/db2/a00020.php#a3635f2df5844f69204b70bf7b3983587">VERSION</a>;</div><div class="line"><a name="l05486"></a><span class="lineno"> 5486</span>&#160;      }</div><div class="line"><a name="l05487"></a><span class="lineno"> 5487</span>&#160;    }, {</div><div class="line"><a name="l05488"></a><span class="lineno"> 5488</span>&#160;      key: <span class="stringliteral">&quot;Default&quot;</span>,</div><div class="line"><a name="l05489"></a><span class="lineno"> 5489</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l05490"></a><span class="lineno"> 5490</span>&#160;        <span class="keywordflow">return</span> Default;</div><div class="line"><a name="l05491"></a><span class="lineno"> 5491</span>&#160;      }</div><div class="line"><a name="l05492"></a><span class="lineno"> 5492</span>&#160;    }, {</div><div class="line"><a name="l05493"></a><span class="lineno"> 5493</span>&#160;      key: <span class="stringliteral">&quot;NAME&quot;</span>,</div><div class="line"><a name="l05494"></a><span class="lineno"> 5494</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l05495"></a><span class="lineno"> 5495</span>&#160;        <span class="keywordflow">return</span> NAME;</div><div class="line"><a name="l05496"></a><span class="lineno"> 5496</span>&#160;      }</div><div class="line"><a name="l05497"></a><span class="lineno"> 5497</span>&#160;    }, {</div><div class="line"><a name="l05498"></a><span class="lineno"> 5498</span>&#160;      key: <span class="stringliteral">&quot;DATA_KEY&quot;</span>,</div><div class="line"><a name="l05499"></a><span class="lineno"> 5499</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l05500"></a><span class="lineno"> 5500</span>&#160;        <span class="keywordflow">return</span> DATA_KEY;</div><div class="line"><a name="l05501"></a><span class="lineno"> 5501</span>&#160;      }</div><div class="line"><a name="l05502"></a><span class="lineno"> 5502</span>&#160;    }, {</div><div class="line"><a name="l05503"></a><span class="lineno"> 5503</span>&#160;      key: <span class="stringliteral">&quot;Event&quot;</span>,</div><div class="line"><a name="l05504"></a><span class="lineno"> 5504</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l05505"></a><span class="lineno"> 5505</span>&#160;        <span class="keywordflow">return</span> Event;</div><div class="line"><a name="l05506"></a><span class="lineno"> 5506</span>&#160;      }</div><div class="line"><a name="l05507"></a><span class="lineno"> 5507</span>&#160;    }, {</div><div class="line"><a name="l05508"></a><span class="lineno"> 5508</span>&#160;      key: <span class="stringliteral">&quot;EVENT_KEY&quot;</span>,</div><div class="line"><a name="l05509"></a><span class="lineno"> 5509</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l05510"></a><span class="lineno"> 5510</span>&#160;        <span class="keywordflow">return</span> EVENT_KEY;</div><div class="line"><a name="l05511"></a><span class="lineno"> 5511</span>&#160;      }</div><div class="line"><a name="l05512"></a><span class="lineno"> 5512</span>&#160;    }, {</div><div class="line"><a name="l05513"></a><span class="lineno"> 5513</span>&#160;      key: <span class="stringliteral">&quot;DefaultType&quot;</span>,</div><div class="line"><a name="l05514"></a><span class="lineno"> 5514</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l05515"></a><span class="lineno"> 5515</span>&#160;        <span class="keywordflow">return</span> DefaultType;</div><div class="line"><a name="l05516"></a><span class="lineno"> 5516</span>&#160;      }</div><div class="line"><a name="l05517"></a><span class="lineno"> 5517</span>&#160;    }]);</div><div class="line"><a name="l05518"></a><span class="lineno"> 5518</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#a8bc91fbc10ac1566135a747b9c84dd3d">Tooltip</a>;</div><div class="line"><a name="l05519"></a><span class="lineno"> 5519</span>&#160;  }();</div><div class="line"><a name="l05527"></a><span class="lineno"> 5527</span>&#160;  $$$1.fn[NAME] = Tooltip._jQueryInterface;</div><div class="line"><a name="l05528"></a><span class="lineno"> 5528</span>&#160;  $$$1.fn[NAME].Constructor = <a class="code" href="../../d4/d51/a00017.php#a8bc91fbc10ac1566135a747b9c84dd3d">Tooltip</a>;</div><div class="line"><a name="l05529"></a><span class="lineno"> 5529</span>&#160;</div><div class="line"><a name="l05530"></a><span class="lineno"> 5530</span>&#160;  $$$1.fn[NAME].noConflict = <span class="keyword">function</span> () {</div><div class="line"><a name="l05531"></a><span class="lineno"> 5531</span>&#160;    $$$1.fn[NAME] = JQUERY_NO_CONFLICT;</div><div class="line"><a name="l05532"></a><span class="lineno"> 5532</span>&#160;    <span class="keywordflow">return</span> Tooltip._jQueryInterface;</div><div class="line"><a name="l05533"></a><span class="lineno"> 5533</span>&#160;  };</div><div class="line"><a name="l05534"></a><span class="lineno"> 5534</span>&#160;</div><div class="line"><a name="l05535"></a><span class="lineno"> 5535</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#a8bc91fbc10ac1566135a747b9c84dd3d">Tooltip</a>;</div><div class="line"><a name="l05536"></a><span class="lineno"> 5536</span>&#160;}($, <a class="code" href="../../d4/d51/a00017.php#ab34a4e248b9bfbf76de92f866779e0e6">Popper</a>);</div><div class="line"><a name="l05537"></a><span class="lineno"> 5537</span>&#160;</div><div class="line"><a name="l05545"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a2bf106dab0efd524a9e3f21400c0005e"> 5545</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#a2bf106dab0efd524a9e3f21400c0005e">Popover</a> = <span class="keyword">function</span> ($$$1) {</div><div class="line"><a name="l05551"></a><span class="lineno"> 5551</span>&#160;  var NAME = <span class="stringliteral">&#39;popover&#39;</span>;</div><div class="line"><a name="l05552"></a><span class="lineno"> 5552</span>&#160;  var <a class="code" href="../../db/db2/a00020.php#a3635f2df5844f69204b70bf7b3983587">VERSION</a> = <span class="stringliteral">&#39;4.0.0&#39;</span>;</div><div class="line"><a name="l05553"></a><span class="lineno"> 5553</span>&#160;  var DATA_KEY = <span class="stringliteral">&#39;bs.popover&#39;</span>;</div><div class="line"><a name="l05554"></a><span class="lineno"> 5554</span>&#160;  var EVENT_KEY = <span class="stringliteral">&quot;.&quot;</span> + DATA_KEY;</div><div class="line"><a name="l05555"></a><span class="lineno"> 5555</span>&#160;  var JQUERY_NO_CONFLICT = $$$1.fn[NAME];</div><div class="line"><a name="l05556"></a><span class="lineno"> 5556</span>&#160;  var CLASS_PREFIX = <span class="stringliteral">&#39;bs-popover&#39;</span>;</div><div class="line"><a name="l05557"></a><span class="lineno"> 5557</span>&#160;  var BSCLS_PREFIX_REGEX = <span class="keyword">new</span> RegExp(<span class="stringliteral">&quot;(^|\\s)&quot;</span> + CLASS_PREFIX + <span class="stringliteral">&quot;\\S+&quot;</span>, <span class="charliteral">&#39;g&#39;</span>);</div><div class="line"><a name="l05558"></a><span class="lineno"> 5558</span>&#160;  var Default = <a class="code" href="../../d4/d51/a00017.php#ac2eea16a19b83a9509e2f9188c0fdc0f">_extends</a>({}, Tooltip.Default, {</div><div class="line"><a name="l05559"></a><span class="lineno"> 5559</span>&#160;    placement: <span class="stringliteral">&#39;right&#39;</span>,</div><div class="line"><a name="l05560"></a><span class="lineno"> 5560</span>&#160;    trigger: <span class="stringliteral">&#39;click&#39;</span>,</div><div class="line"><a name="l05561"></a><span class="lineno"> 5561</span>&#160;    content: <span class="stringliteral">&#39;&#39;</span>,</div><div class="line"><a name="l05562"></a><span class="lineno"> 5562</span>&#160;    <span class="keyword">template</span>: <span class="stringliteral">&#39;&lt;div class=&quot;popover&quot; role=&quot;tooltip&quot;&gt;&#39;</span> + <span class="stringliteral">&#39;&lt;div class=&quot;arrow&quot;&gt;&lt;/div&gt;&#39;</span> + <span class="stringliteral">&#39;&lt;h3 class=&quot;popover-header&quot;&gt;&lt;/h3&gt;&#39;</span> + <span class="stringliteral">&#39;&lt;div class=&quot;popover-body&quot;&gt;&lt;/div&gt;&lt;/div&gt;&#39;</span></div><div class="line"><a name="l05563"></a><span class="lineno"> 5563</span>&#160;  });</div><div class="line"><a name="l05564"></a><span class="lineno"> 5564</span>&#160;  var DefaultType = <a class="code" href="../../d4/d51/a00017.php#ac2eea16a19b83a9509e2f9188c0fdc0f">_extends</a>({}, Tooltip.DefaultType, {</div><div class="line"><a name="l05565"></a><span class="lineno"> 5565</span>&#160;    content: <span class="stringliteral">&#39;(string|element|function)&#39;</span></div><div class="line"><a name="l05566"></a><span class="lineno"> 5566</span>&#160;  });</div><div class="line"><a name="l05567"></a><span class="lineno"> 5567</span>&#160;  var ClassName = {</div><div class="line"><a name="l05568"></a><span class="lineno"> 5568</span>&#160;    FADE: <span class="stringliteral">&#39;fade&#39;</span>,</div><div class="line"><a name="l05569"></a><span class="lineno"> 5569</span>&#160;    SHOW: <span class="stringliteral">&#39;show&#39;</span></div><div class="line"><a name="l05570"></a><span class="lineno"> 5570</span>&#160;  };</div><div class="line"><a name="l05571"></a><span class="lineno"> 5571</span>&#160;  var Selector = {</div><div class="line"><a name="l05572"></a><span class="lineno"> 5572</span>&#160;    TITLE: <span class="stringliteral">&#39;.popover-header&#39;</span>,</div><div class="line"><a name="l05573"></a><span class="lineno"> 5573</span>&#160;    CONTENT: <span class="stringliteral">&#39;.popover-body&#39;</span></div><div class="line"><a name="l05574"></a><span class="lineno"> 5574</span>&#160;  };</div><div class="line"><a name="l05575"></a><span class="lineno"> 5575</span>&#160;  var Event = {</div><div class="line"><a name="l05576"></a><span class="lineno"> 5576</span>&#160;    HIDE: <span class="stringliteral">&quot;hide&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l05577"></a><span class="lineno"> 5577</span>&#160;    HIDDEN: <span class="stringliteral">&quot;hidden&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l05578"></a><span class="lineno"> 5578</span>&#160;    SHOW: <span class="stringliteral">&quot;show&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l05579"></a><span class="lineno"> 5579</span>&#160;    SHOWN: <span class="stringliteral">&quot;shown&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l05580"></a><span class="lineno"> 5580</span>&#160;    INSERTED: <span class="stringliteral">&quot;inserted&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l05581"></a><span class="lineno"> 5581</span>&#160;    CLICK: <span class="stringliteral">&quot;click&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l05582"></a><span class="lineno"> 5582</span>&#160;    FOCUSIN: <span class="stringliteral">&quot;focusin&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l05583"></a><span class="lineno"> 5583</span>&#160;    FOCUSOUT: <span class="stringliteral">&quot;focusout&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l05584"></a><span class="lineno"> 5584</span>&#160;    MOUSEENTER: <span class="stringliteral">&quot;mouseenter&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l05585"></a><span class="lineno"> 5585</span>&#160;    MOUSELEAVE: <span class="stringliteral">&quot;mouseleave&quot;</span> + EVENT_KEY</div><div class="line"><a name="l05592"></a><span class="lineno"> 5592</span>&#160;  };</div><div class="line"><a name="l05593"></a><span class="lineno"> 5593</span>&#160;</div><div class="line"><a name="l05594"></a><span class="lineno"> 5594</span>&#160;  var Popover =</div><div class="line"><a name="l05595"></a><span class="lineno"> 5595</span>&#160;  <span class="comment">/*#__PURE__*/</span></div><div class="line"><a name="l05596"></a><span class="lineno"> 5596</span>&#160;  <span class="keyword">function</span> (_Tooltip) {</div><div class="line"><a name="l05597"></a><span class="lineno"> 5597</span>&#160;    <a class="code" href="../../d4/d51/a00017.php#a27737cea0ea011c8416e8a57922ded98">_inheritsLoose</a>(Popover, _Tooltip);</div><div class="line"><a name="l05598"></a><span class="lineno"> 5598</span>&#160;</div><div class="line"><a name="l05599"></a><span class="lineno"> 5599</span>&#160;    <span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#a2bf106dab0efd524a9e3f21400c0005e">Popover</a>() {</div><div class="line"><a name="l05600"></a><span class="lineno"> 5600</span>&#160;      <span class="keywordflow">return</span> _Tooltip.apply(<span class="keyword">this</span>, arguments) || <span class="keyword">this</span>;</div><div class="line"><a name="l05601"></a><span class="lineno"> 5601</span>&#160;    }</div><div class="line"><a name="l05602"></a><span class="lineno"> 5602</span>&#160;</div><div class="line"><a name="l05603"></a><span class="lineno"> 5603</span>&#160;    var _proto = Popover.prototype;</div><div class="line"><a name="l05604"></a><span class="lineno"> 5604</span>&#160;</div><div class="line"><a name="l05605"></a><span class="lineno"> 5605</span>&#160;    <span class="comment">// Overrides</span></div><div class="line"><a name="l05606"></a><span class="lineno"> 5606</span>&#160;    _proto.isWithContent = <span class="keyword">function</span> isWithContent() {</div><div class="line"><a name="l05607"></a><span class="lineno"> 5607</span>&#160;      <span class="keywordflow">return</span> this.getTitle() || this._getContent();</div><div class="line"><a name="l05608"></a><span class="lineno"> 5608</span>&#160;    };</div><div class="line"><a name="l05609"></a><span class="lineno"> 5609</span>&#160;</div><div class="line"><a name="l05610"></a><span class="lineno"> 5610</span>&#160;    _proto.addAttachmentClass = <span class="keyword">function</span> addAttachmentClass(attachment) {</div><div class="line"><a name="l05611"></a><span class="lineno"> 5611</span>&#160;      $$$1(this.getTipElement()).addClass(CLASS_PREFIX + <span class="stringliteral">&quot;-&quot;</span> + attachment);</div><div class="line"><a name="l05612"></a><span class="lineno"> 5612</span>&#160;    };</div><div class="line"><a name="l05613"></a><span class="lineno"> 5613</span>&#160;</div><div class="line"><a name="l05614"></a><span class="lineno"> 5614</span>&#160;    _proto.getTipElement = <span class="keyword">function</span> getTipElement() {</div><div class="line"><a name="l05615"></a><span class="lineno"> 5615</span>&#160;      this.tip = this.tip || $$$1(this.config.template)[0];</div><div class="line"><a name="l05616"></a><span class="lineno"> 5616</span>&#160;      <span class="keywordflow">return</span> this.tip;</div><div class="line"><a name="l05617"></a><span class="lineno"> 5617</span>&#160;    };</div><div class="line"><a name="l05618"></a><span class="lineno"> 5618</span>&#160;</div><div class="line"><a name="l05619"></a><span class="lineno"> 5619</span>&#160;    _proto.setContent = <span class="keyword">function</span> setContent() {</div><div class="line"><a name="l05620"></a><span class="lineno"> 5620</span>&#160;      var $tip = $$$1(this.getTipElement()); <span class="comment">// We use append for html objects to maintain js events</span></div><div class="line"><a name="l05621"></a><span class="lineno"> 5621</span>&#160;</div><div class="line"><a name="l05622"></a><span class="lineno"> 5622</span>&#160;      this.setElementContent($tip.find(Selector.TITLE), this.getTitle());</div><div class="line"><a name="l05623"></a><span class="lineno"> 5623</span>&#160;</div><div class="line"><a name="l05624"></a><span class="lineno"> 5624</span>&#160;      var content = this._getContent();</div><div class="line"><a name="l05625"></a><span class="lineno"> 5625</span>&#160;</div><div class="line"><a name="l05626"></a><span class="lineno"> 5626</span>&#160;      <span class="keywordflow">if</span> (typeof content === <span class="stringliteral">&#39;function&#39;</span>) {</div><div class="line"><a name="l05627"></a><span class="lineno"> 5627</span>&#160;        content = content.call(this.element);</div><div class="line"><a name="l05628"></a><span class="lineno"> 5628</span>&#160;      }</div><div class="line"><a name="l05629"></a><span class="lineno"> 5629</span>&#160;</div><div class="line"><a name="l05630"></a><span class="lineno"> 5630</span>&#160;      this.setElementContent($tip.find(Selector.CONTENT), content);</div><div class="line"><a name="l05631"></a><span class="lineno"> 5631</span>&#160;      $tip.removeClass(ClassName.FADE + <span class="stringliteral">&quot; &quot;</span> + ClassName.SHOW);</div><div class="line"><a name="l05632"></a><span class="lineno"> 5632</span>&#160;    }; <span class="comment">// Private</span></div><div class="line"><a name="l05633"></a><span class="lineno"> 5633</span>&#160;</div><div class="line"><a name="l05634"></a><span class="lineno"> 5634</span>&#160;</div><div class="line"><a name="l05635"></a><span class="lineno"> 5635</span>&#160;    _proto._getContent = <span class="keyword">function</span> _getContent() {</div><div class="line"><a name="l05636"></a><span class="lineno"> 5636</span>&#160;      <span class="keywordflow">return</span> this.element.getAttribute(<span class="stringliteral">&#39;data-content&#39;</span>) || this.config.content;</div><div class="line"><a name="l05637"></a><span class="lineno"> 5637</span>&#160;    };</div><div class="line"><a name="l05638"></a><span class="lineno"> 5638</span>&#160;</div><div class="line"><a name="l05639"></a><span class="lineno"> 5639</span>&#160;    _proto._cleanTipClass = <span class="keyword">function</span> _cleanTipClass() {</div><div class="line"><a name="l05640"></a><span class="lineno"> 5640</span>&#160;      var $tip = $$$1(this.getTipElement());</div><div class="line"><a name="l05641"></a><span class="lineno"> 5641</span>&#160;      var tabClass = $tip.attr(<span class="stringliteral">&#39;class&#39;</span>).match(BSCLS_PREFIX_REGEX);</div><div class="line"><a name="l05642"></a><span class="lineno"> 5642</span>&#160;</div><div class="line"><a name="l05643"></a><span class="lineno"> 5643</span>&#160;      <span class="keywordflow">if</span> (tabClass !== null &amp;&amp; tabClass.length &gt; 0) {</div><div class="line"><a name="l05644"></a><span class="lineno"> 5644</span>&#160;        $tip.removeClass(tabClass.join(<span class="stringliteral">&#39;&#39;</span>));</div><div class="line"><a name="l05645"></a><span class="lineno"> 5645</span>&#160;      }</div><div class="line"><a name="l05646"></a><span class="lineno"> 5646</span>&#160;    }; <span class="comment">// Static</span></div><div class="line"><a name="l05647"></a><span class="lineno"> 5647</span>&#160;</div><div class="line"><a name="l05648"></a><span class="lineno"> 5648</span>&#160;</div><div class="line"><a name="l05649"></a><span class="lineno"> 5649</span>&#160;    Popover._jQueryInterface = <span class="keyword">function</span> _jQueryInterface(config) {</div><div class="line"><a name="l05650"></a><span class="lineno"> 5650</span>&#160;      <span class="keywordflow">return</span> this.<a class="code" href="../../d3/dea/a00046.php#a877963eb3bdbe10cffb2337a091a7ff1">each</a>(<span class="keyword">function</span> () {</div><div class="line"><a name="l05651"></a><span class="lineno"> 5651</span>&#160;        var <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a> = $$$1(<span class="keyword">this</span>).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(DATA_KEY);</div><div class="line"><a name="l05652"></a><span class="lineno"> 5652</span>&#160;</div><div class="line"><a name="l05653"></a><span class="lineno"> 5653</span>&#160;        var _config = typeof config === <span class="stringliteral">&#39;object&#39;</span> ? config : null;</div><div class="line"><a name="l05654"></a><span class="lineno"> 5654</span>&#160;</div><div class="line"><a name="l05655"></a><span class="lineno"> 5655</span>&#160;        <span class="keywordflow">if</span> (!data &amp;&amp; /destroy|hide/.test(config)) {</div><div class="line"><a name="l05656"></a><span class="lineno"> 5656</span>&#160;          <span class="keywordflow">return</span>;</div><div class="line"><a name="l05657"></a><span class="lineno"> 5657</span>&#160;        }</div><div class="line"><a name="l05658"></a><span class="lineno"> 5658</span>&#160;</div><div class="line"><a name="l05659"></a><span class="lineno"> 5659</span>&#160;        <span class="keywordflow">if</span> (!data) {</div><div class="line"><a name="l05660"></a><span class="lineno"> 5660</span>&#160;          data = <span class="keyword">new</span> <a class="code" href="../../d4/d51/a00017.php#a2bf106dab0efd524a9e3f21400c0005e">Popover</a>(<span class="keyword">this</span>, _config);</div><div class="line"><a name="l05661"></a><span class="lineno"> 5661</span>&#160;          $$$1(<span class="keyword">this</span>).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(DATA_KEY, data);</div><div class="line"><a name="l05662"></a><span class="lineno"> 5662</span>&#160;        }</div><div class="line"><a name="l05663"></a><span class="lineno"> 5663</span>&#160;</div><div class="line"><a name="l05664"></a><span class="lineno"> 5664</span>&#160;        <span class="keywordflow">if</span> (typeof config === <span class="stringliteral">&#39;string&#39;</span>) {</div><div class="line"><a name="l05665"></a><span class="lineno"> 5665</span>&#160;          <span class="keywordflow">if</span> (typeof data[config] === <span class="stringliteral">&#39;undefined&#39;</span>) {</div><div class="line"><a name="l05666"></a><span class="lineno"> 5666</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> TypeError(<span class="stringliteral">&quot;No method named \&quot;&quot;</span> + config + <span class="stringliteral">&quot;\&quot;&quot;</span>);</div><div class="line"><a name="l05667"></a><span class="lineno"> 5667</span>&#160;          }</div><div class="line"><a name="l05668"></a><span class="lineno"> 5668</span>&#160;</div><div class="line"><a name="l05669"></a><span class="lineno"> 5669</span>&#160;          data[config]();</div><div class="line"><a name="l05670"></a><span class="lineno"> 5670</span>&#160;        }</div><div class="line"><a name="l05671"></a><span class="lineno"> 5671</span>&#160;      });</div><div class="line"><a name="l05672"></a><span class="lineno"> 5672</span>&#160;    };</div><div class="line"><a name="l05673"></a><span class="lineno"> 5673</span>&#160;</div><div class="line"><a name="l05674"></a><span class="lineno"> 5674</span>&#160;    <a class="code" href="../../d4/d51/a00017.php#a39e10dc3069b4a23aa52bea0bec60e36">_createClass</a>(Popover, null, [{</div><div class="line"><a name="l05675"></a><span class="lineno"> 5675</span>&#160;      key: <span class="stringliteral">&quot;VERSION&quot;</span>,</div><div class="line"><a name="l05676"></a><span class="lineno"> 5676</span>&#160;      <span class="comment">// Getters</span></div><div class="line"><a name="l05677"></a><span class="lineno"> 5677</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l05678"></a><span class="lineno"> 5678</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../db/db2/a00020.php#a3635f2df5844f69204b70bf7b3983587">VERSION</a>;</div><div class="line"><a name="l05679"></a><span class="lineno"> 5679</span>&#160;      }</div><div class="line"><a name="l05680"></a><span class="lineno"> 5680</span>&#160;    }, {</div><div class="line"><a name="l05681"></a><span class="lineno"> 5681</span>&#160;      key: <span class="stringliteral">&quot;Default&quot;</span>,</div><div class="line"><a name="l05682"></a><span class="lineno"> 5682</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l05683"></a><span class="lineno"> 5683</span>&#160;        <span class="keywordflow">return</span> Default;</div><div class="line"><a name="l05684"></a><span class="lineno"> 5684</span>&#160;      }</div><div class="line"><a name="l05685"></a><span class="lineno"> 5685</span>&#160;    }, {</div><div class="line"><a name="l05686"></a><span class="lineno"> 5686</span>&#160;      key: <span class="stringliteral">&quot;NAME&quot;</span>,</div><div class="line"><a name="l05687"></a><span class="lineno"> 5687</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l05688"></a><span class="lineno"> 5688</span>&#160;        <span class="keywordflow">return</span> NAME;</div><div class="line"><a name="l05689"></a><span class="lineno"> 5689</span>&#160;      }</div><div class="line"><a name="l05690"></a><span class="lineno"> 5690</span>&#160;    }, {</div><div class="line"><a name="l05691"></a><span class="lineno"> 5691</span>&#160;      key: <span class="stringliteral">&quot;DATA_KEY&quot;</span>,</div><div class="line"><a name="l05692"></a><span class="lineno"> 5692</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l05693"></a><span class="lineno"> 5693</span>&#160;        <span class="keywordflow">return</span> DATA_KEY;</div><div class="line"><a name="l05694"></a><span class="lineno"> 5694</span>&#160;      }</div><div class="line"><a name="l05695"></a><span class="lineno"> 5695</span>&#160;    }, {</div><div class="line"><a name="l05696"></a><span class="lineno"> 5696</span>&#160;      key: <span class="stringliteral">&quot;Event&quot;</span>,</div><div class="line"><a name="l05697"></a><span class="lineno"> 5697</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l05698"></a><span class="lineno"> 5698</span>&#160;        <span class="keywordflow">return</span> Event;</div><div class="line"><a name="l05699"></a><span class="lineno"> 5699</span>&#160;      }</div><div class="line"><a name="l05700"></a><span class="lineno"> 5700</span>&#160;    }, {</div><div class="line"><a name="l05701"></a><span class="lineno"> 5701</span>&#160;      key: <span class="stringliteral">&quot;EVENT_KEY&quot;</span>,</div><div class="line"><a name="l05702"></a><span class="lineno"> 5702</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l05703"></a><span class="lineno"> 5703</span>&#160;        <span class="keywordflow">return</span> EVENT_KEY;</div><div class="line"><a name="l05704"></a><span class="lineno"> 5704</span>&#160;      }</div><div class="line"><a name="l05705"></a><span class="lineno"> 5705</span>&#160;    }, {</div><div class="line"><a name="l05706"></a><span class="lineno"> 5706</span>&#160;      key: <span class="stringliteral">&quot;DefaultType&quot;</span>,</div><div class="line"><a name="l05707"></a><span class="lineno"> 5707</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l05708"></a><span class="lineno"> 5708</span>&#160;        <span class="keywordflow">return</span> DefaultType;</div><div class="line"><a name="l05709"></a><span class="lineno"> 5709</span>&#160;      }</div><div class="line"><a name="l05710"></a><span class="lineno"> 5710</span>&#160;    }]);</div><div class="line"><a name="l05711"></a><span class="lineno"> 5711</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#a2bf106dab0efd524a9e3f21400c0005e">Popover</a>;</div><div class="line"><a name="l05712"></a><span class="lineno"> 5712</span>&#160;  }(<a class="code" href="../../d4/d51/a00017.php#a8bc91fbc10ac1566135a747b9c84dd3d">Tooltip</a>);</div><div class="line"><a name="l05720"></a><span class="lineno"> 5720</span>&#160;  $$$1.fn[NAME] = Popover._jQueryInterface;</div><div class="line"><a name="l05721"></a><span class="lineno"> 5721</span>&#160;  $$$1.fn[NAME].Constructor = <a class="code" href="../../d4/d51/a00017.php#a2bf106dab0efd524a9e3f21400c0005e">Popover</a>;</div><div class="line"><a name="l05722"></a><span class="lineno"> 5722</span>&#160;</div><div class="line"><a name="l05723"></a><span class="lineno"> 5723</span>&#160;  $$$1.fn[NAME].noConflict = <span class="keyword">function</span> () {</div><div class="line"><a name="l05724"></a><span class="lineno"> 5724</span>&#160;    $$$1.fn[NAME] = JQUERY_NO_CONFLICT;</div><div class="line"><a name="l05725"></a><span class="lineno"> 5725</span>&#160;    <span class="keywordflow">return</span> Popover._jQueryInterface;</div><div class="line"><a name="l05726"></a><span class="lineno"> 5726</span>&#160;  };</div><div class="line"><a name="l05727"></a><span class="lineno"> 5727</span>&#160;</div><div class="line"><a name="l05728"></a><span class="lineno"> 5728</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#a2bf106dab0efd524a9e3f21400c0005e">Popover</a>;</div><div class="line"><a name="l05729"></a><span class="lineno"> 5729</span>&#160;}($);</div><div class="line"><a name="l05730"></a><span class="lineno"> 5730</span>&#160;</div><div class="line"><a name="l05738"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a7da938810984f5d9d2a251c9d9bdb46d"> 5738</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#a7da938810984f5d9d2a251c9d9bdb46d">ScrollSpy</a> = <span class="keyword">function</span> ($$$1) {</div><div class="line"><a name="l05744"></a><span class="lineno"> 5744</span>&#160;  var NAME = <span class="stringliteral">&#39;scrollspy&#39;</span>;</div><div class="line"><a name="l05745"></a><span class="lineno"> 5745</span>&#160;  var <a class="code" href="../../db/db2/a00020.php#a3635f2df5844f69204b70bf7b3983587">VERSION</a> = <span class="stringliteral">&#39;4.0.0&#39;</span>;</div><div class="line"><a name="l05746"></a><span class="lineno"> 5746</span>&#160;  var DATA_KEY = <span class="stringliteral">&#39;bs.scrollspy&#39;</span>;</div><div class="line"><a name="l05747"></a><span class="lineno"> 5747</span>&#160;  var EVENT_KEY = <span class="stringliteral">&quot;.&quot;</span> + DATA_KEY;</div><div class="line"><a name="l05748"></a><span class="lineno"> 5748</span>&#160;  var DATA_API_KEY = <span class="stringliteral">&#39;.data-api&#39;</span>;</div><div class="line"><a name="l05749"></a><span class="lineno"> 5749</span>&#160;  var JQUERY_NO_CONFLICT = $$$1.fn[NAME];</div><div class="line"><a name="l05750"></a><span class="lineno"> 5750</span>&#160;  var Default = {</div><div class="line"><a name="l05751"></a><span class="lineno"> 5751</span>&#160;    offset: 10,</div><div class="line"><a name="l05752"></a><span class="lineno"> 5752</span>&#160;    method: <span class="stringliteral">&#39;auto&#39;</span>,</div><div class="line"><a name="l05753"></a><span class="lineno"> 5753</span>&#160;    target: <span class="stringliteral">&#39;&#39;</span></div><div class="line"><a name="l05754"></a><span class="lineno"> 5754</span>&#160;  };</div><div class="line"><a name="l05755"></a><span class="lineno"> 5755</span>&#160;  var DefaultType = {</div><div class="line"><a name="l05756"></a><span class="lineno"> 5756</span>&#160;    offset: <span class="stringliteral">&#39;number&#39;</span>,</div><div class="line"><a name="l05757"></a><span class="lineno"> 5757</span>&#160;    method: <span class="stringliteral">&#39;string&#39;</span>,</div><div class="line"><a name="l05758"></a><span class="lineno"> 5758</span>&#160;    target: <span class="stringliteral">&#39;(string|element)&#39;</span></div><div class="line"><a name="l05759"></a><span class="lineno"> 5759</span>&#160;  };</div><div class="line"><a name="l05760"></a><span class="lineno"> 5760</span>&#160;  var Event = {</div><div class="line"><a name="l05761"></a><span class="lineno"> 5761</span>&#160;    ACTIVATE: <span class="stringliteral">&quot;activate&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l05762"></a><span class="lineno"> 5762</span>&#160;    SCROLL: <span class="stringliteral">&quot;scroll&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l05763"></a><span class="lineno"> 5763</span>&#160;    LOAD_DATA_API: <span class="stringliteral">&quot;load&quot;</span> + EVENT_KEY + DATA_API_KEY</div><div class="line"><a name="l05764"></a><span class="lineno"> 5764</span>&#160;  };</div><div class="line"><a name="l05765"></a><span class="lineno"> 5765</span>&#160;  var ClassName = {</div><div class="line"><a name="l05766"></a><span class="lineno"> 5766</span>&#160;    DROPDOWN_ITEM: <span class="stringliteral">&#39;dropdown-item&#39;</span>,</div><div class="line"><a name="l05767"></a><span class="lineno"> 5767</span>&#160;    DROPDOWN_MENU: <span class="stringliteral">&#39;dropdown-menu&#39;</span>,</div><div class="line"><a name="l05768"></a><span class="lineno"> 5768</span>&#160;    ACTIVE: <span class="stringliteral">&#39;active&#39;</span></div><div class="line"><a name="l05769"></a><span class="lineno"> 5769</span>&#160;  };</div><div class="line"><a name="l05770"></a><span class="lineno"> 5770</span>&#160;  var Selector = {</div><div class="line"><a name="l05771"></a><span class="lineno"> 5771</span>&#160;    DATA_SPY: <span class="stringliteral">&#39;[data-spy=&quot;scroll&quot;]&#39;</span>,</div><div class="line"><a name="l05772"></a><span class="lineno"> 5772</span>&#160;    ACTIVE: <span class="stringliteral">&#39;.active&#39;</span>,</div><div class="line"><a name="l05773"></a><span class="lineno"> 5773</span>&#160;    NAV_LIST_GROUP: <span class="stringliteral">&#39;.nav, .list-group&#39;</span>,</div><div class="line"><a name="l05774"></a><span class="lineno"> 5774</span>&#160;    NAV_LINKS: <span class="stringliteral">&#39;.nav-link&#39;</span>,</div><div class="line"><a name="l05775"></a><span class="lineno"> 5775</span>&#160;    NAV_ITEMS: <span class="stringliteral">&#39;.nav-item&#39;</span>,</div><div class="line"><a name="l05776"></a><span class="lineno"> 5776</span>&#160;    LIST_ITEMS: <span class="stringliteral">&#39;.list-group-item&#39;</span>,</div><div class="line"><a name="l05777"></a><span class="lineno"> 5777</span>&#160;    DROPDOWN: <span class="stringliteral">&#39;.dropdown&#39;</span>,</div><div class="line"><a name="l05778"></a><span class="lineno"> 5778</span>&#160;    DROPDOWN_ITEMS: <span class="stringliteral">&#39;.dropdown-item&#39;</span>,</div><div class="line"><a name="l05779"></a><span class="lineno"> 5779</span>&#160;    DROPDOWN_TOGGLE: <span class="stringliteral">&#39;.dropdown-toggle&#39;</span></div><div class="line"><a name="l05780"></a><span class="lineno"> 5780</span>&#160;  };</div><div class="line"><a name="l05781"></a><span class="lineno"> 5781</span>&#160;  var OffsetMethod = {</div><div class="line"><a name="l05782"></a><span class="lineno"> 5782</span>&#160;    OFFSET: <span class="stringliteral">&#39;offset&#39;</span>,</div><div class="line"><a name="l05783"></a><span class="lineno"> 5783</span>&#160;    POSITION: <span class="stringliteral">&#39;position&#39;</span></div><div class="line"><a name="l05790"></a><span class="lineno"> 5790</span>&#160;  };</div><div class="line"><a name="l05791"></a><span class="lineno"> 5791</span>&#160;</div><div class="line"><a name="l05792"></a><span class="lineno"> 5792</span>&#160;  var ScrollSpy =</div><div class="line"><a name="l05793"></a><span class="lineno"> 5793</span>&#160;  <span class="comment">/*#__PURE__*/</span></div><div class="line"><a name="l05794"></a><span class="lineno"> 5794</span>&#160;  <span class="keyword">function</span> () {</div><div class="line"><a name="l05795"></a><span class="lineno"> 5795</span>&#160;    <span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#a7da938810984f5d9d2a251c9d9bdb46d">ScrollSpy</a>(element, config) {</div><div class="line"><a name="l05796"></a><span class="lineno"> 5796</span>&#160;      var _this = <span class="keyword">this</span>;</div><div class="line"><a name="l05797"></a><span class="lineno"> 5797</span>&#160;</div><div class="line"><a name="l05798"></a><span class="lineno"> 5798</span>&#160;      this._element = element;</div><div class="line"><a name="l05799"></a><span class="lineno"> 5799</span>&#160;      this._scrollElement = element.tagName === <span class="stringliteral">&#39;BODY&#39;</span> ? window : element;</div><div class="line"><a name="l05800"></a><span class="lineno"> 5800</span>&#160;      this._config = this._getConfig(config);</div><div class="line"><a name="l05801"></a><span class="lineno"> 5801</span>&#160;      this._selector = this._config.target + <span class="stringliteral">&quot; &quot;</span> + Selector.NAV_LINKS + <span class="stringliteral">&quot;,&quot;</span> + (this._config.target + <span class="stringliteral">&quot; &quot;</span> + Selector.LIST_ITEMS + <span class="stringliteral">&quot;,&quot;</span>) + (this._config.target + <span class="stringliteral">&quot; &quot;</span> + Selector.DROPDOWN_ITEMS);</div><div class="line"><a name="l05802"></a><span class="lineno"> 5802</span>&#160;      this._offsets = [];</div><div class="line"><a name="l05803"></a><span class="lineno"> 5803</span>&#160;      this._targets = [];</div><div class="line"><a name="l05804"></a><span class="lineno"> 5804</span>&#160;      this._activeTarget = null;</div><div class="line"><a name="l05805"></a><span class="lineno"> 5805</span>&#160;      this._scrollHeight = 0;</div><div class="line"><a name="l05806"></a><span class="lineno"> 5806</span>&#160;      $$$1(this._scrollElement).on(Event.SCROLL, function (event) {</div><div class="line"><a name="l05807"></a><span class="lineno"> 5807</span>&#160;        <span class="keywordflow">return</span> _this._process(event);</div><div class="line"><a name="l05808"></a><span class="lineno"> 5808</span>&#160;      });</div><div class="line"><a name="l05809"></a><span class="lineno"> 5809</span>&#160;      this.refresh();</div><div class="line"><a name="l05810"></a><span class="lineno"> 5810</span>&#160;</div><div class="line"><a name="l05811"></a><span class="lineno"> 5811</span>&#160;      this._process();</div><div class="line"><a name="l05812"></a><span class="lineno"> 5812</span>&#160;    } <span class="comment">// Getters</span></div><div class="line"><a name="l05813"></a><span class="lineno"> 5813</span>&#160;</div><div class="line"><a name="l05814"></a><span class="lineno"> 5814</span>&#160;</div><div class="line"><a name="l05815"></a><span class="lineno"> 5815</span>&#160;    var _proto = ScrollSpy.prototype;</div><div class="line"><a name="l05816"></a><span class="lineno"> 5816</span>&#160;</div><div class="line"><a name="l05817"></a><span class="lineno"> 5817</span>&#160;    <span class="comment">// Public</span></div><div class="line"><a name="l05818"></a><span class="lineno"> 5818</span>&#160;    _proto.refresh = <span class="keyword">function</span> refresh() {</div><div class="line"><a name="l05819"></a><span class="lineno"> 5819</span>&#160;      var _this2 = <span class="keyword">this</span>;</div><div class="line"><a name="l05820"></a><span class="lineno"> 5820</span>&#160;</div><div class="line"><a name="l05821"></a><span class="lineno"> 5821</span>&#160;      var autoMethod = this._scrollElement === this._scrollElement.window ? OffsetMethod.OFFSET : OffsetMethod.POSITION;</div><div class="line"><a name="l05822"></a><span class="lineno"> 5822</span>&#160;      var offsetMethod = this._config.method === <span class="stringliteral">&#39;auto&#39;</span> ? autoMethod : this._config.method;</div><div class="line"><a name="l05823"></a><span class="lineno"> 5823</span>&#160;      var offsetBase = offsetMethod === OffsetMethod.POSITION ? this._getScrollTop() : 0;</div><div class="line"><a name="l05824"></a><span class="lineno"> 5824</span>&#160;      this._offsets = [];</div><div class="line"><a name="l05825"></a><span class="lineno"> 5825</span>&#160;      this._targets = [];</div><div class="line"><a name="l05826"></a><span class="lineno"> 5826</span>&#160;      this._scrollHeight = this._getScrollHeight();</div><div class="line"><a name="l05827"></a><span class="lineno"> 5827</span>&#160;      var targets = $$$1.makeArray($$$1(this._selector));</div><div class="line"><a name="l05828"></a><span class="lineno"> 5828</span>&#160;      targets.map(<span class="keyword">function</span> (element) {</div><div class="line"><a name="l05829"></a><span class="lineno"> 5829</span>&#160;        var target;</div><div class="line"><a name="l05830"></a><span class="lineno"> 5830</span>&#160;        var targetSelector = Util.getSelectorFromElement(element);</div><div class="line"><a name="l05831"></a><span class="lineno"> 5831</span>&#160;</div><div class="line"><a name="l05832"></a><span class="lineno"> 5832</span>&#160;        <span class="keywordflow">if</span> (targetSelector) {</div><div class="line"><a name="l05833"></a><span class="lineno"> 5833</span>&#160;          target = $$$1(targetSelector)[0];</div><div class="line"><a name="l05834"></a><span class="lineno"> 5834</span>&#160;        }</div><div class="line"><a name="l05835"></a><span class="lineno"> 5835</span>&#160;</div><div class="line"><a name="l05836"></a><span class="lineno"> 5836</span>&#160;        <span class="keywordflow">if</span> (target) {</div><div class="line"><a name="l05837"></a><span class="lineno"> 5837</span>&#160;          var targetBCR = target.getBoundingClientRect();</div><div class="line"><a name="l05838"></a><span class="lineno"> 5838</span>&#160;</div><div class="line"><a name="l05839"></a><span class="lineno"> 5839</span>&#160;          <span class="keywordflow">if</span> (targetBCR.width || targetBCR.height) {</div><div class="line"><a name="l05840"></a><span class="lineno"> 5840</span>&#160;            <span class="comment">// TODO (fat): remove sketch reliance on jQuery position/offset</span></div><div class="line"><a name="l05841"></a><span class="lineno"> 5841</span>&#160;            <span class="keywordflow">return</span> [$$$1(target)[offsetMethod]().top + offsetBase, targetSelector];</div><div class="line"><a name="l05842"></a><span class="lineno"> 5842</span>&#160;          }</div><div class="line"><a name="l05843"></a><span class="lineno"> 5843</span>&#160;        }</div><div class="line"><a name="l05844"></a><span class="lineno"> 5844</span>&#160;</div><div class="line"><a name="l05845"></a><span class="lineno"> 5845</span>&#160;        <span class="keywordflow">return</span> null;</div><div class="line"><a name="l05846"></a><span class="lineno"> 5846</span>&#160;      }).filter(<span class="keyword">function</span> (item) {</div><div class="line"><a name="l05847"></a><span class="lineno"> 5847</span>&#160;        <span class="keywordflow">return</span> item;</div><div class="line"><a name="l05848"></a><span class="lineno"> 5848</span>&#160;      }).sort(<span class="keyword">function</span> (<a class="code" href="../../db/db2/a00020.php#ae8f6b400ed3390908c5cdeebed3a82b9">a</a>, <a class="code" href="../../db/db2/a00020.php#ac0431efac4d7c393d1e70b86115cb93f">b</a>) {</div><div class="line"><a name="l05849"></a><span class="lineno"> 5849</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../db/db2/a00020.php#ae8f6b400ed3390908c5cdeebed3a82b9">a</a>[0] - <a class="code" href="../../db/db2/a00020.php#ac0431efac4d7c393d1e70b86115cb93f">b</a>[0];</div><div class="line"><a name="l05850"></a><span class="lineno"> 5850</span>&#160;      }).forEach(<span class="keyword">function</span> (item) {</div><div class="line"><a name="l05851"></a><span class="lineno"> 5851</span>&#160;        _this2._offsets.push(item[0]);</div><div class="line"><a name="l05852"></a><span class="lineno"> 5852</span>&#160;</div><div class="line"><a name="l05853"></a><span class="lineno"> 5853</span>&#160;        _this2._targets.push(item[1]);</div><div class="line"><a name="l05854"></a><span class="lineno"> 5854</span>&#160;      });</div><div class="line"><a name="l05855"></a><span class="lineno"> 5855</span>&#160;    };</div><div class="line"><a name="l05856"></a><span class="lineno"> 5856</span>&#160;</div><div class="line"><a name="l05857"></a><span class="lineno"> 5857</span>&#160;    _proto.dispose = <span class="keyword">function</span> dispose() {</div><div class="line"><a name="l05858"></a><span class="lineno"> 5858</span>&#160;      $$$1.removeData(this._element, DATA_KEY);</div><div class="line"><a name="l05859"></a><span class="lineno"> 5859</span>&#160;      $$$1(this._scrollElement).off(EVENT_KEY);</div><div class="line"><a name="l05860"></a><span class="lineno"> 5860</span>&#160;      this._element = null;</div><div class="line"><a name="l05861"></a><span class="lineno"> 5861</span>&#160;      this._scrollElement = null;</div><div class="line"><a name="l05862"></a><span class="lineno"> 5862</span>&#160;      this._config = null;</div><div class="line"><a name="l05863"></a><span class="lineno"> 5863</span>&#160;      this._selector = null;</div><div class="line"><a name="l05864"></a><span class="lineno"> 5864</span>&#160;      this._offsets = null;</div><div class="line"><a name="l05865"></a><span class="lineno"> 5865</span>&#160;      this._targets = null;</div><div class="line"><a name="l05866"></a><span class="lineno"> 5866</span>&#160;      this._activeTarget = null;</div><div class="line"><a name="l05867"></a><span class="lineno"> 5867</span>&#160;      this._scrollHeight = null;</div><div class="line"><a name="l05868"></a><span class="lineno"> 5868</span>&#160;    }; <span class="comment">// Private</span></div><div class="line"><a name="l05869"></a><span class="lineno"> 5869</span>&#160;</div><div class="line"><a name="l05870"></a><span class="lineno"> 5870</span>&#160;</div><div class="line"><a name="l05871"></a><span class="lineno"> 5871</span>&#160;    _proto._getConfig = <span class="keyword">function</span> _getConfig(config) {</div><div class="line"><a name="l05872"></a><span class="lineno"> 5872</span>&#160;      config = <a class="code" href="../../d4/d51/a00017.php#ac2eea16a19b83a9509e2f9188c0fdc0f">_extends</a>({}, Default, config);</div><div class="line"><a name="l05873"></a><span class="lineno"> 5873</span>&#160;</div><div class="line"><a name="l05874"></a><span class="lineno"> 5874</span>&#160;      <span class="keywordflow">if</span> (typeof config.target !== <span class="stringliteral">&#39;string&#39;</span>) {</div><div class="line"><a name="l05875"></a><span class="lineno"> 5875</span>&#160;        var <span class="keywordtype">id</span> = $$$1(config.target).attr(<span class="stringliteral">&#39;id&#39;</span>);</div><div class="line"><a name="l05876"></a><span class="lineno"> 5876</span>&#160;</div><div class="line"><a name="l05877"></a><span class="lineno"> 5877</span>&#160;        <span class="keywordflow">if</span> (!<span class="keywordtype">id</span>) {</div><div class="line"><a name="l05878"></a><span class="lineno"> 5878</span>&#160;          <span class="keywordtype">id</span> = Util.getUID(NAME);</div><div class="line"><a name="l05879"></a><span class="lineno"> 5879</span>&#160;          $$$1(config.target).attr(<span class="stringliteral">&#39;id&#39;</span>, <span class="keywordtype">id</span>);</div><div class="line"><a name="l05880"></a><span class="lineno"> 5880</span>&#160;        }</div><div class="line"><a name="l05881"></a><span class="lineno"> 5881</span>&#160;</div><div class="line"><a name="l05882"></a><span class="lineno"> 5882</span>&#160;        config.target = <span class="stringliteral">&quot;#&quot;</span> + id;</div><div class="line"><a name="l05883"></a><span class="lineno"> 5883</span>&#160;      }</div><div class="line"><a name="l05884"></a><span class="lineno"> 5884</span>&#160;</div><div class="line"><a name="l05885"></a><span class="lineno"> 5885</span>&#160;      Util.typeCheckConfig(NAME, config, DefaultType);</div><div class="line"><a name="l05886"></a><span class="lineno"> 5886</span>&#160;      <span class="keywordflow">return</span> config;</div><div class="line"><a name="l05887"></a><span class="lineno"> 5887</span>&#160;    };</div><div class="line"><a name="l05888"></a><span class="lineno"> 5888</span>&#160;</div><div class="line"><a name="l05889"></a><span class="lineno"> 5889</span>&#160;    _proto._getScrollTop = <span class="keyword">function</span> _getScrollTop() {</div><div class="line"><a name="l05890"></a><span class="lineno"> 5890</span>&#160;      <span class="keywordflow">return</span> this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;</div><div class="line"><a name="l05891"></a><span class="lineno"> 5891</span>&#160;    };</div><div class="line"><a name="l05892"></a><span class="lineno"> 5892</span>&#160;</div><div class="line"><a name="l05893"></a><span class="lineno"> 5893</span>&#160;    _proto._getScrollHeight = <span class="keyword">function</span> _getScrollHeight() {</div><div class="line"><a name="l05894"></a><span class="lineno"> 5894</span>&#160;      <span class="keywordflow">return</span> this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);</div><div class="line"><a name="l05895"></a><span class="lineno"> 5895</span>&#160;    };</div><div class="line"><a name="l05896"></a><span class="lineno"> 5896</span>&#160;</div><div class="line"><a name="l05897"></a><span class="lineno"> 5897</span>&#160;    _proto._getOffsetHeight = <span class="keyword">function</span> _getOffsetHeight() {</div><div class="line"><a name="l05898"></a><span class="lineno"> 5898</span>&#160;      <span class="keywordflow">return</span> this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;</div><div class="line"><a name="l05899"></a><span class="lineno"> 5899</span>&#160;    };</div><div class="line"><a name="l05900"></a><span class="lineno"> 5900</span>&#160;</div><div class="line"><a name="l05901"></a><span class="lineno"> 5901</span>&#160;    _proto._process = <span class="keyword">function</span> _process() {</div><div class="line"><a name="l05902"></a><span class="lineno"> 5902</span>&#160;      var scrollTop = this._getScrollTop() + this._config.offset;</div><div class="line"><a name="l05903"></a><span class="lineno"> 5903</span>&#160;</div><div class="line"><a name="l05904"></a><span class="lineno"> 5904</span>&#160;      var scrollHeight = this._getScrollHeight();</div><div class="line"><a name="l05905"></a><span class="lineno"> 5905</span>&#160;</div><div class="line"><a name="l05906"></a><span class="lineno"> 5906</span>&#160;      var maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();</div><div class="line"><a name="l05907"></a><span class="lineno"> 5907</span>&#160;</div><div class="line"><a name="l05908"></a><span class="lineno"> 5908</span>&#160;      <span class="keywordflow">if</span> (this._scrollHeight !== scrollHeight) {</div><div class="line"><a name="l05909"></a><span class="lineno"> 5909</span>&#160;        this.refresh();</div><div class="line"><a name="l05910"></a><span class="lineno"> 5910</span>&#160;      }</div><div class="line"><a name="l05911"></a><span class="lineno"> 5911</span>&#160;</div><div class="line"><a name="l05912"></a><span class="lineno"> 5912</span>&#160;      <span class="keywordflow">if</span> (scrollTop &gt;= maxScroll) {</div><div class="line"><a name="l05913"></a><span class="lineno"> 5913</span>&#160;        var target = this._targets[this._targets.length - 1];</div><div class="line"><a name="l05914"></a><span class="lineno"> 5914</span>&#160;</div><div class="line"><a name="l05915"></a><span class="lineno"> 5915</span>&#160;        <span class="keywordflow">if</span> (this._activeTarget !== target) {</div><div class="line"><a name="l05916"></a><span class="lineno"> 5916</span>&#160;          this._activate(target);</div><div class="line"><a name="l05917"></a><span class="lineno"> 5917</span>&#160;        }</div><div class="line"><a name="l05918"></a><span class="lineno"> 5918</span>&#160;</div><div class="line"><a name="l05919"></a><span class="lineno"> 5919</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l05920"></a><span class="lineno"> 5920</span>&#160;      }</div><div class="line"><a name="l05921"></a><span class="lineno"> 5921</span>&#160;</div><div class="line"><a name="l05922"></a><span class="lineno"> 5922</span>&#160;      <span class="keywordflow">if</span> (this._activeTarget &amp;&amp; scrollTop &lt; this._offsets[0] &amp;&amp; this._offsets[0] &gt; 0) {</div><div class="line"><a name="l05923"></a><span class="lineno"> 5923</span>&#160;        this._activeTarget = null;</div><div class="line"><a name="l05924"></a><span class="lineno"> 5924</span>&#160;</div><div class="line"><a name="l05925"></a><span class="lineno"> 5925</span>&#160;        this._clear();</div><div class="line"><a name="l05926"></a><span class="lineno"> 5926</span>&#160;</div><div class="line"><a name="l05927"></a><span class="lineno"> 5927</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l05928"></a><span class="lineno"> 5928</span>&#160;      }</div><div class="line"><a name="l05929"></a><span class="lineno"> 5929</span>&#160;</div><div class="line"><a name="l05930"></a><span class="lineno"> 5930</span>&#160;      <span class="keywordflow">for</span> (var <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a> = this._offsets.length; <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>--;) {</div><div class="line"><a name="l05931"></a><span class="lineno"> 5931</span>&#160;        var isActiveTarget = this._activeTarget !== this._targets[<a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>] &amp;&amp; scrollTop &gt;= this._offsets[<a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>] &amp;&amp; (typeof this._offsets[<a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a> + 1] === <span class="stringliteral">&#39;undefined&#39;</span> || scrollTop &lt; this._offsets[<a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a> + 1]);</div><div class="line"><a name="l05932"></a><span class="lineno"> 5932</span>&#160;</div><div class="line"><a name="l05933"></a><span class="lineno"> 5933</span>&#160;        <span class="keywordflow">if</span> (isActiveTarget) {</div><div class="line"><a name="l05934"></a><span class="lineno"> 5934</span>&#160;          this._activate(this._targets[<a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>]);</div><div class="line"><a name="l05935"></a><span class="lineno"> 5935</span>&#160;        }</div><div class="line"><a name="l05936"></a><span class="lineno"> 5936</span>&#160;      }</div><div class="line"><a name="l05937"></a><span class="lineno"> 5937</span>&#160;    };</div><div class="line"><a name="l05938"></a><span class="lineno"> 5938</span>&#160;</div><div class="line"><a name="l05939"></a><span class="lineno"> 5939</span>&#160;    _proto._activate = <span class="keyword">function</span> _activate(target) {</div><div class="line"><a name="l05940"></a><span class="lineno"> 5940</span>&#160;      this._activeTarget = target;</div><div class="line"><a name="l05941"></a><span class="lineno"> 5941</span>&#160;</div><div class="line"><a name="l05942"></a><span class="lineno"> 5942</span>&#160;      this._clear();</div><div class="line"><a name="l05943"></a><span class="lineno"> 5943</span>&#160;</div><div class="line"><a name="l05944"></a><span class="lineno"> 5944</span>&#160;      var queries = this._selector.split(<span class="charliteral">&#39;,&#39;</span>); <span class="comment">// eslint-disable-next-line arrow-body-style</span></div><div class="line"><a name="l05945"></a><span class="lineno"> 5945</span>&#160;</div><div class="line"><a name="l05946"></a><span class="lineno"> 5946</span>&#160;</div><div class="line"><a name="l05947"></a><span class="lineno"> 5947</span>&#160;      queries = queries.map(<span class="keyword">function</span> (selector) {</div><div class="line"><a name="l05948"></a><span class="lineno"> 5948</span>&#160;        <span class="keywordflow">return</span> selector + <span class="stringliteral">&quot;[data-target=\&quot;&quot;</span> + target + <span class="stringliteral">&quot;\&quot;],&quot;</span> + (selector + <span class="stringliteral">&quot;[href=\&quot;&quot;</span> + target + <span class="stringliteral">&quot;\&quot;]&quot;</span>);</div><div class="line"><a name="l05949"></a><span class="lineno"> 5949</span>&#160;      });</div><div class="line"><a name="l05950"></a><span class="lineno"> 5950</span>&#160;      var $link = $$$1(queries.join(<span class="charliteral">&#39;,&#39;</span>));</div><div class="line"><a name="l05951"></a><span class="lineno"> 5951</span>&#160;</div><div class="line"><a name="l05952"></a><span class="lineno"> 5952</span>&#160;      <span class="keywordflow">if</span> ($link.hasClass(ClassName.DROPDOWN_ITEM)) {</div><div class="line"><a name="l05953"></a><span class="lineno"> 5953</span>&#160;        $link.closest(Selector.DROPDOWN).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE);</div><div class="line"><a name="l05954"></a><span class="lineno"> 5954</span>&#160;        $link.addClass(ClassName.ACTIVE);</div><div class="line"><a name="l05955"></a><span class="lineno"> 5955</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l05956"></a><span class="lineno"> 5956</span>&#160;        <span class="comment">// Set triggered link as active</span></div><div class="line"><a name="l05957"></a><span class="lineno"> 5957</span>&#160;        $link.addClass(ClassName.ACTIVE); <span class="comment">// Set triggered links parents as active</span></div><div class="line"><a name="l05958"></a><span class="lineno"> 5958</span>&#160;        <span class="comment">// With both &lt;ul&gt; and &lt;nav&gt; markup a parent is the previous sibling of any nav ancestor</span></div><div class="line"><a name="l05959"></a><span class="lineno"> 5959</span>&#160;</div><div class="line"><a name="l05960"></a><span class="lineno"> 5960</span>&#160;        $link.parents(Selector.NAV_LIST_GROUP).prev(Selector.NAV_LINKS + <span class="stringliteral">&quot;, &quot;</span> + Selector.LIST_ITEMS).addClass(ClassName.ACTIVE); <span class="comment">// Handle special case when .nav-link is inside .nav-item</span></div><div class="line"><a name="l05961"></a><span class="lineno"> 5961</span>&#160;</div><div class="line"><a name="l05962"></a><span class="lineno"> 5962</span>&#160;        $link.parents(Selector.NAV_LIST_GROUP).prev(Selector.NAV_ITEMS).children(Selector.NAV_LINKS).addClass(ClassName.ACTIVE);</div><div class="line"><a name="l05963"></a><span class="lineno"> 5963</span>&#160;      }</div><div class="line"><a name="l05964"></a><span class="lineno"> 5964</span>&#160;</div><div class="line"><a name="l05965"></a><span class="lineno"> 5965</span>&#160;      $$$1(this._scrollElement).trigger(Event.ACTIVATE, {</div><div class="line"><a name="l05966"></a><span class="lineno"> 5966</span>&#160;        relatedTarget: target</div><div class="line"><a name="l05967"></a><span class="lineno"> 5967</span>&#160;      });</div><div class="line"><a name="l05968"></a><span class="lineno"> 5968</span>&#160;    };</div><div class="line"><a name="l05969"></a><span class="lineno"> 5969</span>&#160;</div><div class="line"><a name="l05970"></a><span class="lineno"> 5970</span>&#160;    _proto._clear = <span class="keyword">function</span> _clear() {</div><div class="line"><a name="l05971"></a><span class="lineno"> 5971</span>&#160;      $$$1(this._selector).filter(Selector.ACTIVE).removeClass(ClassName.ACTIVE);</div><div class="line"><a name="l05972"></a><span class="lineno"> 5972</span>&#160;    }; <span class="comment">// Static</span></div><div class="line"><a name="l05973"></a><span class="lineno"> 5973</span>&#160;</div><div class="line"><a name="l05974"></a><span class="lineno"> 5974</span>&#160;</div><div class="line"><a name="l05975"></a><span class="lineno"> 5975</span>&#160;    ScrollSpy._jQueryInterface = <span class="keyword">function</span> _jQueryInterface(config) {</div><div class="line"><a name="l05976"></a><span class="lineno"> 5976</span>&#160;      <span class="keywordflow">return</span> this.<a class="code" href="../../d3/dea/a00046.php#a877963eb3bdbe10cffb2337a091a7ff1">each</a>(<span class="keyword">function</span> () {</div><div class="line"><a name="l05977"></a><span class="lineno"> 5977</span>&#160;        var <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a> = $$$1(<span class="keyword">this</span>).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(DATA_KEY);</div><div class="line"><a name="l05978"></a><span class="lineno"> 5978</span>&#160;</div><div class="line"><a name="l05979"></a><span class="lineno"> 5979</span>&#160;        var _config = typeof config === <span class="stringliteral">&#39;object&#39;</span> &amp;&amp; config;</div><div class="line"><a name="l05980"></a><span class="lineno"> 5980</span>&#160;</div><div class="line"><a name="l05981"></a><span class="lineno"> 5981</span>&#160;        <span class="keywordflow">if</span> (!data) {</div><div class="line"><a name="l05982"></a><span class="lineno"> 5982</span>&#160;          data = <span class="keyword">new</span> <a class="code" href="../../d4/d51/a00017.php#a7da938810984f5d9d2a251c9d9bdb46d">ScrollSpy</a>(<span class="keyword">this</span>, _config);</div><div class="line"><a name="l05983"></a><span class="lineno"> 5983</span>&#160;          $$$1(<span class="keyword">this</span>).<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(DATA_KEY, data);</div><div class="line"><a name="l05984"></a><span class="lineno"> 5984</span>&#160;        }</div><div class="line"><a name="l05985"></a><span class="lineno"> 5985</span>&#160;</div><div class="line"><a name="l05986"></a><span class="lineno"> 5986</span>&#160;        <span class="keywordflow">if</span> (typeof config === <span class="stringliteral">&#39;string&#39;</span>) {</div><div class="line"><a name="l05987"></a><span class="lineno"> 5987</span>&#160;          <span class="keywordflow">if</span> (typeof data[config] === <span class="stringliteral">&#39;undefined&#39;</span>) {</div><div class="line"><a name="l05988"></a><span class="lineno"> 5988</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> TypeError(<span class="stringliteral">&quot;No method named \&quot;&quot;</span> + config + <span class="stringliteral">&quot;\&quot;&quot;</span>);</div><div class="line"><a name="l05989"></a><span class="lineno"> 5989</span>&#160;          }</div><div class="line"><a name="l05990"></a><span class="lineno"> 5990</span>&#160;</div><div class="line"><a name="l05991"></a><span class="lineno"> 5991</span>&#160;          data[config]();</div><div class="line"><a name="l05992"></a><span class="lineno"> 5992</span>&#160;        }</div><div class="line"><a name="l05993"></a><span class="lineno"> 5993</span>&#160;      });</div><div class="line"><a name="l05994"></a><span class="lineno"> 5994</span>&#160;    };</div><div class="line"><a name="l05995"></a><span class="lineno"> 5995</span>&#160;</div><div class="line"><a name="l05996"></a><span class="lineno"> 5996</span>&#160;    <a class="code" href="../../d4/d51/a00017.php#a39e10dc3069b4a23aa52bea0bec60e36">_createClass</a>(ScrollSpy, null, [{</div><div class="line"><a name="l05997"></a><span class="lineno"> 5997</span>&#160;      key: <span class="stringliteral">&quot;VERSION&quot;</span>,</div><div class="line"><a name="l05998"></a><span class="lineno"> 5998</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l05999"></a><span class="lineno"> 5999</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../db/db2/a00020.php#a3635f2df5844f69204b70bf7b3983587">VERSION</a>;</div><div class="line"><a name="l06000"></a><span class="lineno"> 6000</span>&#160;      }</div><div class="line"><a name="l06001"></a><span class="lineno"> 6001</span>&#160;    }, {</div><div class="line"><a name="l06002"></a><span class="lineno"> 6002</span>&#160;      key: <span class="stringliteral">&quot;Default&quot;</span>,</div><div class="line"><a name="l06003"></a><span class="lineno"> 6003</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l06004"></a><span class="lineno"> 6004</span>&#160;        <span class="keywordflow">return</span> Default;</div><div class="line"><a name="l06005"></a><span class="lineno"> 6005</span>&#160;      }</div><div class="line"><a name="l06006"></a><span class="lineno"> 6006</span>&#160;    }]);</div><div class="line"><a name="l06007"></a><span class="lineno"> 6007</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#a7da938810984f5d9d2a251c9d9bdb46d">ScrollSpy</a>;</div><div class="line"><a name="l06008"></a><span class="lineno"> 6008</span>&#160;  }();</div><div class="line"><a name="l06016"></a><span class="lineno"> 6016</span>&#160;  $$$1(window).on(Event.LOAD_DATA_API, function () {</div><div class="line"><a name="l06017"></a><span class="lineno"> 6017</span>&#160;    var scrollSpys = $$$1.makeArray($$$1(Selector.DATA_SPY));</div><div class="line"><a name="l06018"></a><span class="lineno"> 6018</span>&#160;</div><div class="line"><a name="l06019"></a><span class="lineno"> 6019</span>&#160;    <span class="keywordflow">for</span> (var <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a> = scrollSpys.length; <a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>--;) {</div><div class="line"><a name="l06020"></a><span class="lineno"> 6020</span>&#160;      var $spy = $$$1(scrollSpys[<a class="code" href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a>]);</div><div class="line"><a name="l06021"></a><span class="lineno"> 6021</span>&#160;</div><div class="line"><a name="l06022"></a><span class="lineno"> 6022</span>&#160;      ScrollSpy._jQueryInterface.call($spy, $spy.data());</div><div class="line"><a name="l06023"></a><span class="lineno"> 6023</span>&#160;    }</div><div class="line"><a name="l06024"></a><span class="lineno"> 6024</span>&#160;  });</div><div class="line"><a name="l06031"></a><span class="lineno"> 6031</span>&#160;  $$$1.fn[NAME] = ScrollSpy._jQueryInterface;</div><div class="line"><a name="l06032"></a><span class="lineno"> 6032</span>&#160;  $$$1.fn[NAME].Constructor = <a class="code" href="../../d4/d51/a00017.php#a7da938810984f5d9d2a251c9d9bdb46d">ScrollSpy</a>;</div><div class="line"><a name="l06033"></a><span class="lineno"> 6033</span>&#160;</div><div class="line"><a name="l06034"></a><span class="lineno"> 6034</span>&#160;  $$$1.fn[NAME].noConflict = <span class="keyword">function</span> () {</div><div class="line"><a name="l06035"></a><span class="lineno"> 6035</span>&#160;    $$$1.fn[NAME] = JQUERY_NO_CONFLICT;</div><div class="line"><a name="l06036"></a><span class="lineno"> 6036</span>&#160;    <span class="keywordflow">return</span> ScrollSpy._jQueryInterface;</div><div class="line"><a name="l06037"></a><span class="lineno"> 6037</span>&#160;  };</div><div class="line"><a name="l06038"></a><span class="lineno"> 6038</span>&#160;</div><div class="line"><a name="l06039"></a><span class="lineno"> 6039</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#a7da938810984f5d9d2a251c9d9bdb46d">ScrollSpy</a>;</div><div class="line"><a name="l06040"></a><span class="lineno"> 6040</span>&#160;}($);</div><div class="line"><a name="l06041"></a><span class="lineno"> 6041</span>&#160;</div><div class="line"><a name="l06049"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a1796b6dc9a42d7d6f1993786e3c5ec60"> 6049</a></span>&#160;var <a class="code" href="../../d4/d51/a00017.php#a1796b6dc9a42d7d6f1993786e3c5ec60">Tab</a> = <span class="keyword">function</span> ($$$1) {</div><div class="line"><a name="l06055"></a><span class="lineno"> 6055</span>&#160;  var NAME = <span class="stringliteral">&#39;tab&#39;</span>;</div><div class="line"><a name="l06056"></a><span class="lineno"> 6056</span>&#160;  var <a class="code" href="../../db/db2/a00020.php#a3635f2df5844f69204b70bf7b3983587">VERSION</a> = <span class="stringliteral">&#39;4.0.0&#39;</span>;</div><div class="line"><a name="l06057"></a><span class="lineno"> 6057</span>&#160;  var DATA_KEY = <span class="stringliteral">&#39;bs.tab&#39;</span>;</div><div class="line"><a name="l06058"></a><span class="lineno"> 6058</span>&#160;  var EVENT_KEY = <span class="stringliteral">&quot;.&quot;</span> + DATA_KEY;</div><div class="line"><a name="l06059"></a><span class="lineno"> 6059</span>&#160;  var DATA_API_KEY = <span class="stringliteral">&#39;.data-api&#39;</span>;</div><div class="line"><a name="l06060"></a><span class="lineno"> 6060</span>&#160;  var JQUERY_NO_CONFLICT = $$$1.fn[NAME];</div><div class="line"><a name="l06061"></a><span class="lineno"> 6061</span>&#160;  var <a class="code" href="../../db/db2/a00020.php#ae4adb159aeacba734c34bd530baf92f6">TRANSITION_DURATION</a> = 150;</div><div class="line"><a name="l06062"></a><span class="lineno"> 6062</span>&#160;  var Event = {</div><div class="line"><a name="l06063"></a><span class="lineno"> 6063</span>&#160;    HIDE: <span class="stringliteral">&quot;hide&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l06064"></a><span class="lineno"> 6064</span>&#160;    HIDDEN: <span class="stringliteral">&quot;hidden&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l06065"></a><span class="lineno"> 6065</span>&#160;    SHOW: <span class="stringliteral">&quot;show&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l06066"></a><span class="lineno"> 6066</span>&#160;    SHOWN: <span class="stringliteral">&quot;shown&quot;</span> + EVENT_KEY,</div><div class="line"><a name="l06067"></a><span class="lineno"> 6067</span>&#160;    CLICK_DATA_API: <span class="stringliteral">&quot;click&quot;</span> + EVENT_KEY + DATA_API_KEY</div><div class="line"><a name="l06068"></a><span class="lineno"> 6068</span>&#160;  };</div><div class="line"><a name="l06069"></a><span class="lineno"> 6069</span>&#160;  var ClassName = {</div><div class="line"><a name="l06070"></a><span class="lineno"> 6070</span>&#160;    DROPDOWN_MENU: <span class="stringliteral">&#39;dropdown-menu&#39;</span>,</div><div class="line"><a name="l06071"></a><span class="lineno"> 6071</span>&#160;    ACTIVE: <span class="stringliteral">&#39;active&#39;</span>,</div><div class="line"><a name="l06072"></a><span class="lineno"> 6072</span>&#160;    DISABLED: <span class="stringliteral">&#39;disabled&#39;</span>,</div><div class="line"><a name="l06073"></a><span class="lineno"> 6073</span>&#160;    FADE: <span class="stringliteral">&#39;fade&#39;</span>,</div><div class="line"><a name="l06074"></a><span class="lineno"> 6074</span>&#160;    SHOW: <span class="stringliteral">&#39;show&#39;</span></div><div class="line"><a name="l06075"></a><span class="lineno"> 6075</span>&#160;  };</div><div class="line"><a name="l06076"></a><span class="lineno"> 6076</span>&#160;  var Selector = {</div><div class="line"><a name="l06077"></a><span class="lineno"> 6077</span>&#160;    DROPDOWN: <span class="stringliteral">&#39;.dropdown&#39;</span>,</div><div class="line"><a name="l06078"></a><span class="lineno"> 6078</span>&#160;    NAV_LIST_GROUP: <span class="stringliteral">&#39;.nav, .list-group&#39;</span>,</div><div class="line"><a name="l06079"></a><span class="lineno"> 6079</span>&#160;    ACTIVE: <span class="stringliteral">&#39;.active&#39;</span>,</div><div class="line"><a name="l06080"></a><span class="lineno"> 6080</span>&#160;    ACTIVE_UL: <span class="stringliteral">&#39;&gt; li &gt; .active&#39;</span>,</div><div class="line"><a name="l06081"></a><span class="lineno"> 6081</span>&#160;    DATA_TOGGLE: <span class="stringliteral">&#39;[data-toggle=&quot;tab&quot;], [data-toggle=&quot;pill&quot;], [data-toggle=&quot;list&quot;]&#39;</span>,</div><div class="line"><a name="l06082"></a><span class="lineno"> 6082</span>&#160;    DROPDOWN_TOGGLE: <span class="stringliteral">&#39;.dropdown-toggle&#39;</span>,</div><div class="line"><a name="l06083"></a><span class="lineno"> 6083</span>&#160;    DROPDOWN_ACTIVE_CHILD: <span class="stringliteral">&#39;&gt; .dropdown-menu .active&#39;</span></div><div class="line"><a name="l06090"></a><span class="lineno"> 6090</span>&#160;  };</div><div class="line"><a name="l06091"></a><span class="lineno"> 6091</span>&#160;</div><div class="line"><a name="l06092"></a><span class="lineno"> 6092</span>&#160;  var Tab =</div><div class="line"><a name="l06093"></a><span class="lineno"> 6093</span>&#160;  <span class="comment">/*#__PURE__*/</span></div><div class="line"><a name="l06094"></a><span class="lineno"> 6094</span>&#160;  <span class="keyword">function</span> () {</div><div class="line"><a name="l06095"></a><span class="lineno"> 6095</span>&#160;    <span class="keyword">function</span> <a class="code" href="../../d4/d51/a00017.php#a1796b6dc9a42d7d6f1993786e3c5ec60">Tab</a>(element) {</div><div class="line"><a name="l06096"></a><span class="lineno"> 6096</span>&#160;      this._element = element;</div><div class="line"><a name="l06097"></a><span class="lineno"> 6097</span>&#160;    } <span class="comment">// Getters</span></div><div class="line"><a name="l06098"></a><span class="lineno"> 6098</span>&#160;</div><div class="line"><a name="l06099"></a><span class="lineno"> 6099</span>&#160;</div><div class="line"><a name="l06100"></a><span class="lineno"> 6100</span>&#160;    var _proto = Tab.prototype;</div><div class="line"><a name="l06101"></a><span class="lineno"> 6101</span>&#160;</div><div class="line"><a name="l06102"></a><span class="lineno"> 6102</span>&#160;    <span class="comment">// Public</span></div><div class="line"><a name="l06103"></a><span class="lineno"> 6103</span>&#160;    _proto.show = <span class="keyword">function</span> show() {</div><div class="line"><a name="l06104"></a><span class="lineno"> 6104</span>&#160;      var _this = <span class="keyword">this</span>;</div><div class="line"><a name="l06105"></a><span class="lineno"> 6105</span>&#160;</div><div class="line"><a name="l06106"></a><span class="lineno"> 6106</span>&#160;      <span class="keywordflow">if</span> (this._element.parentNode &amp;&amp; <span class="keyword">this</span>._element.parentNode.nodeType === Node.ELEMENT_NODE &amp;&amp; $$$1(<span class="keyword">this</span>._element).hasClass(ClassName.ACTIVE) || $$$1(this._element).hasClass(ClassName.DISABLED)) {</div><div class="line"><a name="l06107"></a><span class="lineno"> 6107</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l06108"></a><span class="lineno"> 6108</span>&#160;      }</div><div class="line"><a name="l06109"></a><span class="lineno"> 6109</span>&#160;</div><div class="line"><a name="l06110"></a><span class="lineno"> 6110</span>&#160;      var target;</div><div class="line"><a name="l06111"></a><span class="lineno"> 6111</span>&#160;      var previous;</div><div class="line"><a name="l06112"></a><span class="lineno"> 6112</span>&#160;      var listElement = $$$1(this._element).closest(Selector.NAV_LIST_GROUP)[0];</div><div class="line"><a name="l06113"></a><span class="lineno"> 6113</span>&#160;      var selector = Util.getSelectorFromElement(this._element);</div><div class="line"><a name="l06114"></a><span class="lineno"> 6114</span>&#160;</div><div class="line"><a name="l06115"></a><span class="lineno"> 6115</span>&#160;      <span class="keywordflow">if</span> (listElement) {</div><div class="line"><a name="l06116"></a><span class="lineno"> 6116</span>&#160;        var itemSelector = listElement.nodeName === <span class="stringliteral">&#39;UL&#39;</span> ? Selector.ACTIVE_UL : Selector.ACTIVE;</div><div class="line"><a name="l06117"></a><span class="lineno"> 6117</span>&#160;        previous = $$$1.makeArray($$$1(listElement).find(itemSelector));</div><div class="line"><a name="l06118"></a><span class="lineno"> 6118</span>&#160;        previous = previous[previous.length - 1];</div><div class="line"><a name="l06119"></a><span class="lineno"> 6119</span>&#160;      }</div><div class="line"><a name="l06120"></a><span class="lineno"> 6120</span>&#160;</div><div class="line"><a name="l06121"></a><span class="lineno"> 6121</span>&#160;      var hideEvent = $$$1.Event(Event.HIDE, {</div><div class="line"><a name="l06122"></a><span class="lineno"> 6122</span>&#160;        relatedTarget: this._element</div><div class="line"><a name="l06123"></a><span class="lineno"> 6123</span>&#160;      });</div><div class="line"><a name="l06124"></a><span class="lineno"> 6124</span>&#160;      var showEvent = $$$1.Event(Event.SHOW, {</div><div class="line"><a name="l06125"></a><span class="lineno"> 6125</span>&#160;        relatedTarget: previous</div><div class="line"><a name="l06126"></a><span class="lineno"> 6126</span>&#160;      });</div><div class="line"><a name="l06127"></a><span class="lineno"> 6127</span>&#160;</div><div class="line"><a name="l06128"></a><span class="lineno"> 6128</span>&#160;      <span class="keywordflow">if</span> (previous) {</div><div class="line"><a name="l06129"></a><span class="lineno"> 6129</span>&#160;        $$$1(previous).trigger(hideEvent);</div><div class="line"><a name="l06130"></a><span class="lineno"> 6130</span>&#160;      }</div><div class="line"><a name="l06131"></a><span class="lineno"> 6131</span>&#160;</div><div class="line"><a name="l06132"></a><span class="lineno"> 6132</span>&#160;      $$$1(this._element).trigger(showEvent);</div><div class="line"><a name="l06133"></a><span class="lineno"> 6133</span>&#160;</div><div class="line"><a name="l06134"></a><span class="lineno"> 6134</span>&#160;      <span class="keywordflow">if</span> (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) {</div><div class="line"><a name="l06135"></a><span class="lineno"> 6135</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l06136"></a><span class="lineno"> 6136</span>&#160;      }</div><div class="line"><a name="l06137"></a><span class="lineno"> 6137</span>&#160;</div><div class="line"><a name="l06138"></a><span class="lineno"> 6138</span>&#160;      <span class="keywordflow">if</span> (selector) {</div><div class="line"><a name="l06139"></a><span class="lineno"> 6139</span>&#160;        target = $$$1(selector)[0];</div><div class="line"><a name="l06140"></a><span class="lineno"> 6140</span>&#160;      }</div><div class="line"><a name="l06141"></a><span class="lineno"> 6141</span>&#160;</div><div class="line"><a name="l06142"></a><span class="lineno"> 6142</span>&#160;      this._activate(this._element, listElement);</div><div class="line"><a name="l06143"></a><span class="lineno"> 6143</span>&#160;</div><div class="line"><a name="l06144"></a><span class="lineno"> 6144</span>&#160;      var complete = <span class="keyword">function</span> complete() {</div><div class="line"><a name="l06145"></a><span class="lineno"> 6145</span>&#160;        var hiddenEvent = $$$1.Event(Event.HIDDEN, {</div><div class="line"><a name="l06146"></a><span class="lineno"> 6146</span>&#160;          relatedTarget: _this._element</div><div class="line"><a name="l06147"></a><span class="lineno"> 6147</span>&#160;        });</div><div class="line"><a name="l06148"></a><span class="lineno"> 6148</span>&#160;        var shownEvent = $$$1.Event(Event.SHOWN, {</div><div class="line"><a name="l06149"></a><span class="lineno"> 6149</span>&#160;          relatedTarget: previous</div><div class="line"><a name="l06150"></a><span class="lineno"> 6150</span>&#160;        });</div><div class="line"><a name="l06151"></a><span class="lineno"> 6151</span>&#160;        $$$1(previous).trigger(hiddenEvent);</div><div class="line"><a name="l06152"></a><span class="lineno"> 6152</span>&#160;        $$$1(_this._element).trigger(shownEvent);</div><div class="line"><a name="l06153"></a><span class="lineno"> 6153</span>&#160;      };</div><div class="line"><a name="l06154"></a><span class="lineno"> 6154</span>&#160;</div><div class="line"><a name="l06155"></a><span class="lineno"> 6155</span>&#160;      <span class="keywordflow">if</span> (target) {</div><div class="line"><a name="l06156"></a><span class="lineno"> 6156</span>&#160;        this._activate(target, target.parentNode, complete);</div><div class="line"><a name="l06157"></a><span class="lineno"> 6157</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l06158"></a><span class="lineno"> 6158</span>&#160;        complete();</div><div class="line"><a name="l06159"></a><span class="lineno"> 6159</span>&#160;      }</div><div class="line"><a name="l06160"></a><span class="lineno"> 6160</span>&#160;    };</div><div class="line"><a name="l06161"></a><span class="lineno"> 6161</span>&#160;</div><div class="line"><a name="l06162"></a><span class="lineno"> 6162</span>&#160;    _proto.dispose = <span class="keyword">function</span> dispose() {</div><div class="line"><a name="l06163"></a><span class="lineno"> 6163</span>&#160;      $$$1.removeData(this._element, DATA_KEY);</div><div class="line"><a name="l06164"></a><span class="lineno"> 6164</span>&#160;      this._element = null;</div><div class="line"><a name="l06165"></a><span class="lineno"> 6165</span>&#160;    }; <span class="comment">// Private</span></div><div class="line"><a name="l06166"></a><span class="lineno"> 6166</span>&#160;</div><div class="line"><a name="l06167"></a><span class="lineno"> 6167</span>&#160;</div><div class="line"><a name="l06168"></a><span class="lineno"> 6168</span>&#160;    _proto._activate = <span class="keyword">function</span> _activate(element, container, callback) {</div><div class="line"><a name="l06169"></a><span class="lineno"> 6169</span>&#160;      var _this2 = <span class="keyword">this</span>;</div><div class="line"><a name="l06170"></a><span class="lineno"> 6170</span>&#160;</div><div class="line"><a name="l06171"></a><span class="lineno"> 6171</span>&#160;      var activeElements;</div><div class="line"><a name="l06172"></a><span class="lineno"> 6172</span>&#160;</div><div class="line"><a name="l06173"></a><span class="lineno"> 6173</span>&#160;      <span class="keywordflow">if</span> (container.nodeName === <span class="stringliteral">&#39;UL&#39;</span>) {</div><div class="line"><a name="l06174"></a><span class="lineno"> 6174</span>&#160;        activeElements = $$$1(container).find(Selector.ACTIVE_UL);</div><div class="line"><a name="l06175"></a><span class="lineno"> 6175</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l06176"></a><span class="lineno"> 6176</span>&#160;        activeElements = $$$1(container).children(Selector.ACTIVE);</div><div class="line"><a name="l06177"></a><span class="lineno"> 6177</span>&#160;      }</div><div class="line"><a name="l06178"></a><span class="lineno"> 6178</span>&#160;</div><div class="line"><a name="l06179"></a><span class="lineno"> 6179</span>&#160;      var active = activeElements[0];</div><div class="line"><a name="l06180"></a><span class="lineno"> 6180</span>&#160;      var isTransitioning = callback &amp;&amp; Util.supportsTransitionEnd() &amp;&amp; active &amp;&amp; $$$1(active).hasClass(ClassName.FADE);</div><div class="line"><a name="l06181"></a><span class="lineno"> 6181</span>&#160;</div><div class="line"><a name="l06182"></a><span class="lineno"> 6182</span>&#160;      var complete = <span class="keyword">function</span> complete() {</div><div class="line"><a name="l06183"></a><span class="lineno"> 6183</span>&#160;        <span class="keywordflow">return</span> _this2._transitionComplete(element, active, callback);</div><div class="line"><a name="l06184"></a><span class="lineno"> 6184</span>&#160;      };</div><div class="line"><a name="l06185"></a><span class="lineno"> 6185</span>&#160;</div><div class="line"><a name="l06186"></a><span class="lineno"> 6186</span>&#160;      <span class="keywordflow">if</span> (active &amp;&amp; isTransitioning) {</div><div class="line"><a name="l06187"></a><span class="lineno"> 6187</span>&#160;        $$$1(active).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);</div><div class="line"><a name="l06188"></a><span class="lineno"> 6188</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l06189"></a><span class="lineno"> 6189</span>&#160;        complete();</div><div class="line"><a name="l06190"></a><span class="lineno"> 6190</span>&#160;      }</div><div class="line"><a name="l06191"></a><span class="lineno"> 6191</span>&#160;    };</div><div class="line"><a name="l06192"></a><span class="lineno"> 6192</span>&#160;</div><div class="line"><a name="l06193"></a><span class="lineno"> 6193</span>&#160;    _proto._transitionComplete = <span class="keyword">function</span> _transitionComplete(element, active, callback) {</div><div class="line"><a name="l06194"></a><span class="lineno"> 6194</span>&#160;      <span class="keywordflow">if</span> (active) {</div><div class="line"><a name="l06195"></a><span class="lineno"> 6195</span>&#160;        $$$1(active).removeClass(ClassName.SHOW + <span class="stringliteral">&quot; &quot;</span> + ClassName.ACTIVE);</div><div class="line"><a name="l06196"></a><span class="lineno"> 6196</span>&#160;        var dropdownChild = $$$1(active.parentNode).find(Selector.DROPDOWN_ACTIVE_CHILD)[0];</div><div class="line"><a name="l06197"></a><span class="lineno"> 6197</span>&#160;</div><div class="line"><a name="l06198"></a><span class="lineno"> 6198</span>&#160;        <span class="keywordflow">if</span> (dropdownChild) {</div><div class="line"><a name="l06199"></a><span class="lineno"> 6199</span>&#160;          $$$1(dropdownChild).removeClass(ClassName.ACTIVE);</div><div class="line"><a name="l06200"></a><span class="lineno"> 6200</span>&#160;        }</div><div class="line"><a name="l06201"></a><span class="lineno"> 6201</span>&#160;</div><div class="line"><a name="l06202"></a><span class="lineno"> 6202</span>&#160;        <span class="keywordflow">if</span> (active.getAttribute(<span class="stringliteral">&#39;role&#39;</span>) === <span class="stringliteral">&#39;tab&#39;</span>) {</div><div class="line"><a name="l06203"></a><span class="lineno"> 6203</span>&#160;          active.setAttribute(<span class="stringliteral">&#39;aria-selected&#39;</span>, <span class="keyword">false</span>);</div><div class="line"><a name="l06204"></a><span class="lineno"> 6204</span>&#160;        }</div><div class="line"><a name="l06205"></a><span class="lineno"> 6205</span>&#160;      }</div><div class="line"><a name="l06206"></a><span class="lineno"> 6206</span>&#160;</div><div class="line"><a name="l06207"></a><span class="lineno"> 6207</span>&#160;      $$$1(element).addClass(ClassName.ACTIVE);</div><div class="line"><a name="l06208"></a><span class="lineno"> 6208</span>&#160;</div><div class="line"><a name="l06209"></a><span class="lineno"> 6209</span>&#160;      <span class="keywordflow">if</span> (element.getAttribute(<span class="stringliteral">&#39;role&#39;</span>) === <span class="stringliteral">&#39;tab&#39;</span>) {</div><div class="line"><a name="l06210"></a><span class="lineno"> 6210</span>&#160;        element.setAttribute(<span class="stringliteral">&#39;aria-selected&#39;</span>, <span class="keyword">true</span>);</div><div class="line"><a name="l06211"></a><span class="lineno"> 6211</span>&#160;      }</div><div class="line"><a name="l06212"></a><span class="lineno"> 6212</span>&#160;</div><div class="line"><a name="l06213"></a><span class="lineno"> 6213</span>&#160;      Util.reflow(element);</div><div class="line"><a name="l06214"></a><span class="lineno"> 6214</span>&#160;      $$$1(element).addClass(ClassName.SHOW);</div><div class="line"><a name="l06215"></a><span class="lineno"> 6215</span>&#160;</div><div class="line"><a name="l06216"></a><span class="lineno"> 6216</span>&#160;      <span class="keywordflow">if</span> (element.parentNode &amp;&amp; $$$1(element.parentNode).hasClass(ClassName.DROPDOWN_MENU)) {</div><div class="line"><a name="l06217"></a><span class="lineno"> 6217</span>&#160;        var dropdownElement = $$$1(element).closest(Selector.DROPDOWN)[0];</div><div class="line"><a name="l06218"></a><span class="lineno"> 6218</span>&#160;</div><div class="line"><a name="l06219"></a><span class="lineno"> 6219</span>&#160;        <span class="keywordflow">if</span> (dropdownElement) {</div><div class="line"><a name="l06220"></a><span class="lineno"> 6220</span>&#160;          $$$1(dropdownElement).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE);</div><div class="line"><a name="l06221"></a><span class="lineno"> 6221</span>&#160;        }</div><div class="line"><a name="l06222"></a><span class="lineno"> 6222</span>&#160;</div><div class="line"><a name="l06223"></a><span class="lineno"> 6223</span>&#160;        element.setAttribute(<span class="stringliteral">&#39;aria-expanded&#39;</span>, <span class="keyword">true</span>);</div><div class="line"><a name="l06224"></a><span class="lineno"> 6224</span>&#160;      }</div><div class="line"><a name="l06225"></a><span class="lineno"> 6225</span>&#160;</div><div class="line"><a name="l06226"></a><span class="lineno"> 6226</span>&#160;      <span class="keywordflow">if</span> (callback) {</div><div class="line"><a name="l06227"></a><span class="lineno"> 6227</span>&#160;        callback();</div><div class="line"><a name="l06228"></a><span class="lineno"> 6228</span>&#160;      }</div><div class="line"><a name="l06229"></a><span class="lineno"> 6229</span>&#160;    }; <span class="comment">// Static</span></div><div class="line"><a name="l06230"></a><span class="lineno"> 6230</span>&#160;</div><div class="line"><a name="l06231"></a><span class="lineno"> 6231</span>&#160;</div><div class="line"><a name="l06232"></a><span class="lineno"> 6232</span>&#160;    Tab._jQueryInterface = <span class="keyword">function</span> _jQueryInterface(config) {</div><div class="line"><a name="l06233"></a><span class="lineno"> 6233</span>&#160;      <span class="keywordflow">return</span> this.<a class="code" href="../../d3/dea/a00046.php#a877963eb3bdbe10cffb2337a091a7ff1">each</a>(<span class="keyword">function</span> () {</div><div class="line"><a name="l06234"></a><span class="lineno"> 6234</span>&#160;        var $this = $$$1(<span class="keyword">this</span>);</div><div class="line"><a name="l06235"></a><span class="lineno"> 6235</span>&#160;        var <a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a> = $this.<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(DATA_KEY);</div><div class="line"><a name="l06236"></a><span class="lineno"> 6236</span>&#160;</div><div class="line"><a name="l06237"></a><span class="lineno"> 6237</span>&#160;        <span class="keywordflow">if</span> (!data) {</div><div class="line"><a name="l06238"></a><span class="lineno"> 6238</span>&#160;          data = <span class="keyword">new</span> <a class="code" href="../../d4/d51/a00017.php#a1796b6dc9a42d7d6f1993786e3c5ec60">Tab</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l06239"></a><span class="lineno"> 6239</span>&#160;          $this.<a class="code" href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a>(DATA_KEY, data);</div><div class="line"><a name="l06240"></a><span class="lineno"> 6240</span>&#160;        }</div><div class="line"><a name="l06241"></a><span class="lineno"> 6241</span>&#160;</div><div class="line"><a name="l06242"></a><span class="lineno"> 6242</span>&#160;        <span class="keywordflow">if</span> (typeof config === <span class="stringliteral">&#39;string&#39;</span>) {</div><div class="line"><a name="l06243"></a><span class="lineno"> 6243</span>&#160;          <span class="keywordflow">if</span> (typeof data[config] === <span class="stringliteral">&#39;undefined&#39;</span>) {</div><div class="line"><a name="l06244"></a><span class="lineno"> 6244</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> TypeError(<span class="stringliteral">&quot;No method named \&quot;&quot;</span> + config + <span class="stringliteral">&quot;\&quot;&quot;</span>);</div><div class="line"><a name="l06245"></a><span class="lineno"> 6245</span>&#160;          }</div><div class="line"><a name="l06246"></a><span class="lineno"> 6246</span>&#160;</div><div class="line"><a name="l06247"></a><span class="lineno"> 6247</span>&#160;          data[config]();</div><div class="line"><a name="l06248"></a><span class="lineno"> 6248</span>&#160;        }</div><div class="line"><a name="l06249"></a><span class="lineno"> 6249</span>&#160;      });</div><div class="line"><a name="l06250"></a><span class="lineno"> 6250</span>&#160;    };</div><div class="line"><a name="l06251"></a><span class="lineno"> 6251</span>&#160;</div><div class="line"><a name="l06252"></a><span class="lineno"> 6252</span>&#160;    <a class="code" href="../../d4/d51/a00017.php#a39e10dc3069b4a23aa52bea0bec60e36">_createClass</a>(Tab, null, [{</div><div class="line"><a name="l06253"></a><span class="lineno"> 6253</span>&#160;      key: <span class="stringliteral">&quot;VERSION&quot;</span>,</div><div class="line"><a name="l06254"></a><span class="lineno"> 6254</span>&#160;      <span class="keyword">get</span>: <span class="keyword">function</span> <span class="keyword">get</span>() {</div><div class="line"><a name="l06255"></a><span class="lineno"> 6255</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../db/db2/a00020.php#a3635f2df5844f69204b70bf7b3983587">VERSION</a>;</div><div class="line"><a name="l06256"></a><span class="lineno"> 6256</span>&#160;      }</div><div class="line"><a name="l06257"></a><span class="lineno"> 6257</span>&#160;    }]);</div><div class="line"><a name="l06258"></a><span class="lineno"> 6258</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#a1796b6dc9a42d7d6f1993786e3c5ec60">Tab</a>;</div><div class="line"><a name="l06259"></a><span class="lineno"> 6259</span>&#160;  }();</div><div class="line"><a name="l06267"></a><span class="lineno"> 6267</span>&#160;  $$$1(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {</div><div class="line"><a name="l06268"></a><span class="lineno"> 6268</span>&#160;    <span class="keyword">event</span>.preventDefault();</div><div class="line"><a name="l06269"></a><span class="lineno"> 6269</span>&#160;</div><div class="line"><a name="l06270"></a><span class="lineno"> 6270</span>&#160;    Tab._jQueryInterface.call($$$1(<span class="keyword">this</span>), <span class="stringliteral">&#39;show&#39;</span>);</div><div class="line"><a name="l06271"></a><span class="lineno"> 6271</span>&#160;  });</div><div class="line"><a name="l06278"></a><span class="lineno"> 6278</span>&#160;  $$$1.fn[NAME] = Tab._jQueryInterface;</div><div class="line"><a name="l06279"></a><span class="lineno"> 6279</span>&#160;  $$$1.fn[NAME].Constructor = <a class="code" href="../../d4/d51/a00017.php#a1796b6dc9a42d7d6f1993786e3c5ec60">Tab</a>;</div><div class="line"><a name="l06280"></a><span class="lineno"> 6280</span>&#160;</div><div class="line"><a name="l06281"></a><span class="lineno"> 6281</span>&#160;  $$$1.fn[NAME].noConflict = <span class="keyword">function</span> () {</div><div class="line"><a name="l06282"></a><span class="lineno"> 6282</span>&#160;    $$$1.fn[NAME] = JQUERY_NO_CONFLICT;</div><div class="line"><a name="l06283"></a><span class="lineno"> 6283</span>&#160;    <span class="keywordflow">return</span> Tab._jQueryInterface;</div><div class="line"><a name="l06284"></a><span class="lineno"> 6284</span>&#160;  };</div><div class="line"><a name="l06285"></a><span class="lineno"> 6285</span>&#160;</div><div class="line"><a name="l06286"></a><span class="lineno"> 6286</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/d51/a00017.php#a1796b6dc9a42d7d6f1993786e3c5ec60">Tab</a>;</div><div class="line"><a name="l06287"></a><span class="lineno"> 6287</span>&#160;}($);</div><div class="line"><a name="l06288"></a><span class="lineno"> 6288</span>&#160;</div><div class="line"><a name="l06296"></a><span class="lineno"> 6296</span>&#160;(<span class="keyword">function</span> ($$$1) {</div><div class="line"><a name="l06297"></a><span class="lineno"> 6297</span>&#160;  <span class="keywordflow">if</span> (typeof $$$1 === <span class="stringliteral">&#39;undefined&#39;</span>) {</div><div class="line"><a name="l06298"></a><span class="lineno"> 6298</span>&#160;    <span class="keywordflow">throw</span> <span class="keyword">new</span> TypeError(<span class="stringliteral">&#39;Bootstrap\&#39;s JavaScript requires jQuery. jQuery must be included before Bootstrap\&#39;s JavaScript.&#39;</span>);</div><div class="line"><a name="l06299"></a><span class="lineno"> 6299</span>&#160;  }</div><div class="line"><a name="l06300"></a><span class="lineno"> 6300</span>&#160;</div><div class="line"><a name="l06301"></a><span class="lineno"> 6301</span>&#160;  var <a class="code" href="../../db/db2/a00020.php#af15ce22371f8af3b38c7d40a4987b366">version</a> = $$$1.fn.jquery.split(<span class="charliteral">&#39; &#39;</span>)[0].split(<span class="charliteral">&#39;.&#39;</span>);</div><div class="line"><a name="l06302"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#ab45c8e85029d540beda13b791383683b"> 6302</a></span>&#160;  var <a class="code" href="../../d4/d51/a00017.php#ab45c8e85029d540beda13b791383683b">minMajor</a> = 1;</div><div class="line"><a name="l06303"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#aa257d76c0438aa54d422b9ff7c93182e"> 6303</a></span>&#160;  var <a class="code" href="../../d4/d51/a00017.php#aa257d76c0438aa54d422b9ff7c93182e">ltMajor</a> = 2;</div><div class="line"><a name="l06304"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#ab65218829b3656b7fbd23c5dae199cd1"> 6304</a></span>&#160;  var <a class="code" href="../../d4/d51/a00017.php#ab65218829b3656b7fbd23c5dae199cd1">minMinor</a> = 9;</div><div class="line"><a name="l06305"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a7e159562ce969efc5a491a39bec7b2d0"> 6305</a></span>&#160;  var <a class="code" href="../../d4/d51/a00017.php#a7e159562ce969efc5a491a39bec7b2d0">minPatch</a> = 1;</div><div class="line"><a name="l06306"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a581df085d40865cd480fe18169714875"> 6306</a></span>&#160;  var <a class="code" href="../../d4/d51/a00017.php#a581df085d40865cd480fe18169714875">maxMajor</a> = 4;</div><div class="line"><a name="l06307"></a><span class="lineno"> 6307</span>&#160;</div><div class="line"><a name="l06308"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a464b6f75f6d1ac2d8136c5f2be3996ec"> 6308</a></span>&#160;  <span class="keywordflow">if</span> (version[0] &lt; ltMajor &amp;&amp; version[1] &lt; minMinor || version[0] === minMajor &amp;&amp; version[1] === minMinor &amp;&amp; version[2] &lt; minPatch || version[0] &gt;= maxMajor) {</div><div class="line"><a name="l06309"></a><span class="lineno"> 6309</span>&#160;    <span class="keywordflow">throw</span> <span class="keyword">new</span> Error(<span class="stringliteral">&#39;Bootstrap\&#39;s JavaScript requires at least jQuery v1.9.1 but less than v4.0.0&#39;</span>);</div><div class="line"><a name="l06310"></a><span class="lineno"> 6310</span>&#160;  }</div><div class="line"><a name="l06311"></a><span class="lineno"> 6311</span>&#160;})($);</div><div class="line"><a name="l06312"></a><span class="lineno"> 6312</span>&#160;</div><div class="line"><a name="l06313"></a><span class="lineno"> 6313</span>&#160;<a class="code" href="../../d4/d51/a00017.php#af5eafccb5437ef09b552101a016d8c32">exports</a>.Util = <a class="code" href="../../d4/d51/a00017.php#a70b71395559d3d60a9b61ccf566f30ea">Util</a>;</div><div class="line"><a name="l06314"></a><span class="lineno"> 6314</span>&#160;<a class="code" href="../../d4/d51/a00017.php#af5eafccb5437ef09b552101a016d8c32">exports</a>.Alert = <a class="code" href="../../d4/d51/a00017.php#a7d2656468b57cd8302b39f91252cb544">Alert</a>;</div><div class="line"><a name="l06315"></a><span class="lineno"> 6315</span>&#160;<a class="code" href="../../d4/d51/a00017.php#af5eafccb5437ef09b552101a016d8c32">exports</a>.Button = <a class="code" href="../../d4/d51/a00017.php#a433ddab0735db5a5563d580ba50f0972">Button</a>;</div><div class="line"><a name="l06316"></a><span class="lineno"> 6316</span>&#160;<a class="code" href="../../d4/d51/a00017.php#af5eafccb5437ef09b552101a016d8c32">exports</a>.Carousel = <a class="code" href="../../d4/d51/a00017.php#a973fed123161d28ea502af96c99576a6">Carousel</a>;</div><div class="line"><a name="l06317"></a><span class="lineno"> 6317</span>&#160;<a class="code" href="../../d4/d51/a00017.php#af5eafccb5437ef09b552101a016d8c32">exports</a>.Collapse = <a class="code" href="../../d4/d51/a00017.php#a4df4f2a75d24a2e6a7e8a33a097c355a">Collapse</a>;</div><div class="line"><a name="l06318"></a><span class="lineno"> 6318</span>&#160;<a class="code" href="../../d4/d51/a00017.php#af5eafccb5437ef09b552101a016d8c32">exports</a>.Dropdown = <a class="code" href="../../d4/d51/a00017.php#a1ad233b38aa8a375e2ba938ca959bd15">Dropdown</a>;</div><div class="line"><a name="l06319"></a><span class="lineno"> 6319</span>&#160;<a class="code" href="../../d4/d51/a00017.php#af5eafccb5437ef09b552101a016d8c32">exports</a>.Modal = <a class="code" href="../../d4/d51/a00017.php#ac31034cff9cb6db90f2650ab2367c22f">Modal</a>;</div><div class="line"><a name="l06320"></a><span class="lineno"> 6320</span>&#160;<a class="code" href="../../d4/d51/a00017.php#af5eafccb5437ef09b552101a016d8c32">exports</a>.Popover = <a class="code" href="../../d4/d51/a00017.php#a2bf106dab0efd524a9e3f21400c0005e">Popover</a>;</div><div class="line"><a name="l06321"></a><span class="lineno"><a class="line" href="../../d4/d51/a00017.php#a1d78b68187f1cdff0641757c89a23e94"> 6321</a></span>&#160;<a class="code" href="../../d4/d51/a00017.php#af5eafccb5437ef09b552101a016d8c32">exports</a>.Scrollspy = <a class="code" href="../../d4/d51/a00017.php#a7da938810984f5d9d2a251c9d9bdb46d">ScrollSpy</a>;</div><div class="line"><a name="l06322"></a><span class="lineno"> 6322</span>&#160;<a class="code" href="../../d4/d51/a00017.php#af5eafccb5437ef09b552101a016d8c32">exports</a>.Tab = <a class="code" href="../../d4/d51/a00017.php#a1796b6dc9a42d7d6f1993786e3c5ec60">Tab</a>;</div><div class="line"><a name="l06323"></a><span class="lineno"> 6323</span>&#160;<a class="code" href="../../d4/d51/a00017.php#af5eafccb5437ef09b552101a016d8c32">exports</a>.Tooltip = <a class="code" href="../../d4/d51/a00017.php#a8bc91fbc10ac1566135a747b9c84dd3d">Tooltip</a>;</div><div class="line"><a name="l06324"></a><span class="lineno"> 6324</span>&#160;</div><div class="line"><a name="l06325"></a><span class="lineno"> 6325</span>&#160;Object.defineProperty(<a class="code" href="../../d4/d51/a00017.php#af5eafccb5437ef09b552101a016d8c32">exports</a>, <span class="stringliteral">&#39;__esModule&#39;</span>, { value: <span class="keyword">true</span> });</div><div class="line"><a name="l06326"></a><span class="lineno"> 6326</span>&#160;</div><div class="line"><a name="l06327"></a><span class="lineno"> 6327</span>&#160;})));</div><div class="line"><a name="l06328"></a><span class="lineno"> 6328</span>&#160;<span class="comment">//# sourceMappingURL=bootstrap.bundle.js.map</span></div><div class="ttc" id="a00017_php_a27737cea0ea011c8416e8a57922ded98"><div class="ttname"><a href="../../d4/d51/a00017.php#a27737cea0ea011c8416e8a57922ded98">_inheritsLoose</a></div><div class="ttdeci">function _inheritsLoose(subClass, superClass)</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l00048">bootstrap.bundle.js:48</a></div></div>
<div class="ttc" id="a00020_php_a0545907c609a48549a0cf5d4c692f851"><div class="ttname"><a href="../../db/db2/a00020.php#a0545907c609a48549a0cf5d4c692f851">Constructor</a></div><div class="ttdeci">a fn a fn alert Constructor</div><div class="ttdef"><b>Definition:</b> <a href="../../db/db2/a00020_source.php#l00006">autres/bootstrap.min.js:6</a></div></div>
<div class="ttc" id="a00017_php_ac2eea16a19b83a9509e2f9188c0fdc0f"><div class="ttname"><a href="../../d4/d51/a00017.php#ac2eea16a19b83a9509e2f9188c0fdc0f">_extends</a></div><div class="ttdeci">var _extends</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l01780">bootstrap.bundle.js:1780</a></div></div>
<div class="ttc" id="a00017_php_a4df4f2a75d24a2e6a7e8a33a097c355a"><div class="ttname"><a href="../../d4/d51/a00017.php#a4df4f2a75d24a2e6a7e8a33a097c355a">Collapse</a></div><div class="ttdeci">var Collapse</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l01035">bootstrap.bundle.js:1035</a></div></div>
<div class="ttc" id="a00017_php_a8bc91fbc10ac1566135a747b9c84dd3d"><div class="ttname"><a href="../../d4/d51/a00017.php#a8bc91fbc10ac1566135a747b9c84dd3d">Tooltip</a></div><div class="ttdeci">var Tooltip</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l04880">bootstrap.bundle.js:4880</a></div></div>
<div class="ttc" id="a00046_php_a8a938b10dab9fa9d43908785f7e2c002"><div class="ttname"><a href="../../d3/dea/a00046.php#a8a938b10dab9fa9d43908785f7e2c002">fn</a></div><div class="ttdeci">w fn</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dea/a00046_source.php#l00002">jquery.min.js:2</a></div></div>
<div class="ttc" id="a00017_php_ab34a4e248b9bfbf76de92f866779e0e6"><div class="ttname"><a href="../../d4/d51/a00017.php#ab34a4e248b9bfbf76de92f866779e0e6">Popper</a></div><div class="ttdeci">var Popper</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l03679">bootstrap.bundle.js:3679</a></div></div>
<div class="ttc" id="a00017_php_a973fed123161d28ea502af96c99576a6"><div class="ttname"><a href="../../d4/d51/a00017.php#a973fed123161d28ea502af96c99576a6">Carousel</a></div><div class="ttdeci">var Carousel</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l00536">bootstrap.bundle.js:536</a></div></div>
<div class="ttc" id="a00020_php_ae4adb159aeacba734c34bd530baf92f6"><div class="ttname"><a href="../../db/db2/a00020.php#ae4adb159aeacba734c34bd530baf92f6">TRANSITION_DURATION</a></div><div class="ttdeci">d d TRANSITION_DURATION</div><div class="ttdef"><b>Definition:</b> <a href="../../db/db2/a00020_source.php#l00006">autres/bootstrap.min.js:6</a></div></div>
<div class="ttc" id="a00017_php_aaf3dfd019b0e65fefde9702c4b377344"><div class="ttname"><a href="../../d4/d51/a00017.php#aaf3dfd019b0e65fefde9702c4b377344">createClass</a></div><div class="ttdeci">var createClass</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l01743">bootstrap.bundle.js:1743</a></div></div>
<div class="ttc" id="a00017_php_ab45c8e85029d540beda13b791383683b"><div class="ttname"><a href="../../d4/d51/a00017.php#ab45c8e85029d540beda13b791383683b">minMajor</a></div><div class="ttdeci">var minMajor</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l06302">bootstrap.bundle.js:6302</a></div></div>
<div class="ttc" id="a00017_php_a2bf106dab0efd524a9e3f21400c0005e"><div class="ttname"><a href="../../d4/d51/a00017.php#a2bf106dab0efd524a9e3f21400c0005e">Popover</a></div><div class="ttdeci">var Popover</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l05545">bootstrap.bundle.js:5545</a></div></div>
<div class="ttc" id="a00010_php_ae20e0427fb5ca9cd0a2d6a2789758220"><div class="ttname"><a href="../../d7/dec/a00010.php#ae20e0427fb5ca9cd0a2d6a2789758220">enable</a></div><div class="ttdeci">function enable(el)</div><div class="ttdoc">Enable an element. </div><div class="ttdef"><b>Definition:</b> <a href="../../d7/dec/a00010_source.php#l00588">_script.js:588</a></div></div>
<div class="ttc" id="a00021_php_aeab71244afb687f16d8c4f5ee9d6ef0e"><div class="ttname"><a href="../../de/d11/a00021.php#aeab71244afb687f16d8c4f5ee9d6ef0e">n</a></div><div class="ttdeci">function n</div><div class="ttdef"><b>Definition:</b> <a href="../../de/d11/a00021_source.php#l00006">bootstrap/bootstrap.min.js:6</a></div></div>
<div class="ttc" id="a00049_php_a48e18769649a3ca5bab0fafdec44cb15"><div class="ttname"><a href="../../d2/dee/a00049.php#a48e18769649a3ca5bab0fafdec44cb15">map</a></div><div class="ttdeci">var map</div><div class="ttdoc">Map of the regions. </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/dee/a00049_source.php#l00035">map.js:35</a></div></div>
<div class="ttc" id="a00017_php_a1796b6dc9a42d7d6f1993786e3c5ec60"><div class="ttname"><a href="../../d4/d51/a00017.php#a1796b6dc9a42d7d6f1993786e3c5ec60">Tab</a></div><div class="ttdeci">var Tab</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l06049">bootstrap.bundle.js:6049</a></div></div>
<div class="ttc" id="a00017_php_a817fcb70b363027b28fec000da90139a"><div class="ttname"><a href="../../d4/d51/a00017.php#a817fcb70b363027b28fec000da90139a">defineProperty</a></div><div class="ttdeci">var defineProperty</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l01765">bootstrap.bundle.js:1765</a></div></div>
<div class="ttc" id="a00020_php_a006fe6a2a254572b367123c6db401ff3"><div class="ttname"><a href="../../db/db2/a00020.php#a006fe6a2a254572b367123c6db401ff3">emulateTransitionEnd</a></div><div class="ttdeci">a fn emulateTransitionEnd</div><div class="ttdef"><b>Definition:</b> <a href="../../db/db2/a00020_source.php#l00006">autres/bootstrap.min.js:6</a></div></div>
<div class="ttc" id="a00017_php_abf075bdbe59fd2c3336ed052c9c72b31"><div class="ttname"><a href="../../d4/d51/a00017.php#abf075bdbe59fd2c3336ed052c9c72b31">factory</a></div><div class="ttdeci">function factory</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l00006">bootstrap.bundle.js:6</a></div></div>
<div class="ttc" id="a00020_php_ae8f6b400ed3390908c5cdeebed3a82b9"><div class="ttname"><a href="../../db/db2/a00020.php#ae8f6b400ed3390908c5cdeebed3a82b9">a</a></div><div class="ttdeci">function a</div><div class="ttdef"><b>Definition:</b> <a href="../../db/db2/a00020_source.php#l00006">autres/bootstrap.min.js:6</a></div></div>
<div class="ttc" id="a00017_php_a6cf88445ea7151cc8e81dc4b0cb8de77"><div class="ttname"><a href="../../d4/d51/a00017.php#a6cf88445ea7151cc8e81dc4b0cb8de77">getViewportOffsetRectRelativeToArtbitraryNode</a></div><div class="ttdeci">function getViewportOffsetRectRelativeToArtbitraryNode(element)</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l01909">bootstrap.bundle.js:1909</a></div></div>
<div class="ttc" id="a00046_php_a877963eb3bdbe10cffb2337a091a7ff1"><div class="ttname"><a href="../../d3/dea/a00046.php#a877963eb3bdbe10cffb2337a091a7ff1">each</a></div><div class="ttdeci">function w each(&quot;Boolean Number String Function Array Date RegExp Object Error Symbol&quot;.split(&quot; &quot;), function(e, t){l[&quot;[object &quot;+t+&quot;]&quot;]=t.toLowerCase()})</div></div>
<div class="ttc" id="a00018_php_a0e13cb15ff3d6fbe4b9cd26ef446070e"><div class="ttname"><a href="../../d1/d2b/a00018.php#a0e13cb15ff3d6fbe4b9cd26ef446070e">Z</a></div><div class="ttdeci">var Z</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d2b/a00018_source.php#l00006">bootstrap.bundle.min.js:6</a></div></div>
<div class="ttc" id="a00020_php_a72fbb3628c3cc943ced8aad64247888c"><div class="ttname"><a href="../../db/db2/a00020.php#a72fbb3628c3cc943ced8aad64247888c">close</a></div><div class="ttdeci">d d d prototype close</div><div class="ttdef"><b>Definition:</b> <a href="../../db/db2/a00020_source.php#l00006">autres/bootstrap.min.js:6</a></div></div>
<div class="ttc" id="a00017_php_a7da938810984f5d9d2a251c9d9bdb46d"><div class="ttname"><a href="../../d4/d51/a00017.php#a7da938810984f5d9d2a251c9d9bdb46d">ScrollSpy</a></div><div class="ttdeci">var ScrollSpy</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l05738">bootstrap.bundle.js:5738</a></div></div>
<div class="ttc" id="a00017_php_addc9193a1db02e0d80e6dfe0eb7321c6"><div class="ttname"><a href="../../d4/d51/a00017.php#addc9193a1db02e0d80e6dfe0eb7321c6">isBrowser</a></div><div class="ttdeci">var isBrowser</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l01421">bootstrap.bundle.js:1421</a></div></div>
<div class="ttc" id="a00017_php_a82ae6814d07287d0c9be02efec53e216"><div class="ttname"><a href="../../d4/d51/a00017.php#a82ae6814d07287d0c9be02efec53e216">Defaults</a></div><div class="ttdeci">var Defaults</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l03621">bootstrap.bundle.js:3621</a></div></div>
<div class="ttc" id="a00017_php_a1086dd4e23ce39ca6cf57fb61ac759c7"><div class="ttname"><a href="../../d4/d51/a00017.php#a1086dd4e23ce39ca6cf57fb61ac759c7">debounce</a></div><div class="ttdeci">var debounce</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l01469">bootstrap.bundle.js:1469</a></div></div>
<div class="ttc" id="a00017_php_af5eafccb5437ef09b552101a016d8c32"><div class="ttname"><a href="../../d4/d51/a00017.php#af5eafccb5437ef09b552101a016d8c32">exports</a></div><div class="ttdeci">function exports</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l00010">bootstrap.bundle.js:10</a></div></div>
<div class="ttc" id="a00046_php_a5e25b1d1bed9ab5f3174b76d6a722180"><div class="ttname"><a href="../../d3/dea/a00046.php#a5e25b1d1bed9ab5f3174b76d6a722180">i</a></div><div class="ttdeci">var i</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dea/a00046_source.php#l00002">jquery.min.js:2</a></div></div>
<div class="ttc" id="a00017_php_aa26c4a814e420d16eaf5c7ac49b667d9"><div class="ttname"><a href="../../d4/d51/a00017.php#aa26c4a814e420d16eaf5c7ac49b667d9">getWindowSizes</a></div><div class="ttdeci">function getWindowSizes()</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l01726">bootstrap.bundle.js:1726</a></div></div>
<div class="ttc" id="a00046_php_ae21cc36bf0d65014c717a481a3f8a468"><div class="ttname"><a href="../../d3/dea/a00046.php#ae21cc36bf0d65014c717a481a3f8a468">undefined</a></div><div class="ttdeci">undefined</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dea/a00046_source.php#l00002">jquery.min.js:2</a></div></div>
<div class="ttc" id="a00010_php_a6667c3e0f03757bf309b971ac3b7baa2"><div class="ttname"><a href="../../d7/dec/a00010.php#a6667c3e0f03757bf309b971ac3b7baa2">disable</a></div><div class="ttdeci">function disable(el)</div><div class="ttdoc">Disable an element. </div><div class="ttdef"><b>Definition:</b> <a href="../../d7/dec/a00010_source.php#l00579">_script.js:579</a></div></div>
<div class="ttc" id="a00017_php_a70b71395559d3d60a9b61ccf566f30ea"><div class="ttname"><a href="../../d4/d51/a00017.php#a70b71395559d3d60a9b61ccf566f30ea">Util</a></div><div class="ttdeci">var Util</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l00061">bootstrap.bundle.js:61</a></div></div>
<div class="ttc" id="a00017_php_a433ddab0735db5a5563d580ba50f0972"><div class="ttname"><a href="../../d4/d51/a00017.php#a433ddab0735db5a5563d580ba50f0972">Button</a></div><div class="ttdeci">var Button</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l00373">bootstrap.bundle.js:373</a></div></div>
<div class="ttc" id="a00017_php_ab65218829b3656b7fbd23c5dae199cd1"><div class="ttname"><a href="../../d4/d51/a00017.php#ab65218829b3656b7fbd23c5dae199cd1">minMinor</a></div><div class="ttdeci">var minMinor</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l06304">bootstrap.bundle.js:6304</a></div></div>
<div class="ttc" id="a00017_php_aeb61d371b221f357127ed7331e93f95b"><div class="ttname"><a href="../../d4/d51/a00017.php#aeb61d371b221f357127ed7331e93f95b">longerTimeoutBrowsers</a></div><div class="ttdeci">var longerTimeoutBrowsers</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l01422">bootstrap.bundle.js:1422</a></div></div>
<div class="ttc" id="a00021_php_a81e910173af87b1161e719a504d52407"><div class="ttname"><a href="../../de/d11/a00021.php#a81e910173af87b1161e719a504d52407">x</a></div><div class="ttdeci">var x</div><div class="ttdef"><b>Definition:</b> <a href="../../de/d11/a00021_source.php#l00006">bootstrap/bootstrap.min.js:6</a></div></div>
<div class="ttc" id="a00017_php_a9fa3042e5a4ee75afbc234ea2261f2dc"><div class="ttname"><a href="../../d4/d51/a00017.php#a9fa3042e5a4ee75afbc234ea2261f2dc">getArea</a></div><div class="ttdeci">function getArea(_ref)</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l02006">bootstrap.bundle.js:2006</a></div></div>
<div class="ttc" id="a00017_php_a581df085d40865cd480fe18169714875"><div class="ttname"><a href="../../d4/d51/a00017.php#a581df085d40865cd480fe18169714875">maxMajor</a></div><div class="ttdeci">var maxMajor</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l06306">bootstrap.bundle.js:6306</a></div></div>
<div class="ttc" id="a00017_php_a0e37ae01d446a8be7bf004a86805ffa6"><div class="ttname"><a href="../../d4/d51/a00017.php#a0e37ae01d446a8be7bf004a86805ffa6">placements</a></div><div class="ttdeci">var placements</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l02792">bootstrap.bundle.js:2792</a></div></div>
<div class="ttc" id="a00020_php_a55e170814e74f6c3db8ae9ea3ba9054f"><div class="ttname"><a href="../../db/db2/a00020.php#a55e170814e74f6c3db8ae9ea3ba9054f">button</a></div><div class="ttdeci">a fn button</div><div class="ttdef"><b>Definition:</b> <a href="../../db/db2/a00020_source.php#l00006">autres/bootstrap.min.js:6</a></div></div>
<div class="ttc" id="a00017_php_a0183381b0aa13f5c36d406bb7071d2cc"><div class="ttname"><a href="../../d4/d51/a00017.php#a0183381b0aa13f5c36d406bb7071d2cc">taskDebounce</a></div><div class="ttdeci">function taskDebounce(fn)</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l01445">bootstrap.bundle.js:1445</a></div></div>
<div class="ttc" id="a00017_php_aa257d76c0438aa54d422b9ff7c93182e"><div class="ttname"><a href="../../d4/d51/a00017.php#aa257d76c0438aa54d422b9ff7c93182e">ltMajor</a></div><div class="ttdeci">var ltMajor</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l06303">bootstrap.bundle.js:6303</a></div></div>
<div class="ttc" id="a00020_php_af15ce22371f8af3b38c7d40a4987b366"><div class="ttname"><a href="../../db/db2/a00020.php#af15ce22371f8af3b38c7d40a4987b366">version</a></div><div class="ttdeci">but lower than version(jQuery)</div></div>
<div class="ttc" id="a00017_php_a6f99b2261196d1f2c9d5d035bb47bf40"><div class="ttname"><a href="../../d4/d51/a00017.php#a6f99b2261196d1f2c9d5d035bb47bf40">getBordersSize</a></div><div class="ttdeci">function getBordersSize(styles, axis)</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l01700">bootstrap.bundle.js:1700</a></div></div>
<div class="ttc" id="a00017_php_a1fe412e3e396aa0250776634a65b544c"><div class="ttname"><a href="../../d4/d51/a00017.php#a1fe412e3e396aa0250776634a65b544c">isOffsetContainer</a></div><div class="ttdeci">function isOffsetContainer(element)</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l01577">bootstrap.bundle.js:1577</a></div></div>
<div class="ttc" id="a00020_php_aeb337d295abaddb5ec3cb34cc2e2bbc9"><div class="ttname"><a href="../../db/db2/a00020.php#aeb337d295abaddb5ec3cb34cc2e2bbc9">d</a></div><div class="ttdeci">var d</div><div class="ttdef"><b>Definition:</b> <a href="../../db/db2/a00020_source.php#l00006">autres/bootstrap.min.js:6</a></div></div>
<div class="ttc" id="a00017_php_a39e10dc3069b4a23aa52bea0bec60e36"><div class="ttname"><a href="../../d4/d51/a00017.php#a39e10dc3069b4a23aa52bea0bec60e36">_createClass</a></div><div class="ttdeci">function _createClass(Constructor, protoProps, staticProps)</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l00024">bootstrap.bundle.js:24</a></div></div>
<div class="ttc" id="a00069_php"><div class="ttname"><a href="../../d4/d31/a00069.php">modifiers</a></div></div>
<div class="ttc" id="a00017_php_afc40ee311a39fef1f778824d2059d426"><div class="ttname"><a href="../../d4/d51/a00017.php#afc40ee311a39fef1f778824d2059d426">timeoutDuration</a></div><div class="ttdeci">var timeoutDuration</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l01423">bootstrap.bundle.js:1423</a></div></div>
<div class="ttc" id="a00017_php_aec6c1ccd0838ded5f3b5e2ce3196d4db"><div class="ttname"><a href="../../d4/d51/a00017.php#aec6c1ccd0838ded5f3b5e2ce3196d4db">BEHAVIORS</a></div><div class="ttdeci">var BEHAVIORS</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l02815">bootstrap.bundle.js:2815</a></div></div>
<div class="ttc" id="a00049_php_af873e7c3edea50d105e73b055c6bdacf"><div class="ttname"><a href="../../d2/dee/a00049.php#af873e7c3edea50d105e73b055c6bdacf">width</a></div><div class="ttdeci">var width</div><div class="ttdef"><b>Definition:</b> <a href="../../d2/dee/a00049_source.php#l00029">map.js:29</a></div></div>
<div class="ttc" id="a00017_php_a4ccf3b6984f59af0bfb81b608fd51477"><div class="ttname"><a href="../../d4/d51/a00017.php#a4ccf3b6984f59af0bfb81b608fd51477">validPlacements</a></div><div class="ttdeci">var validPlacements</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l02795">bootstrap.bundle.js:2795</a></div></div>
<div class="ttc" id="a00017_php_abf8f67cf88551441a1896c50ffd6c8e4"><div class="ttname"><a href="../../d4/d51/a00017.php#abf8f67cf88551441a1896c50ffd6c8e4">supportsMicroTasks</a></div><div class="ttdeci">var supportsMicroTasks</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l01458">bootstrap.bundle.js:1458</a></div></div>
<div class="ttc" id="a00017_php_a1ad233b38aa8a375e2ba938ca959bd15"><div class="ttname"><a href="../../d4/d51/a00017.php#a1ad233b38aa8a375e2ba938ca959bd15">Dropdown</a></div><div class="ttdeci">var Dropdown</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l03839">bootstrap.bundle.js:3839</a></div></div>
<div class="ttc" id="a00020_php_ab5902775854a8b8440bcd25e0fe1c120"><div class="ttname"><a href="../../db/db2/a00020.php#ab5902775854a8b8440bcd25e0fe1c120">e</a></div><div class="ttdeci">var e</div><div class="ttdef"><b>Definition:</b> <a href="../../db/db2/a00020_source.php#l00006">autres/bootstrap.min.js:6</a></div></div>
<div class="ttc" id="a00044_php_a20b6cd228a69593c03af5dc445393936"><div class="ttname"><a href="../../d5/df9/a00044.php#a20b6cd228a69593c03af5dc445393936">data</a></div><div class="ttdeci">var data</div><div class="ttdef"><b>Definition:</b> <a href="../../d5/df9/a00044_source.php#l00008">jeu.js:8</a></div></div>
<div class="ttc" id="a00017_php_a2e40d59c35a8f8b89e1caa872d0a0f56"><div class="ttname"><a href="../../d4/d51/a00017.php#a2e40d59c35a8f8b89e1caa872d0a0f56">microtaskDebounce</a></div><div class="ttdeci">function microtaskDebounce(fn)</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l01431">bootstrap.bundle.js:1431</a></div></div>
<div class="ttc" id="a00017_php_ab1a56442bacbc27c3a4e72aee080e209"><div class="ttname"><a href="../../d4/d51/a00017.php#ab1a56442bacbc27c3a4e72aee080e209">getOffsetRectRelativeToArbitraryNode</a></div><div class="ttdeci">function getOffsetRectRelativeToArbitraryNode(children, parent)</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l01864">bootstrap.bundle.js:1864</a></div></div>
<div class="ttc" id="a00017_php_acf179fee398e6c6ca0aa3bfe412c95fc"><div class="ttname"><a href="../../d4/d51/a00017.php#acf179fee398e6c6ca0aa3bfe412c95fc">getWindow</a></div><div class="ttdeci">function getWindow(element)</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l02351">bootstrap.bundle.js:2351</a></div></div>
<div class="ttc" id="a00017_php_afdf7dbd507451f3148f2fe067eb7fc30"><div class="ttname"><a href="../../d4/d51/a00017.php#afdf7dbd507451f3148f2fe067eb7fc30">isIE10</a></div><div class="ttdeci">var isIE10</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l01713">bootstrap.bundle.js:1713</a></div></div>
<div class="ttc" id="a00064_php_a07a2aabd64594dc36dd810cad2669deb"><div class="ttname"><a href="../../df/d5f/a00064.php#a07a2aabd64594dc36dd810cad2669deb">input</a></div><div class="ttdeci">var input</div><div class="ttdef"><b>Definition:</b> <a href="../../df/d5f/a00064_source.php#l00017">stars.js:17</a></div></div>
<div class="ttc" id="a00020_php_aa8e797a9bda5e7e313be3518054164a3"><div class="ttname"><a href="../../db/db2/a00020.php#aa8e797a9bda5e7e313be3518054164a3">toggle</a></div><div class="ttdeci">c c c prototype c prototype toggle</div><div class="ttdef"><b>Definition:</b> <a href="../../db/db2/a00020_source.php#l00006">autres/bootstrap.min.js:6</a></div></div>
<div class="ttc" id="a00017_php_a57efe929cc6b44042891d05e15cec785"><div class="ttname"><a href="../../d4/d51/a00017.php#a57efe929cc6b44042891d05e15cec785">global</a></div><div class="ttdeci">function global</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l00006">bootstrap.bundle.js:6</a></div></div>
<div class="ttc" id="a00017_php_a7e159562ce969efc5a491a39bec7b2d0"><div class="ttname"><a href="../../d4/d51/a00017.php#a7e159562ce969efc5a491a39bec7b2d0">minPatch</a></div><div class="ttdeci">var minPatch</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l06305">bootstrap.bundle.js:6305</a></div></div>
<div class="ttc" id="a00017_php_a7d2656468b57cd8302b39f91252cb544"><div class="ttname"><a href="../../d4/d51/a00017.php#a7d2656468b57cd8302b39f91252cb544">Alert</a></div><div class="ttdeci">var Alert</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l00201">bootstrap.bundle.js:201</a></div></div>
<div class="ttc" id="a00017_php_a5d33c8c99f4895dc1c7032a3d8550511"><div class="ttname"><a href="../../d4/d51/a00017.php#a5d33c8c99f4895dc1c7032a3d8550511">attachToScrollParents</a></div><div class="ttdeci">function attachToScrollParents(scrollParent, event, callback, scrollParents)</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l02356">bootstrap.bundle.js:2356</a></div></div>
<div class="ttc" id="a00021_php_a103df269476e78897c9c4c6cb8f4eb06"><div class="ttname"><a href="../../de/d11/a00021.php#a103df269476e78897c9c4c6cb8f4eb06">g</a></div><div class="ttdeci">var g</div><div class="ttdef"><b>Definition:</b> <a href="../../de/d11/a00021_source.php#l00006">bootstrap/bootstrap.min.js:6</a></div></div>
<div class="ttc" id="a00021_php_a0b31909b1cae9ed1db6ff042057fce60"><div class="ttname"><a href="../../de/d11/a00021.php#a0b31909b1cae9ed1db6ff042057fce60">y</a></div><div class="ttdeci">var y</div><div class="ttdef"><b>Definition:</b> <a href="../../de/d11/a00021_source.php#l00006">bootstrap/bootstrap.min.js:6</a></div></div>
<div class="ttc" id="a00020_php_a3635f2df5844f69204b70bf7b3983587"><div class="ttname"><a href="../../db/db2/a00020.php#a3635f2df5844f69204b70bf7b3983587">VERSION</a></div><div class="ttdeci">d VERSION</div><div class="ttdef"><b>Definition:</b> <a href="../../db/db2/a00020_source.php#l00006">autres/bootstrap.min.js:6</a></div></div>
<div class="ttc" id="a00017_php_ad5264b1ac651bfff3aa367a0eb3dd3c5"><div class="ttname"><a href="../../d4/d51/a00017.php#ad5264b1ac651bfff3aa367a0eb3dd3c5">_defineProperties</a></div><div class="ttdeci">function _defineProperties(target, props)</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l00014">bootstrap.bundle.js:14</a></div></div>
<div class="ttc" id="a00017_php_aa5a2e5bf0a535a30a11262d9df06151b"><div class="ttname"><a href="../../d4/d51/a00017.php#aa5a2e5bf0a535a30a11262d9df06151b">classCallCheck</a></div><div class="ttdeci">var classCallCheck</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l01737">bootstrap.bundle.js:1737</a></div></div>
<div class="ttc" id="a00020_php_ac0431efac4d7c393d1e70b86115cb93f"><div class="ttname"><a href="../../db/db2/a00020.php#ac0431efac4d7c393d1e70b86115cb93f">b</a></div><div class="ttdeci">var b</div><div class="ttdef"><b>Definition:</b> <a href="../../db/db2/a00020_source.php#l00006">autres/bootstrap.min.js:6</a></div></div>
<div class="ttc" id="a00046_php_ad9a7d92cb87932d25187fdec3ba1b621"><div class="ttname"><a href="../../d3/dea/a00046.php#ad9a7d92cb87932d25187fdec3ba1b621">s</a></div><div class="ttdeci">var s</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dea/a00046_source.php#l00002">jquery.min.js:2</a></div></div>
<div class="ttc" id="a00017_php_a08e668616aad32cf43ed2ca4d2af7182"><div class="ttname"><a href="../../d4/d51/a00017.php#a08e668616aad32cf43ed2ca4d2af7182">includeScroll</a></div><div class="ttdeci">function includeScroll(rect, element)</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l01677">bootstrap.bundle.js:1677</a></div></div>
<div class="ttc" id="a00017_php_ac31034cff9cb6db90f2650ab2367c22f"><div class="ttname"><a href="../../d4/d51/a00017.php#ac31034cff9cb6db90f2650ab2367c22f">Modal</a></div><div class="ttdeci">var Modal</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l04304">bootstrap.bundle.js:4304</a></div></div>
<div class="ttc" id="a00017_php_a8214a24c6c0e45b5479c63b473cc6ce6"><div class="ttname"><a href="../../d4/d51/a00017.php#a8214a24c6c0e45b5479c63b473cc6ce6">getSize</a></div><div class="ttdeci">function getSize(axis, body, html, computedStyle)</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d51/a00017_source.php#l01722">bootstrap.bundle.js:1722</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_2867b8401105090ba43035c8b1fd9c0c.php">js</a></li><li class="navelem"><a class="el" href="../../dir_50bae84d6b514f2657cf039fb05a19d6.php">bases</a></li><li class="navelem"><a class="el" href="../../dir_c4b901946932eaa63527c32fb86946a7.php">bootstrap</a></li><li class="navelem"><a class="el" href="../../d4/d51/a00017.php">bootstrap.bundle.js</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
